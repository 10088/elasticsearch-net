:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/7.0

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/7.x/src/Tests/Tests/ClientConcepts/Connection/ConfigurationOptions.doc.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[configuration-options]]
=== Configuration options

Connecting to Elasticsearch with <<elasticsearch-net-getting-started,Elasticsearch.Net>> and <<nest-getting-started,NEST>> is easy, but
it's entirely possible that you'd like to change the default connection behaviour. There are a number of configuration options available
on `ConnectionSettings` (and `ConnectionConfiguration` for Elasticsearch.Net) that can be used to control
how the clients interact with Elasticsearch.

==== Options on ConnectionConfiguration

The following is a list of available connection configuration options on `ConnectionConfiguration`; since
`ConnectionSettings` derives from `ConnectionConfiguration`, these options are available for both
Elasticsearch.Net and NEST:

:xml-docs: Elasticsearch.Net:ConnectionConfiguration`1

==== Options on ConnectionSettings

The following is a list of available connection configuration options on `ConnectionSettings`:

:xml-docs: Nest:ConnectionSettingsBase`1

Here's an example to demonstrate setting several configuration options using the low level client

[source,csharp]
----
var connectionConfiguration = new ConnectionConfiguration()
    .DisableAutomaticProxyDetection()
    .EnableHttpCompression()
    .DisableDirectStreaming()
    .PrettyJson()
    .RequestTimeout(TimeSpan.FromMinutes(2));

var lowLevelClient = new ElasticLowLevelClient(connectionConfiguration);
----

And with the high level client

[source,csharp]
----
var connectionSettings = new ConnectionSettings()
    .DefaultMappingFor<Project>(i => i
        .IndexName("my-projects")
    )
    .EnableDebugMode()
    .PrettyJson()
    .RequestTimeout(TimeSpan.FromMinutes(2));

var client = new ElasticClient(connectionSettings);
----

[NOTE]
====
Basic Authentication credentials can alternatively be specified on the node URI directly

[source,csharp]
----
var uri = new Uri("http://username:password@localhost:9200");
var settings = new ConnectionConfiguration(uri);
----

but this can be awkward when using connection pooling with multiple nodes, especially when the connection pool
used is one that is capable of reseeding iteslf. For this reason, we'd recommend specifying credentials
on `ConnectionSettings`.

====

