[[nest-breaking-changes]]
== NEST Breaking Changes

[float]
=== `Nest.AcknowledgedResponseBase`

[horizontal]
`Acknowledged` property getter::
changed to non-virtual.
`IsValid` property:: added

[float]
=== `Nest.AcknowledgeWatchDescriptor`

[horizontal]
`AcknowledgeWatchDescriptor()` method:: added
`AcknowledgeWatchDescriptor(Id)` method::
Parameter name changed from `watch_id` to `watchId`.
`AcknowledgeWatchDescriptor(Id, Ids)` method:: added
`ActionId(ActionIds)` method:: deleted
`ActionId(Ids)` method:: added
`MasterTimeout(Time)` method:: deleted

[float]
=== `Nest.AcknowledgeWatchRequest`

[horizontal]
`AcknowledgeWatchRequest()` method:: added
`AcknowledgeWatchRequest(Id)` method::
Parameter name changed from `watch_id` to `watchId`.
`AcknowledgeWatchRequest(Id, ActionIds)` method:: deleted
`AcknowledgeWatchRequest(Id, Ids)` method:: added
`MasterTimeout` property:: deleted

[float]
=== `Nest.AcknowledgeWatchResponse`

[horizontal]
`Status` property getter::
changed to non-virtual.

[float]
=== `Nest.ActionIds`

[horizontal]
type:: deleted


[float]
=== `Nest.ActionsDescriptor`

[horizontal]
`HipChat(String, Func<HipChatActionDescriptor, IHipChatAction>)` method:: deleted



[float]
=== `Nest.ActivateWatchDescriptor`

[horizontal]
`ActivateWatchDescriptor()` method:: added
`ActivateWatchDescriptor(Id)` method::
Parameter name changed from `watch_id` to `watchId`.
`MasterTimeout(Time)` method:: deleted

[float]
=== `Nest.ActivateWatchRequest`

[horizontal]
`ActivateWatchRequest()` method:: added
`ActivateWatchRequest(Id)` method::
Parameter name changed from `watch_id` to `watchId`.
`MasterTimeout` property:: deleted

[float]
=== `Nest.ActivateWatchResponse`

[horizontal]
`Status` property getter::
changed to non-virtual.




[float]
=== `Nest.AggregateDictionary`

[horizontal]
`IpRange(String)` method::
Member type changed from `MultiBucketAggregate<RangeBucket>` to `MultiBucketAggregate<IpRangeBucket>`.
`SignificantTerms(String)` method::
Member type changed from `SignificantTermsAggregate` to `SignificantTermsAggregate<String>`.
`SignificantTerms<TKey>(String)` method:: added
`SignificantText(String)` method::
Member type changed from `SignificantTermsAggregate` to `SignificantTermsAggregate<String>`.
`SignificantText<TKey>(String)` method:: added











[float]
=== `Nest.AliasExistsDescriptor`

[horizontal]
`AliasExistsDescriptor()` method::
Member is less visible.
`AliasExistsDescriptor(Indices, Names)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`Name(Names)` method:: deleted

[float]
=== `Nest.AliasExistsRequest`

[horizontal]
`AliasExistsRequest()` method:: added






[float]
=== `Nest.AllocationId`

[horizontal]
type:: deleted



[float]
=== `Nest.AnalysisConfigDescriptor<T>`

[horizontal]
`CategorizationFieldName(Expression<Func<T, Object>>)` method:: deleted
`CategorizationFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`SummaryCountFieldName(Expression<Func<T, Object>>)` method:: deleted
`SummaryCountFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.AnalyzeCharFilters`

[horizontal]
`Add(String)` method:: added

[float]
=== `Nest.AnalyzeDescriptor`

[horizontal]
`AnalyzeDescriptor(IndexName)` method:: added
`Field<T, TValue>(Expression<Func<T, TValue>>)` method:: added
`Format(Nullable<Format>)` method:: deleted
`PreferLocal(Nullable<Boolean>)` method:: deleted


[float]
=== `Nest.AnalyzeRequest`

[horizontal]
`Format` property:: deleted
`PreferLocal` property:: deleted

[float]
=== `Nest.AnalyzeResponse`

[horizontal]
`Detail` property getter::
changed to non-virtual.
`Tokens` property getter::
changed to non-virtual.



[float]
=== `Nest.AnalyzeTokenFiltersDescriptor`

[horizontal]
`Standard(Func<StandardTokenFilterDescriptor, IStandardTokenFilter>)` method:: deleted





[float]
=== `Nest.ApiKeys`

[horizontal]
`Creation` property setter::
Member is more visible.
`Expiration` property setter::
Member is more visible.
`Id` property setter::
Member is more visible.
`Invalidated` property setter::
Member is more visible.
`Name` property setter::
Member is more visible.
`Realm` property setter::
Member is more visible.
`Username` property setter::
Member is more visible.

[float]
=== `Nest.AppendProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.ApplicationPrivilegesDescriptor`

[horizontal]
`Add<T>(Func<ApplicationPrivilegesDescriptor<T>, IApplicationPrivileges>)` method:: deleted
`Application(String)` method:: added
`Privileges(IEnumerable<String>)` method:: added
`Privileges(String[])` method:: added
`Resources(IEnumerable<String>)` method:: added
`Resources(String[])` method:: added

[float]
=== `Nest.ApplicationPrivilegesDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.ApplicationPrivilegesListDescriptor`

[horizontal]
type:: added




[float]
=== `Nest.AttachmentProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`IndexedCharactersField(Expression<Func<T, Object>>)` method:: deleted
`IndexedCharactersField<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.AuthenticateResponse`

[horizontal]
`AuthenticationRealm` property getter::
changed to non-virtual.
`Email` property getter::
changed to non-virtual.
`FullName` property getter::
changed to non-virtual.
`LookupRealm` property getter::
changed to non-virtual.
`Metadata` property getter::
changed to non-virtual.
`Roles` property getter::
changed to non-virtual.
`Username` property getter::
changed to non-virtual.

[float]
=== `Nest.AutoDateHistogramAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added





[float]
=== `Nest.BlockingSubscribeExtensions`

[horizontal]
`Wait<T>(BulkAllObservable<T>, TimeSpan, Action<BulkAllResponse>)` method:: added
`Wait<T>(BulkAllObservable<T>, TimeSpan, Action<IBulkAllResponse>)` method:: deleted
`Wait(IObservable<BulkAllResponse>, TimeSpan, Action<BulkAllResponse>)` method:: added
`Wait(IObservable<IBulkAllResponse>, TimeSpan, Action<IBulkAllResponse>)` method:: deleted

[float]
=== `Nest.BlockState`

[horizontal]
type:: deleted




[float]
=== `Nest.BucketAggregate`

[horizontal]
`Meta` property setter::
changed to non-virtual.

[float]
=== `Nest.BucketAggregateBase`

[horizontal]
`Meta` property setter::
changed to non-virtual.

[float]
=== `Nest.BucketAggregationDescriptorBase<TBucketAggregation, TBucketAggregationInterface, T>`

[horizontal]
`Assign(Action<TBucketAggregationInterface>)` method:: deleted


[float]
=== `Nest.BulkAliasDescriptor`

[horizontal]
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.BulkAllDescriptor<T>`

[horizontal]
`DroppedDocumentCallback(Action<BulkResponseItemBase, T>)` method:: added
`DroppedDocumentCallback(Action<IBulkResponseItem, T>)` method:: deleted
`Refresh(Nullable<Refresh>)` method:: deleted
`RetryDocumentPredicate(Func<BulkResponseItemBase, T, Boolean>)` method:: added
`RetryDocumentPredicate(Func<IBulkResponseItem, T, Boolean>)` method:: deleted
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted

[float]
=== `Nest.BulkAllObservable<T>`

[horizontal]
`Subscribe(IObserver<BulkAllResponse>)` method:: added
`Subscribe(IObserver<IBulkAllResponse>)` method:: deleted
`IsDisposed` property:: deleted

[float]
=== `Nest.BulkAllObserver`

[horizontal]
`BulkAllObserver(Action<BulkAllResponse>, Action<Exception>, Action)` method:: added
`BulkAllObserver(Action<IBulkAllResponse>, Action<Exception>, Action)` method:: deleted

[float]
=== `Nest.BulkAllRequest<T>`

[horizontal]
`Refresh` property:: deleted
`Type` property:: deleted

[float]
=== `Nest.BulkAllResponse`

[horizontal]
`IsValid` property:: deleted
`Items` property getter::
changed to non-virtual.
`Page` property getter::
changed to non-virtual.
`Retries` property getter::
changed to non-virtual.




[float]
=== `Nest.BulkDeleteDescriptor<T>`

[horizontal]
`IfPrimaryTerm(Nullable<Int64>)` method:: added
`IfSequenceNumber(Nullable<Int64>)` method:: added

[float]
=== `Nest.BulkDeleteOperation<T>`

[horizontal]
`IfPrimaryTerm` property:: added
`IfSequenceNumber` property:: added


[float]
=== `Nest.BulkDescriptor`

[horizontal]
`BulkDescriptor(IndexName)` method:: added
`Fields(Fields)` method:: deleted
`Fields<T>(Expression<Func<T, Object>>[])` method:: deleted
`SourceEnabled(Nullable<Boolean>)` method::
Parameter name changed from `sourceEnabled` to `sourceenabled`.
`SourceExclude(Fields)` method:: deleted
`SourceExclude<T>(Expression<Func<T, Object>>[])` method:: deleted
`SourceExcludes(Fields)` method:: added
`SourceExcludes<T>(Expression<Func<T, Object>>[])` method:: added
`SourceInclude(Fields)` method:: deleted
`SourceInclude<T>(Expression<Func<T, Object>>[])` method:: deleted
`SourceIncludes(Fields)` method:: added
`SourceIncludes<T>(Expression<Func<T, Object>>[])` method:: added
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`TypeQueryString(String)` method:: added
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.BulkError`

[horizontal]
type:: deleted

[float]
=== `Nest.BulkIndexByScrollFailure`

[horizontal]

[float]
=== `Nest.BulkIndexDescriptor<T>`

[horizontal]
`IfPrimaryTerm(Nullable<Int64>)` method:: added
`IfSequenceNumber(Nullable<Int64>)` method:: added

[float]
=== `Nest.BulkIndexFailureCause`

[horizontal]
type:: deleted

[float]
=== `Nest.BulkIndexOperation<T>`

[horizontal]
`IfPrimaryTerm` property:: added
`IfSequenceNumber` property:: added


[float]
=== `Nest.BulkOperationBase`

[horizontal]
`Parent` property:: deleted
`Type` property:: deleted

[float]
=== `Nest.BulkOperationDescriptorBase<TDescriptor, TInterface>`

[horizontal]
`Parent(Id)` method:: deleted
`Type<T>()` method:: deleted
`Type(TypeName)` method:: deleted

[float]
=== `Nest.BulkOperationsCollection<TOperation>`

[horizontal]
type:: added

[float]
=== `Nest.BulkRequest`

[horizontal]
`BulkRequest(IndexName, TypeName)` method:: deleted
`Fields` property:: deleted
`SourceExclude` property:: deleted
`SourceExcludes` property:: added
`SourceInclude` property:: deleted
`SourceIncludes` property:: added
`TypeQueryString` property:: added

[float]
=== `Nest.BulkResponse`

[horizontal]
`Errors` property getter::
changed to non-virtual.
`Items` property getter::
changed to non-virtual.
`ItemsWithErrors` property getter::
changed to non-virtual.
`Took` property getter::
changed to non-virtual.

[float]
=== `Nest.BulkResponseItemBase`

[horizontal]
`Error` property getter::
changed to non-virtual.
`Id` property getter::
changed to non-virtual.
`Index` property getter::
changed to non-virtual.
`IsValid` property getter::
changed to non-virtual.
`PrimaryTerm` property getter::
changed to non-virtual.
`Result` property getter::
changed to non-virtual.
`SequenceNumber` property getter::
changed to non-virtual.
`Shards` property getter::
changed to non-virtual.
`Status` property getter::
changed to non-virtual.
`Type` property getter::
changed to non-virtual.
`Version` property getter::
changed to non-virtual.





[float]
=== `Nest.BytesProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.BytesValueConverter`

[horizontal]
type:: deleted


[float]
=== `Nest.CancelTasksDescriptor`

[horizontal]
`CancelTasksDescriptor(TaskId)` method:: added
`ParentNode(String)` method:: deleted
`ParentTaskId(String)` method::
Parameter name changed from `parentTaskId` to `parenttaskid`.

[float]
=== `Nest.CancelTasksRequest`

[horizontal]
`CancelTasksRequest(TaskId)` method::
Parameter name changed from `task_id` to `taskId`.
`ParentNode` property:: deleted

[float]
=== `Nest.CancelTasksResponse`

[horizontal]
`NodeFailures` property getter::
changed to non-virtual.
`Nodes` property getter::
changed to non-virtual.

[float]
=== `Nest.CatAliasesDescriptor`

[horizontal]
`CatAliasesDescriptor(Names)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatAllocationDescriptor`

[horizontal]
`CatAllocationDescriptor(NodeIds)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatAllocationRequest`

[horizontal]
`CatAllocationRequest(NodeIds)` method::
Parameter name changed from `node_id` to `nodeId`.

[float]
=== `Nest.CatCountDescriptor`

[horizontal]
`CatCountDescriptor(Indices)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.



[float]
=== `Nest.CategoryId`

[horizontal]
type:: deleted



[float]
=== `Nest.CatFielddataDescriptor`

[horizontal]
`CatFielddataDescriptor(Fields)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatHealthDescriptor`

[horizontal]
`IncludeTimestamp(Nullable<Boolean>)` method::
Parameter name changed from `includeTimestamp` to `includetimestamp`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatHelpDescriptor`

[horizontal]
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatIndicesDescriptor`

[horizontal]
`CatIndicesDescriptor(Indices)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.

[float]
=== `Nest.CatIndicesRecord`

[horizontal]
`UUID` property:: added

[float]
=== `Nest.CatMasterDescriptor`

[horizontal]
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatNodeAttributesDescriptor`

[horizontal]
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatNodesDescriptor`

[horizontal]
`FullId(Nullable<Boolean>)` method::
Parameter name changed from `fullId` to `fullid`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatPendingTasksDescriptor`

[horizontal]
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatPluginsDescriptor`

[horizontal]
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatRecoveryDescriptor`

[horizontal]
`CatRecoveryDescriptor(Indices)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatRepositoriesDescriptor`

[horizontal]
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatResponse<TCatRecord>`

[horizontal]
`Records` property getter::
changed to non-virtual.

[float]
=== `Nest.CatSegmentsDescriptor`

[horizontal]
`CatSegmentsDescriptor(Indices)` method:: added
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatShardsDescriptor`

[horizontal]
`CatShardsDescriptor(Indices)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatSnapshotsDescriptor`

[horizontal]
`CatSnapshotsDescriptor(Names)` method:: added
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.

[float]
=== `Nest.CatSnapshotsRecord`

[horizontal]
`SuccesfulShards` property:: deleted
`SuccessfulShards` property:: added

[float]
=== `Nest.CatTasksDescriptor`

[horizontal]
`NodeId(String[])` method::
Parameter name changed from `nodeId` to `nodeid`.
`ParentNode(String)` method:: deleted
`ParentTask(Nullable<Int64>)` method::
Parameter name changed from `parentTask` to `parenttask`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.


[float]
=== `Nest.CatTasksRequest`

[horizontal]
`ParentNode` property:: deleted

[float]
=== `Nest.CatTemplatesDescriptor`

[horizontal]
`CatTemplatesDescriptor(Name)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.

[float]
=== `Nest.CatTemplatesRecord`

[horizontal]

[float]
=== `Nest.CatThreadPoolDescriptor`

[horizontal]
`CatThreadPoolDescriptor(Names)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`SortByColumns(String[])` method::
Parameter name changed from `sortByColumns` to `sortbycolumns`.

[float]
=== `Nest.CatThreadPoolRecord`

[horizontal]
`Core` property:: added
`Minimum` property:: deleted
`PoolSize` property:: added

[float]
=== `Nest.CatThreadPoolRequest`

[horizontal]
`CatThreadPoolRequest(Names)` method::
Parameter name changed from `thread_pool_patterns` to `threadPoolPatterns`.



[float]
=== `Nest.CcrStatsResponse`

[horizontal]
`AutoFollowStats` property getter::
changed to non-virtual.
`FollowStats` property getter::
changed to non-virtual.


[float]
=== `Nest.ChangePasswordDescriptor`

[horizontal]
`ChangePasswordDescriptor(Name)` method:: added





[float]
=== `Nest.CircleGeoShape`

[horizontal]
`CircleGeoShape()` method::
Member is less visible.
`CircleGeoShape(GeoCoordinate)` method:: deleted
`CircleGeoShape(GeoCoordinate, String)` method:: added

[float]
=== `Nest.ClassicSimilarity`

[horizontal]
type:: deleted

[float]
=== `Nest.ClassicSimilarityDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.ClearCacheDescriptor`

[horizontal]
`ClearCacheDescriptor(Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`Recycler(Nullable<Boolean>)` method:: deleted
`RequestCache(Nullable<Boolean>)` method:: deleted

[float]
=== `Nest.ClearCachedRealmsDescriptor`

[horizontal]
`ClearCachedRealmsDescriptor()` method:: added

[float]
=== `Nest.ClearCachedRealmsRequest`

[horizontal]
`ClearCachedRealmsRequest()` method:: added

[float]
=== `Nest.ClearCachedRealmsResponse`

[horizontal]
`ClusterName` property getter::
changed to non-virtual.
`Nodes` property getter::
changed to non-virtual.

[float]
=== `Nest.ClearCachedRolesDescriptor`

[horizontal]
`ClearCachedRolesDescriptor()` method:: added

[float]
=== `Nest.ClearCachedRolesRequest`

[horizontal]
`ClearCachedRolesRequest()` method:: added

[float]
=== `Nest.ClearCachedRolesResponse`

[horizontal]
`ClusterName` property getter::
changed to non-virtual.
`Nodes` property getter::
changed to non-virtual.

[float]
=== `Nest.ClearCacheRequest`

[horizontal]
`Recycler` property:: deleted
`RequestCache` property:: deleted



[float]
=== `Nest.ClearSqlCursorResponse`

[horizontal]
`Succeeded` property getter::
changed to non-virtual.

[float]
=== `Nest.CloseIndexDescriptor`

[horizontal]
`CloseIndexDescriptor()` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.CloseIndexRequest`

[horizontal]
`CloseIndexRequest()` method:: added

[float]
=== `Nest.CloseJobDescriptor`

[horizontal]
`CloseJobDescriptor()` method:: added
`CloseJobDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`AllowNoJobs(Nullable<Boolean>)` method::
Parameter name changed from `allowNoJobs` to `allownojobs`.

[float]
=== `Nest.CloseJobRequest`

[horizontal]
`CloseJobRequest()` method:: added
`CloseJobRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.CloseJobResponse`

[horizontal]
`Closed` property getter::
changed to non-virtual.

[float]
=== `Nest.ClrTypeMapping`

[horizontal]
`TypeName` property:: deleted

[float]
=== `Nest.ClrTypeMappingDescriptor`

[horizontal]
`TypeName(String)` method:: deleted

[float]
=== `Nest.ClrTypeMappingDescriptor<TDocument>`

[horizontal]
`TypeName(String)` method:: deleted

[float]
=== `Nest.ClusterAllocationExplainDescriptor`

[horizontal]
`IncludeDiskInfo(Nullable<Boolean>)` method::
Parameter name changed from `includeDiskInfo` to `includediskinfo`.
`IncludeYesDecisions(Nullable<Boolean>)` method::
Parameter name changed from `includeYesDecisions` to `includeyesdecisions`.

[float]
=== `Nest.ClusterAllocationExplainResponse`

[horizontal]
`AllocateExplanation` property getter::
changed to non-virtual.
`AllocationDelay` property getter::
changed to non-virtual.
`AllocationDelayInMilliseconds` property getter::
changed to non-virtual.
`CanAllocate` property getter::
changed to non-virtual.
`CanMoveToOtherNode` property getter::
changed to non-virtual.
`CanRebalanceCluster` property getter::
changed to non-virtual.
`CanRebalanceClusterDecisions` property getter::
changed to non-virtual.
`CanRebalanceToOtherNode` property getter::
changed to non-virtual.
`CanRemainDecisions` property getter::
changed to non-virtual.
`CanRemainOnCurrentNode` property getter::
changed to non-virtual.
`ConfiguredDelay` property getter::
changed to non-virtual.
`ConfiguredDelayInMilliseconds` property getter::
changed to non-virtual.
`CurrentNode` property getter::
changed to non-virtual.
`CurrentState` property getter::
changed to non-virtual.
`Index` property getter::
changed to non-virtual.
`MoveExplanation` property getter::
changed to non-virtual.
`NodeAllocationDecisions` property getter::
changed to non-virtual.
`Primary` property getter::
changed to non-virtual.
`RebalanceExplanation` property getter::
changed to non-virtual.
`RemainingDelay` property getter::
changed to non-virtual.
`RemainingDelayInMilliseconds` property getter::
changed to non-virtual.
`Shard` property getter::
changed to non-virtual.
`UnassignedInformation` property getter::
changed to non-virtual.


[float]
=== `Nest.ClusterFileSystem`

[horizontal]
`Available` property:: deleted
`Free` property:: deleted
`Total` property:: deleted

[float]
=== `Nest.ClusterGetSettingsDescriptor`

[horizontal]
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`IncludeDefaults(Nullable<Boolean>)` method::
Parameter name changed from `includeDefaults` to `includedefaults`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.ClusterGetSettingsResponse`

[horizontal]
`Persistent` property getter::
changed to non-virtual.
`Transient` property getter::
changed to non-virtual.

[float]
=== `Nest.ClusterHealthDescriptor`

[horizontal]
`ClusterHealthDescriptor(Indices)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.
`WaitForEvents(Nullable<WaitForEvents>)` method::
Parameter name changed from `waitForEvents` to `waitforevents`.
`WaitForNodes(String)` method::
Parameter name changed from `waitForNodes` to `waitfornodes`.
`WaitForNoInitializingShards(Nullable<Boolean>)` method::
Parameter name changed from `waitForNoInitializingShards` to `waitfornoinitializingshards`.
`WaitForNoRelocatingShards(Nullable<Boolean>)` method::
Parameter name changed from `waitForNoRelocatingShards` to `waitfornorelocatingshards`.
`WaitForStatus(Nullable<WaitForStatus>)` method::
Parameter name changed from `waitForStatus` to `waitforstatus`.

[float]
=== `Nest.ClusterHealthResponse`

[horizontal]
`ActivePrimaryShards` property getter::
changed to non-virtual.
`ActiveShards` property getter::
changed to non-virtual.
`ActiveShardsPercentAsNumber` property getter::
changed to non-virtual.
`ClusterName` property getter::
changed to non-virtual.
`DelayedUnassignedShards` property getter::
changed to non-virtual.
`Indices` property getter::
changed to non-virtual.
`InitializingShards` property getter::
changed to non-virtual.
`NumberOfDataNodes` property getter::
changed to non-virtual.
`NumberOfInFlightFetch` property getter::
changed to non-virtual.
`NumberOfNodes` property getter::
changed to non-virtual.
`NumberOfPendingTasks` property getter::
changed to non-virtual.
`RelocatingShards` property getter::
changed to non-virtual.
`Status` property getter::
changed to non-virtual.
`TaskMaxWaitTimeInQueueInMilliseconds` property getter::
changed to non-virtual.
`TimedOut` property getter::
changed to non-virtual.
`UnassignedShards` property getter::
changed to non-virtual.




[float]
=== `Nest.ClusterJvm`

[horizontal]
`MaxUptime` property:: deleted

[float]
=== `Nest.ClusterJvmMemory`

[horizontal]
`HeapMax` property:: deleted
`HeapUsed` property:: deleted

[float]
=== `Nest.ClusterJvmVersion`

[horizontal]
`BundledJdk` property:: added
`UsingBundledJdk` property:: added



[float]
=== `Nest.ClusterNodesStats`

[horizontal]
`DiscoveryTypes` property:: added




[float]
=== `Nest.ClusterPendingTasksDescriptor`

[horizontal]
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.ClusterPendingTasksResponse`

[horizontal]
`Tasks` property getter::
changed to non-virtual.




[float]
=== `Nest.ClusterPutSettingsDescriptor`

[horizontal]
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.ClusterPutSettingsResponse`

[horizontal]
`Acknowledged` property getter::
changed to non-virtual.
`Persistent` property getter::
changed to non-virtual.
`Transient` property getter::
changed to non-virtual.


[float]
=== `Nest.ClusterRerouteDescriptor`

[horizontal]
`DryRun(Nullable<Boolean>)` method::
Parameter name changed from `dryRun` to `dryrun`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`RetryFailed(Nullable<Boolean>)` method::
Parameter name changed from `retryFailed` to `retryfailed`.



[float]
=== `Nest.ClusterRerouteResponse`

[horizontal]
`Explanations` property getter::
changed to non-virtual.
`State` property getter::
changed to non-virtual.

[float]
=== `Nest.ClusterRerouteState`

[horizontal]
type:: deleted


[float]
=== `Nest.ClusterStateDescriptor`

[horizontal]
`ClusterStateDescriptor(Metrics)` method:: added
`ClusterStateDescriptor(Metrics, Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`Metric(ClusterStateMetric)` method:: deleted
`Metric(Metrics)` method:: added
`WaitForMetadataVersion(Nullable<Int64>)` method::
Parameter name changed from `waitForMetadataVersion` to `waitformetadataversion`.
`WaitForTimeout(Time)` method::
Parameter name changed from `waitForTimeout` to `waitfortimeout`.

[float]
=== `Nest.ClusterStateRequest`

[horizontal]
`ClusterStateRequest(ClusterStateMetric)` method:: deleted
`ClusterStateRequest(ClusterStateMetric, Indices)` method:: deleted
`ClusterStateRequest(Metrics)` method:: added
`ClusterStateRequest(Metrics, Indices)` method:: added

[float]
=== `Nest.ClusterStateResponse`

[horizontal]
`Blocks` property:: deleted
`ClusterName` property getter::
changed to non-virtual.
`ClusterUUID` property getter::
changed to non-virtual.
`MasterNode` property getter::
changed to non-virtual.
`Metadata` property:: deleted
`Nodes` property:: deleted
`RoutingNodes` property:: deleted
`RoutingTable` property:: deleted
`State` property:: added
`StateUUID` property getter::
changed to non-virtual.
`Version` property getter::
changed to non-virtual.


[float]
=== `Nest.ClusterStatsDescriptor`

[horizontal]
`ClusterStatsDescriptor(NodeIds)` method:: added
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.

[float]
=== `Nest.ClusterStatsRequest`

[horizontal]
`ClusterStatsRequest(NodeIds)` method::
Parameter name changed from `node_id` to `nodeId`.

[float]
=== `Nest.ClusterStatsResponse`

[horizontal]
`ClusterName` property getter::
changed to non-virtual.
`ClusterUUID` property getter::
changed to non-virtual.
`Indices` property getter::
changed to non-virtual.
`Nodes` property getter::
changed to non-virtual.
`Status` property getter::
changed to non-virtual.
`Timestamp` property getter::
changed to non-virtual.






[float]
=== `Nest.CompletionStats`

[horizontal]
`Size` property:: deleted

[float]
=== `Nest.CompletionSuggester`

[horizontal]

[float]
=== `Nest.CompletionSuggesterDescriptor<T>`

[horizontal]
`Fuzzy(Func<FuzzySuggestDescriptor<T>, IFuzzySuggester>)` method:: deleted
`Fuzzy(Func<SuggestFuzzinessDescriptor<T>, ISuggestFuzziness>)` method:: added

[float]
=== `Nest.CompositeAggregation`

[horizontal]

[float]
=== `Nest.CompositeAggregationDescriptor<T>`

[horizontal]
`After(CompositeKey)` method:: added
`After(Object)` method:: deleted

[float]
=== `Nest.CompositeAggregationSourceBase`

[horizontal]
`Missing` property:: deleted

[float]
=== `Nest.CompositeAggregationSourceDescriptorBase<TDescriptor, TInterface, T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`Missing(Object)` method:: deleted







[float]
=== `Nest.ConnectionSettingsBase<TConnectionSettings>`

[horizontal]
`DefaultTypeName(String)` method:: deleted
`DefaultTypeNameInferrer(Func<Type, String>)` method:: deleted
`HttpStatusCodeClassifier(HttpMethod, Int32)` method:: added
`InferMappingFor<TDocument>(Func<ClrTypeMappingDescriptor<TDocument>, IClrTypeMapping<TDocument>>)` method:: deleted

[float]
=== `Nest.ConstantScoreQuery`

[horizontal]
`Lang` property:: deleted
`Params` property:: deleted
`Script` property:: deleted



[float]
=== `Nest.ConvertProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.CorePropertyBase`

[horizontal]

[float]
=== `Nest.CorePropertyDescriptorBase<TDescriptor, TInterface, T>`

[horizontal]
`Similarity(Nullable<SimilarityOption>)` method:: deleted

[float]
=== `Nest.CountDescriptor<TDocument>`

[horizontal]
`CountDescriptor(Indices)` method:: added
`AllIndices()` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`Analyzer(String)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`AnalyzeWildcard(Nullable<Boolean>)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`DefaultOperator(Nullable<DefaultOperator>)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`Df(String)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`IgnoreThrottled(Nullable<Boolean>)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`Lenient(Nullable<Boolean>)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`MinScore(Nullable<Double>)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`Preference(String)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`Query(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`Query(Func<QueryContainerDescriptor<TDocument>, QueryContainer>)` method:: added
`QueryOnQueryString(String)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`Routing(Routing)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`TerminateAfter(Nullable<Int64>)` method::
Member type changed from `CountDescriptor<T>` to `CountDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted

[float]
=== `Nest.CountDetectorDescriptor<T>`

[horizontal]
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`OverFieldName(Expression<Func<T, Object>>)` method:: deleted
`OverFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.CountRequest`

[horizontal]
`CountRequest(Indices, Types)` method:: deleted

[float]
=== `Nest.CountRequest<TDocument>`

[horizontal]
`CountRequest(Indices, Types)` method:: deleted
`AllowNoIndices` property:: deleted
`Analyzer` property:: deleted
`AnalyzeWildcard` property:: deleted
`DefaultOperator` property:: deleted
`Df` property:: deleted
`ExpandWildcards` property:: deleted
`HttpMethod` property:: deleted
`IgnoreThrottled` property:: deleted
`IgnoreUnavailable` property:: deleted
`Lenient` property:: deleted
`MinScore` property:: deleted
`Preference` property:: deleted
`Query` property:: deleted
`QueryOnQueryString` property:: deleted
`Routing` property:: deleted
`Self` property:: deleted
`TerminateAfter` property:: deleted
`TypedSelf` property:: added

[float]
=== `Nest.CountResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`Shards` property getter::
changed to non-virtual.


[float]
=== `Nest.CreateApiKeyResponse`

[horizontal]
`ApiKey` property getter::
changed to non-virtual.
`Expiration` property getter::
changed to non-virtual.
`Id` property getter::
changed to non-virtual.
`Name` property getter::
changed to non-virtual.

[float]
=== `Nest.CreateAutoFollowPatternDescriptor`

[horizontal]
`CreateAutoFollowPatternDescriptor()` method:: added

[float]
=== `Nest.CreateAutoFollowPatternRequest`

[horizontal]
`CreateAutoFollowPatternRequest()` method:: added

[float]
=== `Nest.CreateDescriptor<TDocument>`

[horizontal]
`CreateDescriptor()` method:: added
`CreateDescriptor(DocumentPath<TDocument>)` method:: deleted
`CreateDescriptor(Id)` method:: added
`CreateDescriptor(IndexName, Id)` method:: added
`CreateDescriptor(IndexName, TypeName, Id)` method:: deleted
`CreateDescriptor(TDocument, IndexName, Id)` method:: added
`Parent(String)` method:: deleted
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`VersionType(Nullable<VersionType>)` method::
Parameter name changed from `versionType` to `versiontype`.
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.CreateFollowIndexDescriptor`

[horizontal]
`CreateFollowIndexDescriptor()` method:: added
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.CreateFollowIndexRequest`

[horizontal]
`CreateFollowIndexRequest()` method:: added

[float]
=== `Nest.CreateFollowIndexResponse`

[horizontal]
`FollowIndexCreated` property getter::
changed to non-virtual.
`FollowIndexShardsAcked` property getter::
changed to non-virtual.
`IndexFollowingStarted` property getter::
changed to non-virtual.

[float]
=== `Nest.CreateIndexDescriptor`

[horizontal]
`CreateIndexDescriptor()` method:: added
`IncludeTypeName(Nullable<Boolean>)` method::
Parameter name changed from `includeTypeName` to `includetypename`.
`Map(Func<TypeMappingDescriptor<Object>, ITypeMapping>)` method:: added
`Map<T>(Func<TypeMappingDescriptor<T>, ITypeMapping>)` method:: added
`Mappings(Func<MappingsDescriptor, IPromise<IMappings>>)` method:: deleted
`Mappings(Func<MappingsDescriptor, ITypeMapping>)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`UpdateAllTypes(Nullable<Boolean>)` method:: deleted
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.CreateIndexRequest`

[horizontal]
`CreateIndexRequest()` method::
Member is more visible.
`UpdateAllTypes` property:: deleted

[float]
=== `Nest.CreateIndexResponse`

[horizontal]
`Index` property:: added
`ShardsAcknowledged` property getter::
changed to non-virtual.

[float]
=== `Nest.CreateRepositoryDescriptor`

[horizontal]
`CreateRepositoryDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.CreateRepositoryRequest`

[horizontal]
`CreateRepositoryRequest()` method:: added

[float]
=== `Nest.CreateRequest<TDocument>`

[horizontal]
`CreateRequest()` method:: added
`CreateRequest(DocumentPath<TDocument>, IndexName, TypeName, Id)` method:: deleted
`CreateRequest(Id)` method:: added
`CreateRequest(IndexName, Id)` method:: added
`CreateRequest(IndexName, TypeName, Id)` method:: deleted
`CreateRequest(TDocument, IndexName, Id)` method:: added
`Parent` property:: deleted

[float]
=== `Nest.CreateResponse`

[horizontal]
`Id` property:: deleted
`Index` property:: deleted
`IsValid` property:: added
`PrimaryTerm` property:: deleted
`Result` property:: deleted
`SequenceNumber` property:: deleted
`Shards` property:: deleted
`Type` property:: deleted
`Version` property:: deleted

[float]
=== `Nest.CreateRollupJobDescriptor<TDocument>`

[horizontal]
`CreateRollupJobDescriptor()` method:: added
`Cron(String)` method::
Member type changed from `CreateRollupJobDescriptor<T>` to `CreateRollupJobDescriptor<TDocument>`.
`Groups(Func<RollupGroupingsDescriptor<T>, IRollupGroupings>)` method:: deleted
`Groups(Func<RollupGroupingsDescriptor<TDocument>, IRollupGroupings>)` method:: added
`IndexPattern(String)` method::
Member type changed from `CreateRollupJobDescriptor<T>` to `CreateRollupJobDescriptor<TDocument>`.
`Metrics(Func<RollupFieldMetricsDescriptor<T>, IPromise<IList<IRollupFieldMetric>>>)` method:: deleted
`Metrics(Func<RollupFieldMetricsDescriptor<TDocument>, IPromise<IList<IRollupFieldMetric>>>)` method:: added
`PageSize(Nullable<Int64>)` method::
Member type changed from `CreateRollupJobDescriptor<T>` to `CreateRollupJobDescriptor<TDocument>`.
`RollupIndex(IndexName)` method::
Member type changed from `CreateRollupJobDescriptor<T>` to `CreateRollupJobDescriptor<TDocument>`.

[float]
=== `Nest.CreateRollupJobRequest`

[horizontal]
`CreateRollupJobRequest()` method:: added


[float]
=== `Nest.CurrentNode`

[horizontal]



[float]
=== `Nest.DataDescriptionDescriptor<T>`

[horizontal]
`TimeField(Expression<Func<T, Object>>)` method:: deleted
`TimeField<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.DatafeedConfig`

[horizontal]
`Types` property:: deleted




[float]
=== `Nest.DateHistogramAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.DateHistogramCompositeAggregationSource`

[horizontal]
`Timezone` property:: deleted
`TimeZone` property:: added

[float]
=== `Nest.DateHistogramCompositeAggregationSourceDescriptor<T>`

[horizontal]
`Timezone(String)` method:: deleted
`TimeZone(String)` method:: added

[float]
=== `Nest.DateHistogramRollupGroupingDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.DateIndexNameProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added






[float]
=== `Nest.DateProcessor`

[horizontal]
`Timezone` property:: deleted
`TimeZone` property:: added

[float]
=== `Nest.DateProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added
`Timezone(String)` method:: deleted
`TimeZone(String)` method:: added


[float]
=== `Nest.DateRangeAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added




[float]
=== `Nest.DeactivateWatchDescriptor`

[horizontal]
`DeactivateWatchDescriptor()` method:: added
`DeactivateWatchDescriptor(Id)` method::
Parameter name changed from `watch_id` to `watchId`.
`MasterTimeout(Time)` method:: deleted

[float]
=== `Nest.DeactivateWatchRequest`

[horizontal]
`DeactivateWatchRequest()` method:: added
`DeactivateWatchRequest(Id)` method::
Parameter name changed from `watch_id` to `watchId`.
`MasterTimeout` property:: deleted

[float]
=== `Nest.DeactivateWatchResponse`

[horizontal]
`Status` property getter::
changed to non-virtual.

[float]
=== `Nest.DecayFunctionDescriptorBase<TDescriptor, TOrigin, TScale, T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added



[float]
=== `Nest.DeleteAliasDescriptor`

[horizontal]
`DeleteAliasDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.DeleteAliasRequest`

[horizontal]
`DeleteAliasRequest()` method:: added

[float]
=== `Nest.DeleteAutoFollowPatternDescriptor`

[horizontal]
`DeleteAutoFollowPatternDescriptor()` method:: added

[float]
=== `Nest.DeleteAutoFollowPatternRequest`

[horizontal]
`DeleteAutoFollowPatternRequest()` method:: added

[float]
=== `Nest.DeleteByQueryDescriptor<TDocument>`

[horizontal]
`DeleteByQueryDescriptor()` method:: added
`AllIndices()` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`Analyzer(String)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`AnalyzeWildcard(Nullable<Boolean>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Conflicts(Nullable<Conflicts>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`DefaultOperator(Nullable<DefaultOperator>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Df(String)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`From(Nullable<Int64>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Lenient(Nullable<Boolean>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`MatchAll()` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Preference(String)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Query(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`Query(Func<QueryContainerDescriptor<TDocument>, QueryContainer>)` method:: added
`QueryOnQueryString(String)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Refresh(Nullable<Boolean>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`RequestCache(Nullable<Boolean>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`RequestsPerSecond(Nullable<Int64>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Routing(Routing)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Scroll(Time)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`ScrollSize(Nullable<Int64>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`SearchTimeout(Time)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`SearchType(Nullable<SearchType>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Size(Nullable<Int64>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Slice(Func<SlicedScrollDescriptor<T>, ISlicedScroll>)` method:: deleted
`Slice(Func<SlicedScrollDescriptor<TDocument>, ISlicedScroll>)` method:: added
`Slices(Nullable<Int64>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Sort(String[])` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`SourceEnabled(Nullable<Boolean>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`SourceExclude(Fields)` method:: deleted
`SourceExclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceExcludes(Fields)` method:: added
`SourceExcludes(Expression<Func<TDocument, Object>>[])` method:: added
`SourceInclude(Fields)` method:: deleted
`SourceInclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceIncludes(Fields)` method:: added
`SourceIncludes(Expression<Func<TDocument, Object>>[])` method:: added
`Stats(String[])` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`TerminateAfter(Nullable<Int64>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Timeout(Time)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted
`Version(Nullable<Boolean>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`WaitForActiveShards(String)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.
`WaitForCompletion(Nullable<Boolean>)` method::
Member type changed from `DeleteByQueryDescriptor<T>` to `DeleteByQueryDescriptor<TDocument>`.

[float]
=== `Nest.DeleteByQueryRequest`

[horizontal]
`DeleteByQueryRequest()` method:: added
`DeleteByQueryRequest(Indices, Types)` method:: deleted
`SourceExclude` property:: deleted
`SourceExcludes` property:: added
`SourceInclude` property:: deleted
`SourceIncludes` property:: added

[float]
=== `Nest.DeleteByQueryRequest<TDocument>`

[horizontal]
`DeleteByQueryRequest(Indices, Types)` method:: deleted
`AllowNoIndices` property:: deleted
`Analyzer` property:: deleted
`AnalyzeWildcard` property:: deleted
`Conflicts` property:: deleted
`DefaultOperator` property:: deleted
`Df` property:: deleted
`ExpandWildcards` property:: deleted
`From` property:: deleted
`IgnoreUnavailable` property:: deleted
`Lenient` property:: deleted
`Preference` property:: deleted
`Query` property:: deleted
`QueryOnQueryString` property:: deleted
`Refresh` property:: deleted
`RequestCache` property:: deleted
`RequestsPerSecond` property:: deleted
`Routing` property:: deleted
`Scroll` property:: deleted
`ScrollSize` property:: deleted
`SearchTimeout` property:: deleted
`SearchType` property:: deleted
`Self` property:: deleted
`Size` property:: deleted
`Slice` property:: deleted
`Slices` property:: deleted
`Sort` property:: deleted
`SourceEnabled` property:: deleted
`SourceExclude` property:: deleted
`SourceInclude` property:: deleted
`Stats` property:: deleted
`TerminateAfter` property:: deleted
`Timeout` property:: deleted
`TypedSelf` property:: added
`Version` property:: deleted
`WaitForActiveShards` property:: deleted
`WaitForCompletion` property:: deleted

[float]
=== `Nest.DeleteByQueryResponse`

[horizontal]
`Batches` property getter::
changed to non-virtual.
`Deleted` property getter::
changed to non-virtual.
`Failures` property getter::
changed to non-virtual.
`Noops` property getter::
changed to non-virtual.
`RequestsPerSecond` property getter::
changed to non-virtual.
`Retries` property getter::
changed to non-virtual.
`SliceId` property getter::
changed to non-virtual.
`Task` property getter::
changed to non-virtual.
`ThrottledMilliseconds` property getter::
changed to non-virtual.
`ThrottledUntilMilliseconds` property getter::
changed to non-virtual.
`TimedOut` property getter::
changed to non-virtual.
`Took` property getter::
changed to non-virtual.
`Total` property getter::
changed to non-virtual.
`VersionConflicts` property getter::
changed to non-virtual.

[float]
=== `Nest.DeleteByQueryRethrottleDescriptor`

[horizontal]
`DeleteByQueryRethrottleDescriptor()` method:: added
`DeleteByQueryRethrottleDescriptor(TaskId)` method::
Parameter name changed from `task_id` to `taskId`.
`RequestsPerSecond(Nullable<Int64>)` method::
Parameter name changed from `requestsPerSecond` to `requestspersecond`.

[float]
=== `Nest.DeleteByQueryRethrottleRequest`

[horizontal]
`DeleteByQueryRethrottleRequest()` method:: added
`DeleteByQueryRethrottleRequest(TaskId)` method::
Parameter name changed from `task_id` to `taskId`.

[float]
=== `Nest.DeleteCalendarDescriptor`

[horizontal]
`DeleteCalendarDescriptor()` method:: added
`DeleteCalendarDescriptor(Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.DeleteCalendarEventDescriptor`

[horizontal]
`DeleteCalendarEventDescriptor()` method:: added
`DeleteCalendarEventDescriptor(Id, Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.DeleteCalendarEventRequest`

[horizontal]
`DeleteCalendarEventRequest()` method:: added
`DeleteCalendarEventRequest(Id, Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.DeleteCalendarJobDescriptor`

[horizontal]
`DeleteCalendarJobDescriptor()` method:: added
`DeleteCalendarJobDescriptor(Id, Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.DeleteCalendarJobRequest`

[horizontal]
`DeleteCalendarJobRequest()` method:: added
`DeleteCalendarJobRequest(Id, Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.DeleteCalendarJobResponse`

[horizontal]
`CalendarId` property getter::
changed to non-virtual.
`Description` property getter::
changed to non-virtual.
`JobIds` property getter::
changed to non-virtual.

[float]
=== `Nest.DeleteCalendarRequest`

[horizontal]
`DeleteCalendarRequest()` method:: added
`DeleteCalendarRequest(Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.DeleteDatafeedDescriptor`

[horizontal]
`DeleteDatafeedDescriptor()` method:: added
`DeleteDatafeedDescriptor(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.

[float]
=== `Nest.DeleteDatafeedRequest`

[horizontal]
`DeleteDatafeedRequest()` method:: added
`DeleteDatafeedRequest(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.

[float]
=== `Nest.DeleteDescriptor<TDocument>`

[horizontal]
`DeleteDescriptor()` method:: added
`DeleteDescriptor(DocumentPath<T>)` method:: deleted
`DeleteDescriptor(Id)` method:: added
`DeleteDescriptor(IndexName, Id)` method:: added
`DeleteDescriptor(IndexName, TypeName, Id)` method:: deleted
`DeleteDescriptor(TDocument, IndexName, Id)` method:: added
`IfPrimaryTerm(Nullable<Int64>)` method::
Member type changed from `DeleteDescriptor<T>` to `DeleteDescriptor<TDocument>`.
`IfSeqNo(Nullable<Int64>)` method:: deleted
`IfSequenceNumber(Nullable<Int64>)` method:: added
`Index<TOther>()` method::
Member type changed from `DeleteDescriptor<T>` to `DeleteDescriptor<TDocument>`.
`Index(IndexName)` method::
Member type changed from `DeleteDescriptor<T>` to `DeleteDescriptor<TDocument>`.
`Parent(String)` method:: deleted
`Refresh(Nullable<Refresh>)` method::
Member type changed from `DeleteDescriptor<T>` to `DeleteDescriptor<TDocument>`.
`Routing(Routing)` method::
Member type changed from `DeleteDescriptor<T>` to `DeleteDescriptor<TDocument>`.
`Timeout(Time)` method::
Member type changed from `DeleteDescriptor<T>` to `DeleteDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`Version(Nullable<Int64>)` method::
Member type changed from `DeleteDescriptor<T>` to `DeleteDescriptor<TDocument>`.
`VersionType(Nullable<VersionType>)` method::
Member type changed from `DeleteDescriptor<T>` to `DeleteDescriptor<TDocument>`.
`WaitForActiveShards(String)` method::
Member type changed from `DeleteDescriptor<T>` to `DeleteDescriptor<TDocument>`.


[float]
=== `Nest.DeleteExpiredDataResponse`

[horizontal]
`Deleted` property getter::
changed to non-virtual.

[float]
=== `Nest.DeleteFilterDescriptor`

[horizontal]
`DeleteFilterDescriptor()` method:: added
`DeleteFilterDescriptor(Id)` method::
Parameter name changed from `filter_id` to `filterId`.

[float]
=== `Nest.DeleteFilterRequest`

[horizontal]
`DeleteFilterRequest()` method:: added
`DeleteFilterRequest(Id)` method::
Parameter name changed from `filter_id` to `filterId`.

[float]
=== `Nest.DeleteForecastDescriptor`

[horizontal]
`DeleteForecastDescriptor()` method:: added
`DeleteForecastDescriptor(Id, ForecastIds)` method:: deleted
`DeleteForecastDescriptor(Id, Ids)` method:: added
`AllowNoForecasts(Nullable<Boolean>)` method::
Parameter name changed from `allowNoForecasts` to `allownoforecasts`.

[float]
=== `Nest.DeleteForecastRequest`

[horizontal]
`DeleteForecastRequest()` method:: added
`DeleteForecastRequest(Id, ForecastIds)` method:: deleted
`DeleteForecastRequest(Id, Ids)` method:: added

[float]
=== `Nest.DeleteIndexDescriptor`

[horizontal]
`DeleteIndexDescriptor()` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.DeleteIndexRequest`

[horizontal]
`DeleteIndexRequest()` method:: added

[float]
=== `Nest.DeleteIndexTemplateDescriptor`

[horizontal]
`DeleteIndexTemplateDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.DeleteIndexTemplateRequest`

[horizontal]
`DeleteIndexTemplateRequest()` method:: added

[float]
=== `Nest.DeleteJobDescriptor`

[horizontal]
`DeleteJobDescriptor()` method:: added
`DeleteJobDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`WaitForCompletion(Nullable<Boolean>)` method::
Parameter name changed from `waitForCompletion` to `waitforcompletion`.

[float]
=== `Nest.DeleteJobRequest`

[horizontal]
`DeleteJobRequest()` method:: added
`DeleteJobRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.


[float]
=== `Nest.DeleteLifecycleDescriptor`

[horizontal]
`DeleteLifecycleDescriptor()` method:: added
`DeleteLifecycleDescriptor(Id)` method:: added
`DeleteLifecycleDescriptor(PolicyId)` method:: deleted
`MasterTimeout(Time)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.DeleteLifecycleRequest`

[horizontal]
`DeleteLifecycleRequest()` method:: added
`DeleteLifecycleRequest(Id)` method:: added
`DeleteLifecycleRequest(PolicyId)` method:: deleted
`MasterTimeout` property:: deleted
`Timeout` property:: deleted

[float]
=== `Nest.DeleteManyExtensions`

[horizontal]
`DeleteMany<T>(IElasticClient, IEnumerable<T>, IndexName)` method:: added
`DeleteMany<T>(IElasticClient, IEnumerable<T>, IndexName, TypeName)` method:: deleted
`DeleteManyAsync<T>(IElasticClient, IEnumerable<T>, IndexName, TypeName, CancellationToken)` method:: deleted
`DeleteManyAsync<T>(IElasticClient, IEnumerable<T>, IndexName, CancellationToken)` method:: added

[float]
=== `Nest.DeleteModelSnapshotDescriptor`

[horizontal]
`DeleteModelSnapshotDescriptor()` method:: added
`DeleteModelSnapshotDescriptor(Id, Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.DeleteModelSnapshotRequest`

[horizontal]
`DeleteModelSnapshotRequest()` method:: added
`DeleteModelSnapshotRequest(Id, Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.DeletePipelineDescriptor`

[horizontal]
`DeletePipelineDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.DeletePipelineRequest`

[horizontal]
`DeletePipelineRequest()` method:: added

[float]
=== `Nest.DeletePrivilegesDescriptor`

[horizontal]
`DeletePrivilegesDescriptor()` method:: added

[float]
=== `Nest.DeletePrivilegesRequest`

[horizontal]
`DeletePrivilegesRequest()` method:: added

[float]
=== `Nest.DeletePrivilegesResponse`

[horizontal]
`Applications` property getter::
changed to non-virtual.

[float]
=== `Nest.DeleteRepositoryDescriptor`

[horizontal]
`DeleteRepositoryDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.DeleteRepositoryRequest`

[horizontal]
`DeleteRepositoryRequest()` method:: added

[float]
=== `Nest.DeleteRequest`

[horizontal]
`DeleteRequest()` method:: added
`DeleteRequest(IndexName, Id)` method:: added
`DeleteRequest(IndexName, TypeName, Id)` method:: deleted
`IfSeqNo` property:: deleted
`IfSequenceNumber` property:: added
`Parent` property:: deleted

[float]
=== `Nest.DeleteRequest<TDocument>`

[horizontal]
`DeleteRequest()` method:: added
`DeleteRequest(DocumentPath<T>, IndexName, TypeName, Id)` method:: deleted
`DeleteRequest(Id)` method:: added
`DeleteRequest(IndexName, Id)` method:: added
`DeleteRequest(IndexName, TypeName, Id)` method:: deleted
`DeleteRequest(TDocument, IndexName, Id)` method:: added
`IfPrimaryTerm` property:: deleted
`IfSeqNo` property:: deleted
`Parent` property:: deleted
`Refresh` property:: deleted
`Routing` property:: deleted
`Self` property:: deleted
`Timeout` property:: deleted
`TypedSelf` property:: added
`Version` property:: deleted
`VersionType` property:: deleted
`WaitForActiveShards` property:: deleted

[float]
=== `Nest.DeleteResponse`

[horizontal]
`Id` property:: deleted
`Index` property:: deleted
`IsValid` property:: added
`PrimaryTerm` property:: deleted
`Result` property:: deleted
`SequenceNumber` property:: deleted
`Shards` property:: deleted
`Type` property:: deleted
`Version` property:: deleted

[float]
=== `Nest.DeleteRoleDescriptor`

[horizontal]
`DeleteRoleDescriptor()` method:: added

[float]
=== `Nest.DeleteRoleMappingDescriptor`

[horizontal]
`DeleteRoleMappingDescriptor()` method:: added

[float]
=== `Nest.DeleteRoleMappingRequest`

[horizontal]
`DeleteRoleMappingRequest()` method:: added

[float]
=== `Nest.DeleteRoleMappingResponse`

[horizontal]
`Found` property getter::
changed to non-virtual.

[float]
=== `Nest.DeleteRoleRequest`

[horizontal]
`DeleteRoleRequest()` method:: added

[float]
=== `Nest.DeleteRoleResponse`

[horizontal]
`Found` property getter::
changed to non-virtual.

[float]
=== `Nest.DeleteRollupJobDescriptor`

[horizontal]
`DeleteRollupJobDescriptor()` method:: added

[float]
=== `Nest.DeleteRollupJobRequest`

[horizontal]
`DeleteRollupJobRequest()` method:: added

[float]
=== `Nest.DeleteRollupJobResponse`

[horizontal]
`IsValid` property:: deleted

[float]
=== `Nest.DeleteScriptDescriptor`

[horizontal]
`DeleteScriptDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.DeleteScriptRequest`

[horizontal]
`DeleteScriptRequest()` method:: added

[float]
=== `Nest.DeleteSnapshotDescriptor`

[horizontal]
`DeleteSnapshotDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.DeleteSnapshotRequest`

[horizontal]
`DeleteSnapshotRequest()` method:: added

[float]
=== `Nest.DeleteUserDescriptor`

[horizontal]
`DeleteUserDescriptor()` method:: added

[float]
=== `Nest.DeleteUserRequest`

[horizontal]
`DeleteUserRequest()` method:: added

[float]
=== `Nest.DeleteUserResponse`

[horizontal]
`Found` property getter::
changed to non-virtual.

[float]
=== `Nest.DeleteWatchDescriptor`

[horizontal]
`DeleteWatchDescriptor()` method:: added
`MasterTimeout(Time)` method:: deleted

[float]
=== `Nest.DeleteWatchRequest`

[horizontal]
`DeleteWatchRequest()` method:: added
`MasterTimeout` property:: deleted

[float]
=== `Nest.DeleteWatchResponse`

[horizontal]
`Found` property getter::
changed to non-virtual.
`Id` property getter::
changed to non-virtual.
`Version` property getter::
changed to non-virtual.



[float]
=== `Nest.DeprecationInfoDescriptor`

[horizontal]
`DeprecationInfoDescriptor(IndexName)` method:: added

[float]
=== `Nest.DeprecationInfoResponse`

[horizontal]
`ClusterSettings` property getter::
changed to non-virtual.
`IndexSettings` property getter::
changed to non-virtual.
`NodeSettings` property getter::
changed to non-virtual.


[float]
=== `Nest.DescriptorBase<TDescriptor, TInterface>`

[horizontal]
`Assign(Action<TInterface>)` method:: deleted





[float]
=== `Nest.DirectGenerator`

[horizontal]

[float]
=== `Nest.DirectGeneratorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`MaxInspections(Nullable<Decimal>)` method:: deleted
`MaxInspections(Nullable<Single>)` method:: added
`MaxTermFrequency(Nullable<Decimal>)` method:: deleted
`MaxTermFrequency(Nullable<Single>)` method:: added
`MinDocFrequency(Nullable<Decimal>)` method:: deleted
`MinDocFrequency(Nullable<Single>)` method:: added

[float]
=== `Nest.DisableUserDescriptor`

[horizontal]
`DisableUserDescriptor()` method::
Member is less visible.
`Username(Name)` method:: deleted

[float]
=== `Nest.DisableUserRequest`

[horizontal]
`DisableUserRequest()` method:: added




[float]
=== `Nest.DissectProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.Distance`

[horizontal]
`ToString()` method:: added


[float]
=== `Nest.DistinctCountDetectorDescriptor<T>`

[horizontal]
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`FieldName(Expression<Func<T, Object>>)` method:: deleted
`FieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`OverFieldName(Expression<Func<T, Object>>)` method:: deleted
`OverFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.DocumentExistsDescriptor<TDocument>`

[horizontal]
`DocumentExistsDescriptor()` method:: added
`DocumentExistsDescriptor(DocumentPath<T>)` method:: deleted
`DocumentExistsDescriptor(Id)` method:: added
`DocumentExistsDescriptor(IndexName, Id)` method:: added
`DocumentExistsDescriptor(IndexName, TypeName, Id)` method:: deleted
`DocumentExistsDescriptor(TDocument, IndexName, Id)` method:: added
`Index<TOther>()` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.
`Index(IndexName)` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.
`Parent(String)` method:: deleted
`Preference(String)` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.
`Realtime(Nullable<Boolean>)` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.
`Refresh(Nullable<Boolean>)` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.
`Routing(Routing)` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.
`SourceEnabled(Nullable<Boolean>)` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.
`SourceExclude(Fields)` method:: deleted
`SourceExclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceExcludes(Fields)` method:: added
`SourceExcludes(Expression<Func<TDocument, Object>>[])` method:: added
`SourceInclude(Fields)` method:: deleted
`SourceInclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceIncludes(Fields)` method:: added
`SourceIncludes(Expression<Func<TDocument, Object>>[])` method:: added
`StoredFields(Fields)` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.
`StoredFields(Expression<Func<T, Object>>[])` method:: deleted
`StoredFields(Expression<Func<TDocument, Object>>[])` method:: added
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`Version(Nullable<Int64>)` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.
`VersionType(Nullable<VersionType>)` method::
Member type changed from `DocumentExistsDescriptor<T>` to `DocumentExistsDescriptor<TDocument>`.

[float]
=== `Nest.DocumentExistsRequest`

[horizontal]
`DocumentExistsRequest()` method:: added
`DocumentExistsRequest(IndexName, Id)` method:: added
`DocumentExistsRequest(IndexName, TypeName, Id)` method:: deleted
`Parent` property:: deleted
`SourceExclude` property:: deleted
`SourceExcludes` property:: added
`SourceInclude` property:: deleted
`SourceIncludes` property:: added

[float]
=== `Nest.DocumentExistsRequest<TDocument>`

[horizontal]
`DocumentExistsRequest()` method:: added
`DocumentExistsRequest(DocumentPath<T>, IndexName, TypeName, Id)` method:: deleted
`DocumentExistsRequest(Id)` method:: added
`DocumentExistsRequest(IndexName, Id)` method:: added
`DocumentExistsRequest(IndexName, TypeName, Id)` method:: deleted
`DocumentExistsRequest(TDocument, IndexName, Id)` method:: added
`Parent` property:: deleted
`Preference` property:: deleted
`Realtime` property:: deleted
`Refresh` property:: deleted
`Routing` property:: deleted
`Self` property:: deleted
`SourceEnabled` property:: deleted
`SourceExclude` property:: deleted
`SourceInclude` property:: deleted
`StoredFields` property:: deleted
`TypedSelf` property:: added
`Version` property:: deleted
`VersionType` property:: deleted

[float]
=== `Nest.DocumentPath<T>`

[horizontal]
`Type(TypeName)` method:: deleted



[float]
=== `Nest.DotExpanderProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.DslPrettyPrintVisitor`

[horizontal]
`Visit(IGeoIndexedShapeQuery)` method:: deleted
`Visit(IGeoShapeCircleQuery)` method:: deleted
`Visit(IGeoShapeEnvelopeQuery)` method:: deleted
`Visit(IGeoShapeGeometryCollectionQuery)` method:: deleted
`Visit(IGeoShapeLineStringQuery)` method:: deleted
`Visit(IGeoShapeMultiLineStringQuery)` method:: deleted
`Visit(IGeoShapeMultiPointQuery)` method:: deleted
`Visit(IGeoShapeMultiPolygonQuery)` method:: deleted
`Visit(IGeoShapePointQuery)` method:: deleted
`Visit(IGeoShapePolygonQuery)` method:: deleted
`Visit(IIntervalsQuery)` method:: added
`Visit(ITypeQuery)` method:: deleted

[float]
=== `Nest.DynamicIndexSettingsDescriptorBase<TDescriptor, TIndexSettings>`

[horizontal]
`RoutingAllocationTotalShardsPerNode(Nullable<Int32>)` method:: added
`TotalShardsPerNode(Nullable<Int32>)` method:: deleted


[float]
=== `Nest.DynamicResponseBase`

[horizontal]
type:: added



[float]
=== `Nest.ElasticClient`

[horizontal]
`AcknowledgeWatch(IAcknowledgeWatchRequest)` method:: deleted
`AcknowledgeWatch(Id, Func<AcknowledgeWatchDescriptor, IAcknowledgeWatchRequest>)` method:: deleted
`AcknowledgeWatchAsync(IAcknowledgeWatchRequest, CancellationToken)` method:: deleted
`AcknowledgeWatchAsync(Id, Func<AcknowledgeWatchDescriptor, IAcknowledgeWatchRequest>, CancellationToken)` method:: deleted
`ActivateWatch(IActivateWatchRequest)` method:: deleted
`ActivateWatch(Id, Func<ActivateWatchDescriptor, IActivateWatchRequest>)` method:: deleted
`ActivateWatchAsync(IActivateWatchRequest, CancellationToken)` method:: deleted
`ActivateWatchAsync(Id, Func<ActivateWatchDescriptor, IActivateWatchRequest>, CancellationToken)` method:: deleted
`Alias(IBulkAliasRequest)` method:: deleted
`Alias(Func<BulkAliasDescriptor, IBulkAliasRequest>)` method:: deleted
`AliasAsync(IBulkAliasRequest, CancellationToken)` method:: deleted
`AliasAsync(Func<BulkAliasDescriptor, IBulkAliasRequest>, CancellationToken)` method:: deleted
`AliasExists(IAliasExistsRequest)` method:: deleted
`AliasExists(Names, Func<AliasExistsDescriptor, IAliasExistsRequest>)` method:: deleted
`AliasExists(Func<AliasExistsDescriptor, IAliasExistsRequest>)` method:: deleted
`AliasExistsAsync(IAliasExistsRequest, CancellationToken)` method:: deleted
`AliasExistsAsync(Names, Func<AliasExistsDescriptor, IAliasExistsRequest>, CancellationToken)` method:: deleted
`AliasExistsAsync(Func<AliasExistsDescriptor, IAliasExistsRequest>, CancellationToken)` method:: deleted
`Analyze(IAnalyzeRequest)` method:: deleted
`Analyze(Func<AnalyzeDescriptor, IAnalyzeRequest>)` method:: deleted
`AnalyzeAsync(IAnalyzeRequest, CancellationToken)` method:: deleted
`AnalyzeAsync(Func<AnalyzeDescriptor, IAnalyzeRequest>, CancellationToken)` method:: deleted
`Authenticate(IAuthenticateRequest)` method:: deleted
`Authenticate(Func<AuthenticateDescriptor, IAuthenticateRequest>)` method:: deleted
`AuthenticateAsync(IAuthenticateRequest, CancellationToken)` method:: deleted
`AuthenticateAsync(Func<AuthenticateDescriptor, IAuthenticateRequest>, CancellationToken)` method:: deleted
`Bulk(IBulkRequest)` method::
Member type changed from `IBulkResponse` to `BulkResponse`.
`Bulk(Func<BulkDescriptor, IBulkRequest>)` method::
Member type changed from `IBulkResponse` to `BulkResponse`.
`BulkAsync(IBulkRequest, CancellationToken)` method::
Member type changed from `Task<IBulkResponse>` to `Task<BulkResponse>`.
`BulkAsync(Func<BulkDescriptor, IBulkRequest>, CancellationToken)` method::
Member type changed from `Task<IBulkResponse>` to `Task<BulkResponse>`.
`CancelTasks(ICancelTasksRequest)` method:: deleted
`CancelTasks(Func<CancelTasksDescriptor, ICancelTasksRequest>)` method:: deleted
`CancelTasksAsync(ICancelTasksRequest, CancellationToken)` method:: deleted
`CancelTasksAsync(Func<CancelTasksDescriptor, ICancelTasksRequest>, CancellationToken)` method:: deleted
`CatAliases(ICatAliasesRequest)` method:: deleted
`CatAliases(Func<CatAliasesDescriptor, ICatAliasesRequest>)` method:: deleted
`CatAliasesAsync(ICatAliasesRequest, CancellationToken)` method:: deleted
`CatAliasesAsync(Func<CatAliasesDescriptor, ICatAliasesRequest>, CancellationToken)` method:: deleted
`CatAllocation(ICatAllocationRequest)` method:: deleted
`CatAllocation(Func<CatAllocationDescriptor, ICatAllocationRequest>)` method:: deleted
`CatAllocationAsync(ICatAllocationRequest, CancellationToken)` method:: deleted
`CatAllocationAsync(Func<CatAllocationDescriptor, ICatAllocationRequest>, CancellationToken)` method:: deleted
`CatCount(ICatCountRequest)` method:: deleted
`CatCount(Func<CatCountDescriptor, ICatCountRequest>)` method:: deleted
`CatCountAsync(ICatCountRequest, CancellationToken)` method:: deleted
`CatCountAsync(Func<CatCountDescriptor, ICatCountRequest>, CancellationToken)` method:: deleted
`CatFielddata(ICatFielddataRequest)` method:: deleted
`CatFielddata(Func<CatFielddataDescriptor, ICatFielddataRequest>)` method:: deleted
`CatFielddataAsync(ICatFielddataRequest, CancellationToken)` method:: deleted
`CatFielddataAsync(Func<CatFielddataDescriptor, ICatFielddataRequest>, CancellationToken)` method:: deleted
`CatHealth(ICatHealthRequest)` method:: deleted
`CatHealth(Func<CatHealthDescriptor, ICatHealthRequest>)` method:: deleted
`CatHealthAsync(ICatHealthRequest, CancellationToken)` method:: deleted
`CatHealthAsync(Func<CatHealthDescriptor, ICatHealthRequest>, CancellationToken)` method:: deleted
`CatHelp(ICatHelpRequest)` method:: deleted
`CatHelp(Func<CatHelpDescriptor, ICatHelpRequest>)` method:: deleted
`CatHelpAsync(ICatHelpRequest, CancellationToken)` method:: deleted
`CatHelpAsync(Func<CatHelpDescriptor, ICatHelpRequest>, CancellationToken)` method:: deleted
`CatIndices(ICatIndicesRequest)` method:: deleted
`CatIndices(Func<CatIndicesDescriptor, ICatIndicesRequest>)` method:: deleted
`CatIndicesAsync(ICatIndicesRequest, CancellationToken)` method:: deleted
`CatIndicesAsync(Func<CatIndicesDescriptor, ICatIndicesRequest>, CancellationToken)` method:: deleted
`CatMaster(ICatMasterRequest)` method:: deleted
`CatMaster(Func<CatMasterDescriptor, ICatMasterRequest>)` method:: deleted
`CatMasterAsync(ICatMasterRequest, CancellationToken)` method:: deleted
`CatMasterAsync(Func<CatMasterDescriptor, ICatMasterRequest>, CancellationToken)` method:: deleted
`CatNodeAttributes(ICatNodeAttributesRequest)` method:: deleted
`CatNodeAttributes(Func<CatNodeAttributesDescriptor, ICatNodeAttributesRequest>)` method:: deleted
`CatNodeAttributesAsync(ICatNodeAttributesRequest, CancellationToken)` method:: deleted
`CatNodeAttributesAsync(Func<CatNodeAttributesDescriptor, ICatNodeAttributesRequest>, CancellationToken)` method:: deleted
`CatNodes(ICatNodesRequest)` method:: deleted
`CatNodes(Func<CatNodesDescriptor, ICatNodesRequest>)` method:: deleted
`CatNodesAsync(ICatNodesRequest, CancellationToken)` method:: deleted
`CatNodesAsync(Func<CatNodesDescriptor, ICatNodesRequest>, CancellationToken)` method:: deleted
`CatPendingTasks(ICatPendingTasksRequest)` method:: deleted
`CatPendingTasks(Func<CatPendingTasksDescriptor, ICatPendingTasksRequest>)` method:: deleted
`CatPendingTasksAsync(ICatPendingTasksRequest, CancellationToken)` method:: deleted
`CatPendingTasksAsync(Func<CatPendingTasksDescriptor, ICatPendingTasksRequest>, CancellationToken)` method:: deleted
`CatPlugins(ICatPluginsRequest)` method:: deleted
`CatPlugins(Func<CatPluginsDescriptor, ICatPluginsRequest>)` method:: deleted
`CatPluginsAsync(ICatPluginsRequest, CancellationToken)` method:: deleted
`CatPluginsAsync(Func<CatPluginsDescriptor, ICatPluginsRequest>, CancellationToken)` method:: deleted
`CatRecovery(ICatRecoveryRequest)` method:: deleted
`CatRecovery(Func<CatRecoveryDescriptor, ICatRecoveryRequest>)` method:: deleted
`CatRecoveryAsync(ICatRecoveryRequest, CancellationToken)` method:: deleted
`CatRecoveryAsync(Func<CatRecoveryDescriptor, ICatRecoveryRequest>, CancellationToken)` method:: deleted
`CatRepositories(ICatRepositoriesRequest)` method:: deleted
`CatRepositories(Func<CatRepositoriesDescriptor, ICatRepositoriesRequest>)` method:: deleted
`CatRepositoriesAsync(ICatRepositoriesRequest, CancellationToken)` method:: deleted
`CatRepositoriesAsync(Func<CatRepositoriesDescriptor, ICatRepositoriesRequest>, CancellationToken)` method:: deleted
`CatSegments(ICatSegmentsRequest)` method:: deleted
`CatSegments(Func<CatSegmentsDescriptor, ICatSegmentsRequest>)` method:: deleted
`CatSegmentsAsync(ICatSegmentsRequest, CancellationToken)` method:: deleted
`CatSegmentsAsync(Func<CatSegmentsDescriptor, ICatSegmentsRequest>, CancellationToken)` method:: deleted
`CatShards(ICatShardsRequest)` method:: deleted
`CatShards(Func<CatShardsDescriptor, ICatShardsRequest>)` method:: deleted
`CatShardsAsync(ICatShardsRequest, CancellationToken)` method:: deleted
`CatShardsAsync(Func<CatShardsDescriptor, ICatShardsRequest>, CancellationToken)` method:: deleted
`CatSnapshots(ICatSnapshotsRequest)` method:: deleted
`CatSnapshots(Names, Func<CatSnapshotsDescriptor, ICatSnapshotsRequest>)` method:: deleted
`CatSnapshotsAsync(ICatSnapshotsRequest, CancellationToken)` method:: deleted
`CatSnapshotsAsync(Names, Func<CatSnapshotsDescriptor, ICatSnapshotsRequest>, CancellationToken)` method:: deleted
`CatTasks(ICatTasksRequest)` method:: deleted
`CatTasks(Func<CatTasksDescriptor, ICatTasksRequest>)` method:: deleted
`CatTasksAsync(ICatTasksRequest, CancellationToken)` method:: deleted
`CatTasksAsync(Func<CatTasksDescriptor, ICatTasksRequest>, CancellationToken)` method:: deleted
`CatTemplates(ICatTemplatesRequest)` method:: deleted
`CatTemplates(Func<CatTemplatesDescriptor, ICatTemplatesRequest>)` method:: deleted
`CatTemplatesAsync(ICatTemplatesRequest, CancellationToken)` method:: deleted
`CatTemplatesAsync(Func<CatTemplatesDescriptor, ICatTemplatesRequest>, CancellationToken)` method:: deleted
`CatThreadPool(ICatThreadPoolRequest)` method:: deleted
`CatThreadPool(Func<CatThreadPoolDescriptor, ICatThreadPoolRequest>)` method:: deleted
`CatThreadPoolAsync(ICatThreadPoolRequest, CancellationToken)` method:: deleted
`CatThreadPoolAsync(Func<CatThreadPoolDescriptor, ICatThreadPoolRequest>, CancellationToken)` method:: deleted
`CcrStats(ICcrStatsRequest)` method:: deleted
`CcrStats(Func<CcrStatsDescriptor, ICcrStatsRequest>)` method:: deleted
`CcrStatsAsync(ICcrStatsRequest, CancellationToken)` method:: deleted
`CcrStatsAsync(Func<CcrStatsDescriptor, ICcrStatsRequest>, CancellationToken)` method:: deleted
`ChangePassword(IChangePasswordRequest)` method:: deleted
`ChangePassword(Func<ChangePasswordDescriptor, IChangePasswordRequest>)` method:: deleted
`ChangePasswordAsync(IChangePasswordRequest, CancellationToken)` method:: deleted
`ChangePasswordAsync(Func<ChangePasswordDescriptor, IChangePasswordRequest>, CancellationToken)` method:: deleted
`ClearCache(IClearCacheRequest)` method:: deleted
`ClearCache(Indices, Func<ClearCacheDescriptor, IClearCacheRequest>)` method:: deleted
`ClearCacheAsync(IClearCacheRequest, CancellationToken)` method:: deleted
`ClearCacheAsync(Indices, Func<ClearCacheDescriptor, IClearCacheRequest>, CancellationToken)` method:: deleted
`ClearCachedRealms(IClearCachedRealmsRequest)` method:: deleted
`ClearCachedRealms(Names, Func<ClearCachedRealmsDescriptor, IClearCachedRealmsRequest>)` method:: deleted
`ClearCachedRealmsAsync(IClearCachedRealmsRequest, CancellationToken)` method:: deleted
`ClearCachedRealmsAsync(Names, Func<ClearCachedRealmsDescriptor, IClearCachedRealmsRequest>, CancellationToken)` method:: deleted
`ClearCachedRoles(IClearCachedRolesRequest)` method:: deleted
`ClearCachedRoles(Names, Func<ClearCachedRolesDescriptor, IClearCachedRolesRequest>)` method:: deleted
`ClearCachedRolesAsync(IClearCachedRolesRequest, CancellationToken)` method:: deleted
`ClearCachedRolesAsync(Names, Func<ClearCachedRolesDescriptor, IClearCachedRolesRequest>, CancellationToken)` method:: deleted
`ClearScroll(IClearScrollRequest)` method::
Member type changed from `IClearScrollResponse` to `ClearScrollResponse`.
`ClearScroll(Func<ClearScrollDescriptor, IClearScrollRequest>)` method::
Member type changed from `IClearScrollResponse` to `ClearScrollResponse`.
`ClearScrollAsync(IClearScrollRequest, CancellationToken)` method::
Member type changed from `Task<IClearScrollResponse>` to `Task<ClearScrollResponse>`.
`ClearScrollAsync(Func<ClearScrollDescriptor, IClearScrollRequest>, CancellationToken)` method::
Member type changed from `Task<IClearScrollResponse>` to `Task<ClearScrollResponse>`.
`ClearSqlCursor(IClearSqlCursorRequest)` method:: deleted
`ClearSqlCursor(Func<ClearSqlCursorDescriptor, IClearSqlCursorRequest>)` method:: deleted
`ClearSqlCursorAsync(IClearSqlCursorRequest, CancellationToken)` method:: deleted
`ClearSqlCursorAsync(Func<ClearSqlCursorDescriptor, IClearSqlCursorRequest>, CancellationToken)` method:: deleted
`CloseIndex(ICloseIndexRequest)` method:: deleted
`CloseIndex(Indices, Func<CloseIndexDescriptor, ICloseIndexRequest>)` method:: deleted
`CloseIndexAsync(ICloseIndexRequest, CancellationToken)` method:: deleted
`CloseIndexAsync(Indices, Func<CloseIndexDescriptor, ICloseIndexRequest>, CancellationToken)` method:: deleted
`CloseJob(ICloseJobRequest)` method:: deleted
`CloseJob(Id, Func<CloseJobDescriptor, ICloseJobRequest>)` method:: deleted
`CloseJobAsync(ICloseJobRequest, CancellationToken)` method:: deleted
`CloseJobAsync(Id, Func<CloseJobDescriptor, ICloseJobRequest>, CancellationToken)` method:: deleted
`ClusterAllocationExplain(IClusterAllocationExplainRequest)` method:: deleted
`ClusterAllocationExplain(Func<ClusterAllocationExplainDescriptor, IClusterAllocationExplainRequest>)` method:: deleted
`ClusterAllocationExplainAsync(IClusterAllocationExplainRequest, CancellationToken)` method:: deleted
`ClusterAllocationExplainAsync(Func<ClusterAllocationExplainDescriptor, IClusterAllocationExplainRequest>, CancellationToken)` method:: deleted
`ClusterGetSettings(IClusterGetSettingsRequest)` method:: deleted
`ClusterGetSettings(Func<ClusterGetSettingsDescriptor, IClusterGetSettingsRequest>)` method:: deleted
`ClusterGetSettingsAsync(IClusterGetSettingsRequest, CancellationToken)` method:: deleted
`ClusterGetSettingsAsync(Func<ClusterGetSettingsDescriptor, IClusterGetSettingsRequest>, CancellationToken)` method:: deleted
`ClusterHealth(IClusterHealthRequest)` method:: deleted
`ClusterHealth(Func<ClusterHealthDescriptor, IClusterHealthRequest>)` method:: deleted
`ClusterHealthAsync(IClusterHealthRequest, CancellationToken)` method:: deleted
`ClusterHealthAsync(Func<ClusterHealthDescriptor, IClusterHealthRequest>, CancellationToken)` method:: deleted
`ClusterPendingTasks(IClusterPendingTasksRequest)` method:: deleted
`ClusterPendingTasks(Func<ClusterPendingTasksDescriptor, IClusterPendingTasksRequest>)` method:: deleted
`ClusterPendingTasksAsync(IClusterPendingTasksRequest, CancellationToken)` method:: deleted
`ClusterPendingTasksAsync(Func<ClusterPendingTasksDescriptor, IClusterPendingTasksRequest>, CancellationToken)` method:: deleted
`ClusterPutSettings(IClusterPutSettingsRequest)` method:: deleted
`ClusterPutSettings(Func<ClusterPutSettingsDescriptor, IClusterPutSettingsRequest>)` method:: deleted
`ClusterPutSettingsAsync(IClusterPutSettingsRequest, CancellationToken)` method:: deleted
`ClusterPutSettingsAsync(Func<ClusterPutSettingsDescriptor, IClusterPutSettingsRequest>, CancellationToken)` method:: deleted
`ClusterReroute(IClusterRerouteRequest)` method:: deleted
`ClusterReroute(Func<ClusterRerouteDescriptor, IClusterRerouteRequest>)` method:: deleted
`ClusterRerouteAsync(IClusterRerouteRequest, CancellationToken)` method:: deleted
`ClusterRerouteAsync(Func<ClusterRerouteDescriptor, IClusterRerouteRequest>, CancellationToken)` method:: deleted
`ClusterState(IClusterStateRequest)` method:: deleted
`ClusterState(Func<ClusterStateDescriptor, IClusterStateRequest>)` method:: deleted
`ClusterStateAsync(IClusterStateRequest, CancellationToken)` method:: deleted
`ClusterStateAsync(Func<ClusterStateDescriptor, IClusterStateRequest>, CancellationToken)` method:: deleted
`ClusterStats(IClusterStatsRequest)` method:: deleted
`ClusterStats(Func<ClusterStatsDescriptor, IClusterStatsRequest>)` method:: deleted
`ClusterStatsAsync(IClusterStatsRequest, CancellationToken)` method:: deleted
`ClusterStatsAsync(Func<ClusterStatsDescriptor, IClusterStatsRequest>, CancellationToken)` method:: deleted
`Count(ICountRequest)` method::
Member type changed from `ICountResponse` to `CountResponse`.
`Count<T>(Func<CountDescriptor<T>, ICountRequest>)` method:: deleted
`Count<TDocument>(Func<CountDescriptor<TDocument>, ICountRequest>)` method:: added
`CountAsync(ICountRequest, CancellationToken)` method::
Member type changed from `Task<ICountResponse>` to `Task<CountResponse>`.
`CountAsync<T>(Func<CountDescriptor<T>, ICountRequest>, CancellationToken)` method:: deleted
`CountAsync<TDocument>(Func<CountDescriptor<TDocument>, ICountRequest>, CancellationToken)` method:: added
`Create<TDocument>(ICreateRequest<TDocument>)` method::
Member type changed from `ICreateResponse` to `CreateResponse`.
`Create<TDocument>(TDocument, Func<CreateDescriptor<TDocument>, ICreateRequest<TDocument>>)` method::
Member type changed from `ICreateResponse` to `CreateResponse`.
`CreateApiKey(ICreateApiKeyRequest)` method:: deleted
`CreateApiKey(Func<CreateApiKeyDescriptor, ICreateApiKeyRequest>)` method:: deleted
`CreateApiKeyAsync(ICreateApiKeyRequest, CancellationToken)` method:: deleted
`CreateApiKeyAsync(Func<CreateApiKeyDescriptor, ICreateApiKeyRequest>, CancellationToken)` method:: deleted
`CreateAsync<TDocument>(ICreateRequest<TDocument>, CancellationToken)` method::
Member type changed from `Task<ICreateResponse>` to `Task<CreateResponse>`.
`CreateAsync<TDocument>(TDocument, Func<CreateDescriptor<TDocument>, ICreateRequest<TDocument>>, CancellationToken)` method::
Member type changed from `Task<ICreateResponse>` to `Task<CreateResponse>`.
`CreateAutoFollowPattern(ICreateAutoFollowPatternRequest)` method:: deleted
`CreateAutoFollowPattern(Name, Func<CreateAutoFollowPatternDescriptor, ICreateAutoFollowPatternRequest>)` method:: deleted
`CreateAutoFollowPatternAsync(ICreateAutoFollowPatternRequest, CancellationToken)` method:: deleted
`CreateAutoFollowPatternAsync(Name, Func<CreateAutoFollowPatternDescriptor, ICreateAutoFollowPatternRequest>, CancellationToken)` method:: deleted
`CreateDocument<TDocument>(TDocument)` method::
Member type changed from `ICreateResponse` to `CreateResponse`.
`CreateDocumentAsync<TDocument>(TDocument, CancellationToken)` method::
Member type changed from `Task<ICreateResponse>` to `Task<CreateResponse>`.
`CreateFollowIndex(ICreateFollowIndexRequest)` method:: deleted
`CreateFollowIndex(IndexName, Func<CreateFollowIndexDescriptor, ICreateFollowIndexRequest>)` method:: deleted
`CreateFollowIndexAsync(ICreateFollowIndexRequest, CancellationToken)` method:: deleted
`CreateFollowIndexAsync(IndexName, Func<CreateFollowIndexDescriptor, ICreateFollowIndexRequest>, CancellationToken)` method:: deleted
`CreateIndex(ICreateIndexRequest)` method:: deleted
`CreateIndex(IndexName, Func<CreateIndexDescriptor, ICreateIndexRequest>)` method:: deleted
`CreateIndexAsync(ICreateIndexRequest, CancellationToken)` method:: deleted
`CreateIndexAsync(IndexName, Func<CreateIndexDescriptor, ICreateIndexRequest>, CancellationToken)` method:: deleted
`CreateRepository(ICreateRepositoryRequest)` method:: deleted
`CreateRepository(Name, Func<CreateRepositoryDescriptor, ICreateRepositoryRequest>)` method:: deleted
`CreateRepositoryAsync(ICreateRepositoryRequest, CancellationToken)` method:: deleted
`CreateRepositoryAsync(Name, Func<CreateRepositoryDescriptor, ICreateRepositoryRequest>, CancellationToken)` method:: deleted
`CreateRollupJob(ICreateRollupJobRequest)` method:: deleted
`CreateRollupJob<T>(Id, Func<CreateRollupJobDescriptor<T>, ICreateRollupJobRequest>)` method:: deleted
`CreateRollupJobAsync(ICreateRollupJobRequest, CancellationToken)` method:: deleted
`CreateRollupJobAsync<T>(Id, Func<CreateRollupJobDescriptor<T>, ICreateRollupJobRequest>, CancellationToken)` method:: deleted
`DeactivateWatch(Id, Func<DeactivateWatchDescriptor, IDeactivateWatchRequest>)` method:: deleted
`DeactivateWatch(IDeactivateWatchRequest)` method:: deleted
`DeactivateWatchAsync(Id, Func<DeactivateWatchDescriptor, IDeactivateWatchRequest>, CancellationToken)` method:: deleted
`DeactivateWatchAsync(IDeactivateWatchRequest, CancellationToken)` method:: deleted
`Delete<T>(DocumentPath<T>, Func<DeleteDescriptor<T>, IDeleteRequest>)` method:: deleted
`Delete<TDocument>(DocumentPath<TDocument>, Func<DeleteDescriptor<TDocument>, IDeleteRequest>)` method:: added
`Delete(IDeleteRequest)` method::
Member type changed from `IDeleteResponse` to `DeleteResponse`.
`DeleteAlias(IDeleteAliasRequest)` method:: deleted
`DeleteAlias(Indices, Names, Func<DeleteAliasDescriptor, IDeleteAliasRequest>)` method:: deleted
`DeleteAliasAsync(IDeleteAliasRequest, CancellationToken)` method:: deleted
`DeleteAliasAsync(Indices, Names, Func<DeleteAliasDescriptor, IDeleteAliasRequest>, CancellationToken)` method:: deleted
`DeleteAsync<T>(DocumentPath<T>, Func<DeleteDescriptor<T>, IDeleteRequest>, CancellationToken)` method:: deleted
`DeleteAsync<TDocument>(DocumentPath<TDocument>, Func<DeleteDescriptor<TDocument>, IDeleteRequest>, CancellationToken)` method:: added
`DeleteAsync(IDeleteRequest, CancellationToken)` method::
Member type changed from `Task<IDeleteResponse>` to `Task<DeleteResponse>`.
`DeleteAutoFollowPattern(IDeleteAutoFollowPatternRequest)` method:: deleted
`DeleteAutoFollowPattern(Name, Func<DeleteAutoFollowPatternDescriptor, IDeleteAutoFollowPatternRequest>)` method:: deleted
`DeleteAutoFollowPatternAsync(IDeleteAutoFollowPatternRequest, CancellationToken)` method:: deleted
`DeleteAutoFollowPatternAsync(Name, Func<DeleteAutoFollowPatternDescriptor, IDeleteAutoFollowPatternRequest>, CancellationToken)` method:: deleted
`DeleteByQuery(IDeleteByQueryRequest)` method::
Member type changed from `IDeleteByQueryResponse` to `DeleteByQueryResponse`.
`DeleteByQuery<T>(Func<DeleteByQueryDescriptor<T>, IDeleteByQueryRequest>)` method:: deleted
`DeleteByQuery<TDocument>(Func<DeleteByQueryDescriptor<TDocument>, IDeleteByQueryRequest>)` method:: added
`DeleteByQueryAsync(IDeleteByQueryRequest, CancellationToken)` method::
Member type changed from `Task<IDeleteByQueryResponse>` to `Task<DeleteByQueryResponse>`.
`DeleteByQueryAsync<T>(Func<DeleteByQueryDescriptor<T>, IDeleteByQueryRequest>, CancellationToken)` method:: deleted
`DeleteByQueryAsync<TDocument>(Func<DeleteByQueryDescriptor<TDocument>, IDeleteByQueryRequest>, CancellationToken)` method:: added
`DeleteByQueryRethrottle(IDeleteByQueryRethrottleRequest)` method::
Member type changed from `IListTasksResponse` to `ListTasksResponse`.
`DeleteByQueryRethrottle(TaskId, Func<DeleteByQueryRethrottleDescriptor, IDeleteByQueryRethrottleRequest>)` method::
Member type changed from `IListTasksResponse` to `ListTasksResponse`.
`DeleteByQueryRethrottleAsync(IDeleteByQueryRethrottleRequest, CancellationToken)` method::
Member type changed from `Task<IListTasksResponse>` to `Task<ListTasksResponse>`.
`DeleteByQueryRethrottleAsync(TaskId, Func<DeleteByQueryRethrottleDescriptor, IDeleteByQueryRethrottleRequest>, CancellationToken)` method::
Member type changed from `Task<IListTasksResponse>` to `Task<ListTasksResponse>`.
`DeleteCalendar(Id, Func<DeleteCalendarDescriptor, IDeleteCalendarRequest>)` method:: deleted
`DeleteCalendar(IDeleteCalendarRequest)` method:: deleted
`DeleteCalendarAsync(Id, Func<DeleteCalendarDescriptor, IDeleteCalendarRequest>, CancellationToken)` method:: deleted
`DeleteCalendarAsync(IDeleteCalendarRequest, CancellationToken)` method:: deleted
`DeleteCalendarEvent(Id, Id, Func<DeleteCalendarEventDescriptor, IDeleteCalendarEventRequest>)` method:: deleted
`DeleteCalendarEvent(IDeleteCalendarEventRequest)` method:: deleted
`DeleteCalendarEventAsync(Id, Id, Func<DeleteCalendarEventDescriptor, IDeleteCalendarEventRequest>, CancellationToken)` method:: deleted
`DeleteCalendarEventAsync(IDeleteCalendarEventRequest, CancellationToken)` method:: deleted
`DeleteCalendarJob(Id, Id, Func<DeleteCalendarJobDescriptor, IDeleteCalendarJobRequest>)` method:: deleted
`DeleteCalendarJob(IDeleteCalendarJobRequest)` method:: deleted
`DeleteCalendarJobAsync(Id, Id, Func<DeleteCalendarJobDescriptor, IDeleteCalendarJobRequest>, CancellationToken)` method:: deleted
`DeleteCalendarJobAsync(IDeleteCalendarJobRequest, CancellationToken)` method:: deleted
`DeleteDatafeed(Id, Func<DeleteDatafeedDescriptor, IDeleteDatafeedRequest>)` method:: deleted
`DeleteDatafeed(IDeleteDatafeedRequest)` method:: deleted
`DeleteDatafeedAsync(Id, Func<DeleteDatafeedDescriptor, IDeleteDatafeedRequest>, CancellationToken)` method:: deleted
`DeleteDatafeedAsync(IDeleteDatafeedRequest, CancellationToken)` method:: deleted
`DeleteExpiredData(IDeleteExpiredDataRequest)` method:: deleted
`DeleteExpiredData(Func<DeleteExpiredDataDescriptor, IDeleteExpiredDataRequest>)` method:: deleted
`DeleteExpiredDataAsync(IDeleteExpiredDataRequest, CancellationToken)` method:: deleted
`DeleteExpiredDataAsync(Func<DeleteExpiredDataDescriptor, IDeleteExpiredDataRequest>, CancellationToken)` method:: deleted
`DeleteFilter(Id, Func<DeleteFilterDescriptor, IDeleteFilterRequest>)` method:: deleted
`DeleteFilter(IDeleteFilterRequest)` method:: deleted
`DeleteFilterAsync(Id, Func<DeleteFilterDescriptor, IDeleteFilterRequest>, CancellationToken)` method:: deleted
`DeleteFilterAsync(IDeleteFilterRequest, CancellationToken)` method:: deleted
`DeleteForecast(Id, ForecastIds, Func<DeleteForecastDescriptor, IDeleteForecastRequest>)` method:: deleted
`DeleteForecast(IDeleteForecastRequest)` method:: deleted
`DeleteForecastAsync(Id, ForecastIds, Func<DeleteForecastDescriptor, IDeleteForecastRequest>, CancellationToken)` method:: deleted
`DeleteForecastAsync(IDeleteForecastRequest, CancellationToken)` method:: deleted
`DeleteIndex(IDeleteIndexRequest)` method:: deleted
`DeleteIndex(Indices, Func<DeleteIndexDescriptor, IDeleteIndexRequest>)` method:: deleted
`DeleteIndexAsync(IDeleteIndexRequest, CancellationToken)` method:: deleted
`DeleteIndexAsync(Indices, Func<DeleteIndexDescriptor, IDeleteIndexRequest>, CancellationToken)` method:: deleted
`DeleteIndexTemplate(IDeleteIndexTemplateRequest)` method:: deleted
`DeleteIndexTemplate(Name, Func<DeleteIndexTemplateDescriptor, IDeleteIndexTemplateRequest>)` method:: deleted
`DeleteIndexTemplateAsync(IDeleteIndexTemplateRequest, CancellationToken)` method:: deleted
`DeleteIndexTemplateAsync(Name, Func<DeleteIndexTemplateDescriptor, IDeleteIndexTemplateRequest>, CancellationToken)` method:: deleted
`DeleteJob(Id, Func<DeleteJobDescriptor, IDeleteJobRequest>)` method:: deleted
`DeleteJob(IDeleteJobRequest)` method:: deleted
`DeleteJobAsync(Id, Func<DeleteJobDescriptor, IDeleteJobRequest>, CancellationToken)` method:: deleted
`DeleteJobAsync(IDeleteJobRequest, CancellationToken)` method:: deleted
`DeleteLicense(IDeleteLicenseRequest)` method:: deleted
`DeleteLicense(Func<DeleteLicenseDescriptor, IDeleteLicenseRequest>)` method:: deleted
`DeleteLicenseAsync(IDeleteLicenseRequest, CancellationToken)` method:: deleted
`DeleteLicenseAsync(Func<DeleteLicenseDescriptor, IDeleteLicenseRequest>, CancellationToken)` method:: deleted
`DeleteLifecycle(IDeleteLifecycleRequest)` method:: deleted
`DeleteLifecycle(PolicyId, Func<DeleteLifecycleDescriptor, IDeleteLifecycleRequest>)` method:: deleted
`DeleteLifecycleAsync(IDeleteLifecycleRequest, CancellationToken)` method:: deleted
`DeleteLifecycleAsync(PolicyId, Func<DeleteLifecycleDescriptor, IDeleteLifecycleRequest>, CancellationToken)` method:: deleted
`DeleteModelSnapshot(Id, Id, Func<DeleteModelSnapshotDescriptor, IDeleteModelSnapshotRequest>)` method:: deleted
`DeleteModelSnapshot(IDeleteModelSnapshotRequest)` method:: deleted
`DeleteModelSnapshotAsync(Id, Id, Func<DeleteModelSnapshotDescriptor, IDeleteModelSnapshotRequest>, CancellationToken)` method:: deleted
`DeleteModelSnapshotAsync(IDeleteModelSnapshotRequest, CancellationToken)` method:: deleted
`DeletePipeline(Id, Func<DeletePipelineDescriptor, IDeletePipelineRequest>)` method:: deleted
`DeletePipeline(IDeletePipelineRequest)` method:: deleted
`DeletePipelineAsync(Id, Func<DeletePipelineDescriptor, IDeletePipelineRequest>, CancellationToken)` method:: deleted
`DeletePipelineAsync(IDeletePipelineRequest, CancellationToken)` method:: deleted
`DeletePrivileges(IDeletePrivilegesRequest)` method:: deleted
`DeletePrivileges(Name, Name, Func<DeletePrivilegesDescriptor, IDeletePrivilegesRequest>)` method:: deleted
`DeletePrivilegesAsync(IDeletePrivilegesRequest, CancellationToken)` method:: deleted
`DeletePrivilegesAsync(Name, Name, Func<DeletePrivilegesDescriptor, IDeletePrivilegesRequest>, CancellationToken)` method:: deleted
`DeleteRepository(IDeleteRepositoryRequest)` method:: deleted
`DeleteRepository(Names, Func<DeleteRepositoryDescriptor, IDeleteRepositoryRequest>)` method:: deleted
`DeleteRepositoryAsync(IDeleteRepositoryRequest, CancellationToken)` method:: deleted
`DeleteRepositoryAsync(Names, Func<DeleteRepositoryDescriptor, IDeleteRepositoryRequest>, CancellationToken)` method:: deleted
`DeleteRole(IDeleteRoleRequest)` method:: deleted
`DeleteRole(Name, Func<DeleteRoleDescriptor, IDeleteRoleRequest>)` method:: deleted
`DeleteRoleAsync(IDeleteRoleRequest, CancellationToken)` method:: deleted
`DeleteRoleAsync(Name, Func<DeleteRoleDescriptor, IDeleteRoleRequest>, CancellationToken)` method:: deleted
`DeleteRoleMapping(IDeleteRoleMappingRequest)` method:: deleted
`DeleteRoleMapping(Name, Func<DeleteRoleMappingDescriptor, IDeleteRoleMappingRequest>)` method:: deleted
`DeleteRoleMappingAsync(IDeleteRoleMappingRequest, CancellationToken)` method:: deleted
`DeleteRoleMappingAsync(Name, Func<DeleteRoleMappingDescriptor, IDeleteRoleMappingRequest>, CancellationToken)` method:: deleted
`DeleteRollupJob(Id, Func<DeleteRollupJobDescriptor, IDeleteRollupJobRequest>)` method:: deleted
`DeleteRollupJob(IDeleteRollupJobRequest)` method:: deleted
`DeleteRollupJobAsync(Id, Func<DeleteRollupJobDescriptor, IDeleteRollupJobRequest>, CancellationToken)` method:: deleted
`DeleteRollupJobAsync(IDeleteRollupJobRequest, CancellationToken)` method:: deleted
`DeleteScript(Id, Func<DeleteScriptDescriptor, IDeleteScriptRequest>)` method::
Member type changed from `IDeleteScriptResponse` to `DeleteScriptResponse`.
`DeleteScript(IDeleteScriptRequest)` method::
Member type changed from `IDeleteScriptResponse` to `DeleteScriptResponse`.
`DeleteScriptAsync(Id, Func<DeleteScriptDescriptor, IDeleteScriptRequest>, CancellationToken)` method::
Member type changed from `Task<IDeleteScriptResponse>` to `Task<DeleteScriptResponse>`.
`DeleteScriptAsync(IDeleteScriptRequest, CancellationToken)` method::
Member type changed from `Task<IDeleteScriptResponse>` to `Task<DeleteScriptResponse>`.
`DeleteSnapshot(IDeleteSnapshotRequest)` method:: deleted
`DeleteSnapshot(Name, Name, Func<DeleteSnapshotDescriptor, IDeleteSnapshotRequest>)` method:: deleted
`DeleteSnapshotAsync(IDeleteSnapshotRequest, CancellationToken)` method:: deleted
`DeleteSnapshotAsync(Name, Name, Func<DeleteSnapshotDescriptor, IDeleteSnapshotRequest>, CancellationToken)` method:: deleted
`DeleteUser(IDeleteUserRequest)` method:: deleted
`DeleteUser(Name, Func<DeleteUserDescriptor, IDeleteUserRequest>)` method:: deleted
`DeleteUserAsync(IDeleteUserRequest, CancellationToken)` method:: deleted
`DeleteUserAsync(Name, Func<DeleteUserDescriptor, IDeleteUserRequest>, CancellationToken)` method:: deleted
`DeleteWatch(Id, Func<DeleteWatchDescriptor, IDeleteWatchRequest>)` method:: deleted
`DeleteWatch(IDeleteWatchRequest)` method:: deleted
`DeleteWatchAsync(Id, Func<DeleteWatchDescriptor, IDeleteWatchRequest>, CancellationToken)` method:: deleted
`DeleteWatchAsync(IDeleteWatchRequest, CancellationToken)` method:: deleted
`DeprecationInfo(IDeprecationInfoRequest)` method:: deleted
`DeprecationInfo(Func<DeprecationInfoDescriptor, IDeprecationInfoRequest>)` method:: deleted
`DeprecationInfoAsync(IDeprecationInfoRequest, CancellationToken)` method:: deleted
`DeprecationInfoAsync(Func<DeprecationInfoDescriptor, IDeprecationInfoRequest>, CancellationToken)` method:: deleted
`DisableUser(IDisableUserRequest)` method:: deleted
`DisableUser(Name, Func<DisableUserDescriptor, IDisableUserRequest>)` method:: deleted
`DisableUserAsync(IDisableUserRequest, CancellationToken)` method:: deleted
`DisableUserAsync(Name, Func<DisableUserDescriptor, IDisableUserRequest>, CancellationToken)` method:: deleted
`DocumentExists<T>(DocumentPath<T>, Func<DocumentExistsDescriptor<T>, IDocumentExistsRequest>)` method:: deleted
`DocumentExists<TDocument>(DocumentPath<TDocument>, Func<DocumentExistsDescriptor<TDocument>, IDocumentExistsRequest>)` method:: added
`DocumentExists(IDocumentExistsRequest)` method::
Member type changed from `IExistsResponse` to `ExistsResponse`.
`DocumentExistsAsync<T>(DocumentPath<T>, Func<DocumentExistsDescriptor<T>, IDocumentExistsRequest>, CancellationToken)` method:: deleted
`DocumentExistsAsync<TDocument>(DocumentPath<TDocument>, Func<DocumentExistsDescriptor<TDocument>, IDocumentExistsRequest>, CancellationToken)` method:: added
`DocumentExistsAsync(IDocumentExistsRequest, CancellationToken)` method::
Member type changed from `Task<IExistsResponse>` to `Task<ExistsResponse>`.
`EnableUser(IEnableUserRequest)` method:: deleted
`EnableUser(Name, Func<EnableUserDescriptor, IEnableUserRequest>)` method:: deleted
`EnableUserAsync(IEnableUserRequest, CancellationToken)` method:: deleted
`EnableUserAsync(Name, Func<EnableUserDescriptor, IEnableUserRequest>, CancellationToken)` method:: deleted
`ExecutePainlessScript<TResult>(IExecutePainlessScriptRequest)` method::
Member type changed from `IExecutePainlessScriptResponse<TResult>` to `ExecutePainlessScriptResponse<TResult>`.
`ExecutePainlessScript<TResult>(Func<ExecutePainlessScriptDescriptor, IExecutePainlessScriptRequest>)` method::
Member type changed from `IExecutePainlessScriptResponse<TResult>` to `ExecutePainlessScriptResponse<TResult>`.
`ExecutePainlessScriptAsync<TResult>(IExecutePainlessScriptRequest, CancellationToken)` method::
Member type changed from `Task<IExecutePainlessScriptResponse<TResult>>` to `Task<ExecutePainlessScriptResponse<TResult>>`.
`ExecutePainlessScriptAsync<TResult>(Func<ExecutePainlessScriptDescriptor, IExecutePainlessScriptRequest>, CancellationToken)` method::
Member type changed from `Task<IExecutePainlessScriptResponse<TResult>>` to `Task<ExecutePainlessScriptResponse<TResult>>`.
`ExecuteWatch(IExecuteWatchRequest)` method:: deleted
`ExecuteWatch(Func<ExecuteWatchDescriptor, IExecuteWatchRequest>)` method:: deleted
`ExecuteWatchAsync(IExecuteWatchRequest, CancellationToken)` method:: deleted
`ExecuteWatchAsync(Func<ExecuteWatchDescriptor, IExecuteWatchRequest>, CancellationToken)` method:: deleted
`Explain<TDocument>(DocumentPath<TDocument>, Func<ExplainDescriptor<TDocument>, IExplainRequest<TDocument>>)` method:: deleted
`Explain<TDocument>(DocumentPath<TDocument>, Func<ExplainDescriptor<TDocument>, IExplainRequest>)` method:: added
`Explain<TDocument>(IExplainRequest)` method:: added
`Explain<TDocument>(IExplainRequest<TDocument>)` method:: deleted
`ExplainAsync<TDocument>(DocumentPath<TDocument>, Func<ExplainDescriptor<TDocument>, IExplainRequest<TDocument>>, CancellationToken)` method:: deleted
`ExplainAsync<TDocument>(DocumentPath<TDocument>, Func<ExplainDescriptor<TDocument>, IExplainRequest>, CancellationToken)` method:: added
`ExplainAsync<TDocument>(IExplainRequest, CancellationToken)` method:: added
`ExplainAsync<TDocument>(IExplainRequest<TDocument>, CancellationToken)` method:: deleted
`ExplainLifecycle(IExplainLifecycleRequest)` method:: deleted
`ExplainLifecycle(IndexName, Func<ExplainLifecycleDescriptor, IExplainLifecycleRequest>)` method:: deleted
`ExplainLifecycleAsync(IExplainLifecycleRequest, CancellationToken)` method:: deleted
`ExplainLifecycleAsync(IndexName, Func<ExplainLifecycleDescriptor, IExplainLifecycleRequest>, CancellationToken)` method:: deleted
`FieldCapabilities(IFieldCapabilitiesRequest)` method::
Member type changed from `IFieldCapabilitiesResponse` to `FieldCapabilitiesResponse`.
`FieldCapabilities(Indices, Func<FieldCapabilitiesDescriptor, IFieldCapabilitiesRequest>)` method::
Member type changed from `IFieldCapabilitiesResponse` to `FieldCapabilitiesResponse`.
`FieldCapabilitiesAsync(IFieldCapabilitiesRequest, CancellationToken)` method::
Member type changed from `Task<IFieldCapabilitiesResponse>` to `Task<FieldCapabilitiesResponse>`.
`FieldCapabilitiesAsync(Indices, Func<FieldCapabilitiesDescriptor, IFieldCapabilitiesRequest>, CancellationToken)` method::
Member type changed from `Task<IFieldCapabilitiesResponse>` to `Task<FieldCapabilitiesResponse>`.
`Flush(IFlushRequest)` method:: deleted
`Flush(Indices, Func<FlushDescriptor, IFlushRequest>)` method:: deleted
`FlushAsync(IFlushRequest, CancellationToken)` method:: deleted
`FlushAsync(Indices, Func<FlushDescriptor, IFlushRequest>, CancellationToken)` method:: deleted
`FlushJob(Id, Func<FlushJobDescriptor, IFlushJobRequest>)` method:: deleted
`FlushJob(IFlushJobRequest)` method:: deleted
`FlushJobAsync(Id, Func<FlushJobDescriptor, IFlushJobRequest>, CancellationToken)` method:: deleted
`FlushJobAsync(IFlushJobRequest, CancellationToken)` method:: deleted
`FollowIndexStats(IFollowIndexStatsRequest)` method:: deleted
`FollowIndexStats(Indices, Func<FollowIndexStatsDescriptor, IFollowIndexStatsRequest>)` method:: deleted
`FollowIndexStatsAsync(IFollowIndexStatsRequest, CancellationToken)` method:: deleted
`FollowIndexStatsAsync(Indices, Func<FollowIndexStatsDescriptor, IFollowIndexStatsRequest>, CancellationToken)` method:: deleted
`ForceMerge(IForceMergeRequest)` method:: deleted
`ForceMerge(Indices, Func<ForceMergeDescriptor, IForceMergeRequest>)` method:: deleted
`ForceMergeAsync(IForceMergeRequest, CancellationToken)` method:: deleted
`ForceMergeAsync(Indices, Func<ForceMergeDescriptor, IForceMergeRequest>, CancellationToken)` method:: deleted
`ForecastJob(Id, Func<ForecastJobDescriptor, IForecastJobRequest>)` method:: deleted
`ForecastJob(IForecastJobRequest)` method:: deleted
`ForecastJobAsync(Id, Func<ForecastJobDescriptor, IForecastJobRequest>, CancellationToken)` method:: deleted
`ForecastJobAsync(IForecastJobRequest, CancellationToken)` method:: deleted
`Get<T>(DocumentPath<T>, Func<GetDescriptor<T>, IGetRequest>)` method:: deleted
`Get<TDocument>(DocumentPath<TDocument>, Func<GetDescriptor<TDocument>, IGetRequest>)` method:: added
`Get<TDocument>(IGetRequest)` method::
Member type changed from `IGetResponse<T>` to `GetResponse<TDocument>`.
`GetAlias(IGetAliasRequest)` method:: deleted
`GetAlias(Func<GetAliasDescriptor, IGetAliasRequest>)` method:: deleted
`GetAliasAsync(IGetAliasRequest, CancellationToken)` method:: deleted
`GetAliasAsync(Func<GetAliasDescriptor, IGetAliasRequest>, CancellationToken)` method:: deleted
`GetAnomalyRecords(Id, Func<GetAnomalyRecordsDescriptor, IGetAnomalyRecordsRequest>)` method:: deleted
`GetAnomalyRecords(IGetAnomalyRecordsRequest)` method:: deleted
`GetAnomalyRecordsAsync(Id, Func<GetAnomalyRecordsDescriptor, IGetAnomalyRecordsRequest>, CancellationToken)` method:: deleted
`GetAnomalyRecordsAsync(IGetAnomalyRecordsRequest, CancellationToken)` method:: deleted
`GetApiKey(IGetApiKeyRequest)` method:: deleted
`GetApiKey(Func<GetApiKeyDescriptor, IGetApiKeyRequest>)` method:: deleted
`GetApiKeyAsync(IGetApiKeyRequest, CancellationToken)` method:: deleted
`GetApiKeyAsync(Func<GetApiKeyDescriptor, IGetApiKeyRequest>, CancellationToken)` method:: deleted
`GetAsync<T>(DocumentPath<T>, Func<GetDescriptor<T>, IGetRequest>, CancellationToken)` method:: deleted
`GetAsync<TDocument>(DocumentPath<TDocument>, Func<GetDescriptor<TDocument>, IGetRequest>, CancellationToken)` method:: added
`GetAsync<TDocument>(IGetRequest, CancellationToken)` method::
Member type changed from `Task<IGetResponse<T>>` to `Task<GetResponse<TDocument>>`.
`GetAutoFollowPattern(IGetAutoFollowPatternRequest)` method:: deleted
`GetAutoFollowPattern(Func<GetAutoFollowPatternDescriptor, IGetAutoFollowPatternRequest>)` method:: deleted
`GetAutoFollowPatternAsync(IGetAutoFollowPatternRequest, CancellationToken)` method:: deleted
`GetAutoFollowPatternAsync(Func<GetAutoFollowPatternDescriptor, IGetAutoFollowPatternRequest>, CancellationToken)` method:: deleted
`GetBasicLicenseStatus(IGetBasicLicenseStatusRequest)` method:: deleted
`GetBasicLicenseStatus(Func<GetBasicLicenseStatusDescriptor, IGetBasicLicenseStatusRequest>)` method:: deleted
`GetBasicLicenseStatusAsync(IGetBasicLicenseStatusRequest, CancellationToken)` method:: deleted
`GetBasicLicenseStatusAsync(Func<GetBasicLicenseStatusDescriptor, IGetBasicLicenseStatusRequest>, CancellationToken)` method:: deleted
`GetBuckets(Id, Func<GetBucketsDescriptor, IGetBucketsRequest>)` method:: deleted
`GetBuckets(IGetBucketsRequest)` method:: deleted
`GetBucketsAsync(Id, Func<GetBucketsDescriptor, IGetBucketsRequest>, CancellationToken)` method:: deleted
`GetBucketsAsync(IGetBucketsRequest, CancellationToken)` method:: deleted
`GetCalendarEvents(Id, Func<GetCalendarEventsDescriptor, IGetCalendarEventsRequest>)` method:: deleted
`GetCalendarEvents(IGetCalendarEventsRequest)` method:: deleted
`GetCalendarEventsAsync(Id, Func<GetCalendarEventsDescriptor, IGetCalendarEventsRequest>, CancellationToken)` method:: deleted
`GetCalendarEventsAsync(IGetCalendarEventsRequest, CancellationToken)` method:: deleted
`GetCalendars(IGetCalendarsRequest)` method:: deleted
`GetCalendars(Func<GetCalendarsDescriptor, IGetCalendarsRequest>)` method:: deleted
`GetCalendarsAsync(IGetCalendarsRequest, CancellationToken)` method:: deleted
`GetCalendarsAsync(Func<GetCalendarsDescriptor, IGetCalendarsRequest>, CancellationToken)` method:: deleted
`GetCategories(Id, Func<GetCategoriesDescriptor, IGetCategoriesRequest>)` method:: deleted
`GetCategories(IGetCategoriesRequest)` method:: deleted
`GetCategoriesAsync(Id, Func<GetCategoriesDescriptor, IGetCategoriesRequest>, CancellationToken)` method:: deleted
`GetCategoriesAsync(IGetCategoriesRequest, CancellationToken)` method:: deleted
`GetCertificates(IGetCertificatesRequest)` method:: deleted
`GetCertificates(Func<GetCertificatesDescriptor, IGetCertificatesRequest>)` method:: deleted
`GetCertificatesAsync(IGetCertificatesRequest, CancellationToken)` method:: deleted
`GetCertificatesAsync(Func<GetCertificatesDescriptor, IGetCertificatesRequest>, CancellationToken)` method:: deleted
`GetDatafeeds(IGetDatafeedsRequest)` method:: deleted
`GetDatafeeds(Func<GetDatafeedsDescriptor, IGetDatafeedsRequest>)` method:: deleted
`GetDatafeedsAsync(IGetDatafeedsRequest, CancellationToken)` method:: deleted
`GetDatafeedsAsync(Func<GetDatafeedsDescriptor, IGetDatafeedsRequest>, CancellationToken)` method:: deleted
`GetDatafeedStats(IGetDatafeedStatsRequest)` method:: deleted
`GetDatafeedStats(Func<GetDatafeedStatsDescriptor, IGetDatafeedStatsRequest>)` method:: deleted
`GetDatafeedStatsAsync(IGetDatafeedStatsRequest, CancellationToken)` method:: deleted
`GetDatafeedStatsAsync(Func<GetDatafeedStatsDescriptor, IGetDatafeedStatsRequest>, CancellationToken)` method:: deleted
`GetFieldMapping<T>(Fields, Func<GetFieldMappingDescriptor<T>, IGetFieldMappingRequest>)` method:: deleted
`GetFieldMapping(IGetFieldMappingRequest)` method:: deleted
`GetFieldMappingAsync<T>(Fields, Func<GetFieldMappingDescriptor<T>, IGetFieldMappingRequest>, CancellationToken)` method:: deleted
`GetFieldMappingAsync(IGetFieldMappingRequest, CancellationToken)` method:: deleted
`GetFilters(IGetFiltersRequest)` method:: deleted
`GetFilters(Func<GetFiltersDescriptor, IGetFiltersRequest>)` method:: deleted
`GetFiltersAsync(IGetFiltersRequest, CancellationToken)` method:: deleted
`GetFiltersAsync(Func<GetFiltersDescriptor, IGetFiltersRequest>, CancellationToken)` method:: deleted
`GetIlmStatus(IGetIlmStatusRequest)` method:: deleted
`GetIlmStatus(Func<GetIlmStatusDescriptor, IGetIlmStatusRequest>)` method:: deleted
`GetIlmStatusAsync(IGetIlmStatusRequest, CancellationToken)` method:: deleted
`GetIlmStatusAsync(Func<GetIlmStatusDescriptor, IGetIlmStatusRequest>, CancellationToken)` method:: deleted
`GetIndex(IGetIndexRequest)` method:: deleted
`GetIndex(Indices, Func<GetIndexDescriptor, IGetIndexRequest>)` method:: deleted
`GetIndexAsync(IGetIndexRequest, CancellationToken)` method:: deleted
`GetIndexAsync(Indices, Func<GetIndexDescriptor, IGetIndexRequest>, CancellationToken)` method:: deleted
`GetIndexSettings(IGetIndexSettingsRequest)` method:: deleted
`GetIndexSettings(Func<GetIndexSettingsDescriptor, IGetIndexSettingsRequest>)` method:: deleted
`GetIndexSettingsAsync(IGetIndexSettingsRequest, CancellationToken)` method:: deleted
`GetIndexSettingsAsync(Func<GetIndexSettingsDescriptor, IGetIndexSettingsRequest>, CancellationToken)` method:: deleted
`GetIndexTemplate(IGetIndexTemplateRequest)` method:: deleted
`GetIndexTemplate(Func<GetIndexTemplateDescriptor, IGetIndexTemplateRequest>)` method:: deleted
`GetIndexTemplateAsync(IGetIndexTemplateRequest, CancellationToken)` method:: deleted
`GetIndexTemplateAsync(Func<GetIndexTemplateDescriptor, IGetIndexTemplateRequest>, CancellationToken)` method:: deleted
`GetInfluencers(Id, Func<GetInfluencersDescriptor, IGetInfluencersRequest>)` method:: deleted
`GetInfluencers(IGetInfluencersRequest)` method:: deleted
`GetInfluencersAsync(Id, Func<GetInfluencersDescriptor, IGetInfluencersRequest>, CancellationToken)` method:: deleted
`GetInfluencersAsync(IGetInfluencersRequest, CancellationToken)` method:: deleted
`GetJobs(IGetJobsRequest)` method:: deleted
`GetJobs(Func<GetJobsDescriptor, IGetJobsRequest>)` method:: deleted
`GetJobsAsync(IGetJobsRequest, CancellationToken)` method:: deleted
`GetJobsAsync(Func<GetJobsDescriptor, IGetJobsRequest>, CancellationToken)` method:: deleted
`GetJobStats(IGetJobStatsRequest)` method:: deleted
`GetJobStats(Func<GetJobStatsDescriptor, IGetJobStatsRequest>)` method:: deleted
`GetJobStatsAsync(IGetJobStatsRequest, CancellationToken)` method:: deleted
`GetJobStatsAsync(Func<GetJobStatsDescriptor, IGetJobStatsRequest>, CancellationToken)` method:: deleted
`GetLicense(IGetLicenseRequest)` method:: deleted
`GetLicense(Func<GetLicenseDescriptor, IGetLicenseRequest>)` method:: deleted
`GetLicenseAsync(IGetLicenseRequest, CancellationToken)` method:: deleted
`GetLicenseAsync(Func<GetLicenseDescriptor, IGetLicenseRequest>, CancellationToken)` method:: deleted
`GetLifecycle(IGetLifecycleRequest)` method:: deleted
`GetLifecycle(Func<GetLifecycleDescriptor, IGetLifecycleRequest>)` method:: deleted
`GetLifecycleAsync(IGetLifecycleRequest, CancellationToken)` method:: deleted
`GetLifecycleAsync(Func<GetLifecycleDescriptor, IGetLifecycleRequest>, CancellationToken)` method:: deleted
`GetMapping(IGetMappingRequest)` method:: deleted
`GetMapping<T>(Func<GetMappingDescriptor<T>, IGetMappingRequest>)` method:: deleted
`GetMappingAsync(IGetMappingRequest, CancellationToken)` method:: deleted
`GetMappingAsync<T>(Func<GetMappingDescriptor<T>, IGetMappingRequest>, CancellationToken)` method:: deleted
`GetModelSnapshots(Id, Func<GetModelSnapshotsDescriptor, IGetModelSnapshotsRequest>)` method:: deleted
`GetModelSnapshots(IGetModelSnapshotsRequest)` method:: deleted
`GetModelSnapshotsAsync(Id, Func<GetModelSnapshotsDescriptor, IGetModelSnapshotsRequest>, CancellationToken)` method:: deleted
`GetModelSnapshotsAsync(IGetModelSnapshotsRequest, CancellationToken)` method:: deleted
`GetOverallBuckets(Id, Func<GetOverallBucketsDescriptor, IGetOverallBucketsRequest>)` method:: deleted
`GetOverallBuckets(IGetOverallBucketsRequest)` method:: deleted
`GetOverallBucketsAsync(Id, Func<GetOverallBucketsDescriptor, IGetOverallBucketsRequest>, CancellationToken)` method:: deleted
`GetOverallBucketsAsync(IGetOverallBucketsRequest, CancellationToken)` method:: deleted
`GetPipeline(IGetPipelineRequest)` method:: deleted
`GetPipeline(Func<GetPipelineDescriptor, IGetPipelineRequest>)` method:: deleted
`GetPipelineAsync(IGetPipelineRequest, CancellationToken)` method:: deleted
`GetPipelineAsync(Func<GetPipelineDescriptor, IGetPipelineRequest>, CancellationToken)` method:: deleted
`GetPrivileges(IGetPrivilegesRequest)` method:: deleted
`GetPrivileges(Func<GetPrivilegesDescriptor, IGetPrivilegesRequest>)` method:: deleted
`GetPrivilegesAsync(IGetPrivilegesRequest, CancellationToken)` method:: deleted
`GetPrivilegesAsync(Func<GetPrivilegesDescriptor, IGetPrivilegesRequest>, CancellationToken)` method:: deleted
`GetRepository(IGetRepositoryRequest)` method:: deleted
`GetRepository(Func<GetRepositoryDescriptor, IGetRepositoryRequest>)` method:: deleted
`GetRepositoryAsync(IGetRepositoryRequest, CancellationToken)` method:: deleted
`GetRepositoryAsync(Func<GetRepositoryDescriptor, IGetRepositoryRequest>, CancellationToken)` method:: deleted
`GetRole(IGetRoleRequest)` method:: deleted
`GetRole(Func<GetRoleDescriptor, IGetRoleRequest>)` method:: deleted
`GetRoleAsync(IGetRoleRequest, CancellationToken)` method:: deleted
`GetRoleAsync(Func<GetRoleDescriptor, IGetRoleRequest>, CancellationToken)` method:: deleted
`GetRoleMapping(IGetRoleMappingRequest)` method:: deleted
`GetRoleMapping(Func<GetRoleMappingDescriptor, IGetRoleMappingRequest>)` method:: deleted
`GetRoleMappingAsync(IGetRoleMappingRequest, CancellationToken)` method:: deleted
`GetRoleMappingAsync(Func<GetRoleMappingDescriptor, IGetRoleMappingRequest>, CancellationToken)` method:: deleted
`GetRollupCapabilities(IGetRollupCapabilitiesRequest)` method:: deleted
`GetRollupCapabilities(Func<GetRollupCapabilitiesDescriptor, IGetRollupCapabilitiesRequest>)` method:: deleted
`GetRollupCapabilitiesAsync(IGetRollupCapabilitiesRequest, CancellationToken)` method:: deleted
`GetRollupCapabilitiesAsync(Func<GetRollupCapabilitiesDescriptor, IGetRollupCapabilitiesRequest>, CancellationToken)` method:: deleted
`GetRollupIndexCapabilities(IGetRollupIndexCapabilitiesRequest)` method:: deleted
`GetRollupIndexCapabilities(IndexName, Func<GetRollupIndexCapabilitiesDescriptor, IGetRollupIndexCapabilitiesRequest>)` method:: deleted
`GetRollupIndexCapabilitiesAsync(IGetRollupIndexCapabilitiesRequest, CancellationToken)` method:: deleted
`GetRollupIndexCapabilitiesAsync(IndexName, Func<GetRollupIndexCapabilitiesDescriptor, IGetRollupIndexCapabilitiesRequest>, CancellationToken)` method:: deleted
`GetRollupJob(IGetRollupJobRequest)` method:: deleted
`GetRollupJob(Func<GetRollupJobDescriptor, IGetRollupJobRequest>)` method:: deleted
`GetRollupJobAsync(IGetRollupJobRequest, CancellationToken)` method:: deleted
`GetRollupJobAsync(Func<GetRollupJobDescriptor, IGetRollupJobRequest>, CancellationToken)` method:: deleted
`GetScript(Id, Func<GetScriptDescriptor, IGetScriptRequest>)` method::
Member type changed from `IGetScriptResponse` to `GetScriptResponse`.
`GetScript(IGetScriptRequest)` method::
Member type changed from `IGetScriptResponse` to `GetScriptResponse`.
`GetScriptAsync(Id, Func<GetScriptDescriptor, IGetScriptRequest>, CancellationToken)` method::
Member type changed from `Task<IGetScriptResponse>` to `Task<GetScriptResponse>`.
`GetScriptAsync(IGetScriptRequest, CancellationToken)` method::
Member type changed from `Task<IGetScriptResponse>` to `Task<GetScriptResponse>`.
`GetSnapshot(IGetSnapshotRequest)` method:: deleted
`GetSnapshot(Name, Names, Func<GetSnapshotDescriptor, IGetSnapshotRequest>)` method:: deleted
`GetSnapshotAsync(IGetSnapshotRequest, CancellationToken)` method:: deleted
`GetSnapshotAsync(Name, Names, Func<GetSnapshotDescriptor, IGetSnapshotRequest>, CancellationToken)` method:: deleted
`GetTask(IGetTaskRequest)` method:: deleted
`GetTask(TaskId, Func<GetTaskDescriptor, IGetTaskRequest>)` method:: deleted
`GetTaskAsync(IGetTaskRequest, CancellationToken)` method:: deleted
`GetTaskAsync(TaskId, Func<GetTaskDescriptor, IGetTaskRequest>, CancellationToken)` method:: deleted
`GetTrialLicenseStatus(IGetTrialLicenseStatusRequest)` method:: deleted
`GetTrialLicenseStatus(Func<GetTrialLicenseStatusDescriptor, IGetTrialLicenseStatusRequest>)` method:: deleted
`GetTrialLicenseStatusAsync(IGetTrialLicenseStatusRequest, CancellationToken)` method:: deleted
`GetTrialLicenseStatusAsync(Func<GetTrialLicenseStatusDescriptor, IGetTrialLicenseStatusRequest>, CancellationToken)` method:: deleted
`GetUser(IGetUserRequest)` method:: deleted
`GetUser(Func<GetUserDescriptor, IGetUserRequest>)` method:: deleted
`GetUserAccessToken(IGetUserAccessTokenRequest)` method:: deleted
`GetUserAccessToken(String, String, Func<GetUserAccessTokenDescriptor, IGetUserAccessTokenRequest>)` method:: deleted
`GetUserAccessTokenAsync(IGetUserAccessTokenRequest, CancellationToken)` method:: deleted
`GetUserAccessTokenAsync(String, String, Func<GetUserAccessTokenDescriptor, IGetUserAccessTokenRequest>, CancellationToken)` method:: deleted
`GetUserAsync(IGetUserRequest, CancellationToken)` method:: deleted
`GetUserAsync(Func<GetUserDescriptor, IGetUserRequest>, CancellationToken)` method:: deleted
`GetUserPrivileges(IGetUserPrivilegesRequest)` method:: deleted
`GetUserPrivileges(Func<GetUserPrivilegesDescriptor, IGetUserPrivilegesRequest>)` method:: deleted
`GetUserPrivilegesAsync(IGetUserPrivilegesRequest, CancellationToken)` method:: deleted
`GetUserPrivilegesAsync(Func<GetUserPrivilegesDescriptor, IGetUserPrivilegesRequest>, CancellationToken)` method:: deleted
`GetWatch(Id, Func<GetWatchDescriptor, IGetWatchRequest>)` method:: deleted
`GetWatch(IGetWatchRequest)` method:: deleted
`GetWatchAsync(Id, Func<GetWatchDescriptor, IGetWatchRequest>, CancellationToken)` method:: deleted
`GetWatchAsync(IGetWatchRequest, CancellationToken)` method:: deleted
`GraphExplore(IGraphExploreRequest)` method:: deleted
`GraphExplore<T>(Func<GraphExploreDescriptor<T>, IGraphExploreRequest>)` method:: deleted
`GraphExploreAsync(IGraphExploreRequest, CancellationToken)` method:: deleted
`GraphExploreAsync<T>(Func<GraphExploreDescriptor<T>, IGraphExploreRequest>, CancellationToken)` method:: deleted
`GrokProcessorPatterns(IGrokProcessorPatternsRequest)` method:: deleted
`GrokProcessorPatterns(Func<GrokProcessorPatternsDescriptor, IGrokProcessorPatternsRequest>)` method:: deleted
`GrokProcessorPatternsAsync(IGrokProcessorPatternsRequest, CancellationToken)` method:: deleted
`GrokProcessorPatternsAsync(Func<GrokProcessorPatternsDescriptor, IGrokProcessorPatternsRequest>, CancellationToken)` method:: deleted
`HasPrivileges(IHasPrivilegesRequest)` method:: deleted
`HasPrivileges(Func<HasPrivilegesDescriptor, IHasPrivilegesRequest>)` method:: deleted
`HasPrivilegesAsync(IHasPrivilegesRequest, CancellationToken)` method:: deleted
`HasPrivilegesAsync(Func<HasPrivilegesDescriptor, IHasPrivilegesRequest>, CancellationToken)` method:: deleted
`Index<T>(IIndexRequest<T>)` method:: deleted
`Index<TDocument>(IIndexRequest<TDocument>)` method:: added
`Index<T>(T, Func<IndexDescriptor<T>, IIndexRequest<T>>)` method:: deleted
`Index<TDocument>(TDocument, Func<IndexDescriptor<TDocument>, IIndexRequest<TDocument>>)` method:: added
`IndexAsync<T>(IIndexRequest<T>, CancellationToken)` method:: deleted
`IndexAsync<TDocument>(IIndexRequest<TDocument>, CancellationToken)` method:: added
`IndexAsync<T>(T, Func<IndexDescriptor<T>, IIndexRequest<T>>, CancellationToken)` method:: deleted
`IndexAsync<TDocument>(TDocument, Func<IndexDescriptor<TDocument>, IIndexRequest<TDocument>>, CancellationToken)` method:: added
`IndexDocument<T>(T)` method:: deleted
`IndexDocument<TDocument>(TDocument)` method:: added
`IndexDocumentAsync<T>(T, CancellationToken)` method:: deleted
`IndexDocumentAsync<TDocument>(TDocument, CancellationToken)` method:: added
`IndexExists(IIndexExistsRequest)` method:: deleted
`IndexExists(Indices, Func<IndexExistsDescriptor, IIndexExistsRequest>)` method:: deleted
`IndexExistsAsync(IIndexExistsRequest, CancellationToken)` method:: deleted
`IndexExistsAsync(Indices, Func<IndexExistsDescriptor, IIndexExistsRequest>, CancellationToken)` method:: deleted
`IndexTemplateExists(IIndexTemplateExistsRequest)` method:: deleted
`IndexTemplateExists(Name, Func<IndexTemplateExistsDescriptor, IIndexTemplateExistsRequest>)` method:: deleted
`IndexTemplateExistsAsync(IIndexTemplateExistsRequest, CancellationToken)` method:: deleted
`IndexTemplateExistsAsync(Name, Func<IndexTemplateExistsDescriptor, IIndexTemplateExistsRequest>, CancellationToken)` method:: deleted
`IndicesShardStores(IIndicesShardStoresRequest)` method:: deleted
`IndicesShardStores(Func<IndicesShardStoresDescriptor, IIndicesShardStoresRequest>)` method:: deleted
`IndicesShardStoresAsync(IIndicesShardStoresRequest, CancellationToken)` method:: deleted
`IndicesShardStoresAsync(Func<IndicesShardStoresDescriptor, IIndicesShardStoresRequest>, CancellationToken)` method:: deleted
`IndicesStats(IIndicesStatsRequest)` method:: deleted
`IndicesStats(Indices, Func<IndicesStatsDescriptor, IIndicesStatsRequest>)` method:: deleted
`IndicesStatsAsync(IIndicesStatsRequest, CancellationToken)` method:: deleted
`IndicesStatsAsync(Indices, Func<IndicesStatsDescriptor, IIndicesStatsRequest>, CancellationToken)` method:: deleted
`InvalidateApiKey(IInvalidateApiKeyRequest)` method:: deleted
`InvalidateApiKey(Func<InvalidateApiKeyDescriptor, IInvalidateApiKeyRequest>)` method:: deleted
`InvalidateApiKeyAsync(IInvalidateApiKeyRequest, CancellationToken)` method:: deleted
`InvalidateApiKeyAsync(Func<InvalidateApiKeyDescriptor, IInvalidateApiKeyRequest>, CancellationToken)` method:: deleted
`InvalidateUserAccessToken(IInvalidateUserAccessTokenRequest)` method:: deleted
`InvalidateUserAccessToken(String, Func<InvalidateUserAccessTokenDescriptor, IInvalidateUserAccessTokenRequest>)` method:: deleted
`InvalidateUserAccessTokenAsync(IInvalidateUserAccessTokenRequest, CancellationToken)` method:: deleted
`InvalidateUserAccessTokenAsync(String, Func<InvalidateUserAccessTokenDescriptor, IInvalidateUserAccessTokenRequest>, CancellationToken)` method:: deleted
`ListTasks(IListTasksRequest)` method:: deleted
`ListTasks(Func<ListTasksDescriptor, IListTasksRequest>)` method:: deleted
`ListTasksAsync(IListTasksRequest, CancellationToken)` method:: deleted
`ListTasksAsync(Func<ListTasksDescriptor, IListTasksRequest>, CancellationToken)` method:: deleted
`MachineLearningInfo(IMachineLearningInfoRequest)` method:: deleted
`MachineLearningInfo(Func<MachineLearningInfoDescriptor, IMachineLearningInfoRequest>)` method:: deleted
`MachineLearningInfoAsync(IMachineLearningInfoRequest, CancellationToken)` method:: deleted
`MachineLearningInfoAsync(Func<MachineLearningInfoDescriptor, IMachineLearningInfoRequest>, CancellationToken)` method:: deleted
`Map(IPutMappingRequest)` method::
Member type changed from `IPutMappingResponse` to `PutMappingResponse`.
`Map<T>(Func<PutMappingDescriptor<T>, IPutMappingRequest>)` method::
Member type changed from `IPutMappingResponse` to `PutMappingResponse`.
`MapAsync(IPutMappingRequest, CancellationToken)` method::
Member type changed from `Task<IPutMappingResponse>` to `Task<PutMappingResponse>`.
`MapAsync<T>(Func<PutMappingDescriptor<T>, IPutMappingRequest>, CancellationToken)` method::
Member type changed from `Task<IPutMappingResponse>` to `Task<PutMappingResponse>`.
`MigrationAssistance(IMigrationAssistanceRequest)` method:: deleted
`MigrationAssistance(Func<MigrationAssistanceDescriptor, IMigrationAssistanceRequest>)` method:: deleted
`MigrationAssistanceAsync(IMigrationAssistanceRequest, CancellationToken)` method:: deleted
`MigrationAssistanceAsync(Func<MigrationAssistanceDescriptor, IMigrationAssistanceRequest>, CancellationToken)` method:: deleted
`MigrationUpgrade(IMigrationUpgradeRequest)` method:: deleted
`MigrationUpgrade(IndexName, Func<MigrationUpgradeDescriptor, IMigrationUpgradeRequest>)` method:: deleted
`MigrationUpgradeAsync(IMigrationUpgradeRequest, CancellationToken)` method:: deleted
`MigrationUpgradeAsync(IndexName, Func<MigrationUpgradeDescriptor, IMigrationUpgradeRequest>, CancellationToken)` method:: deleted
`MoveToStep(IMoveToStepRequest)` method:: deleted
`MoveToStep(IndexName, Func<MoveToStepDescriptor, IMoveToStepRequest>)` method:: deleted
`MoveToStepAsync(IMoveToStepRequest, CancellationToken)` method:: deleted
`MoveToStepAsync(IndexName, Func<MoveToStepDescriptor, IMoveToStepRequest>, CancellationToken)` method:: deleted
`MultiGet(IMultiGetRequest)` method::
Member type changed from `IMultiGetResponse` to `MultiGetResponse`.
`MultiGet(Func<MultiGetDescriptor, IMultiGetRequest>)` method::
Member type changed from `IMultiGetResponse` to `MultiGetResponse`.
`MultiGetAsync(IMultiGetRequest, CancellationToken)` method::
Member type changed from `Task<IMultiGetResponse>` to `Task<MultiGetResponse>`.
`MultiGetAsync(Func<MultiGetDescriptor, IMultiGetRequest>, CancellationToken)` method::
Member type changed from `Task<IMultiGetResponse>` to `Task<MultiGetResponse>`.
`MultiSearch(IMultiSearchRequest)` method::
Member type changed from `IMultiSearchResponse` to `MultiSearchResponse`.
`MultiSearch(Indices, Func<MultiSearchDescriptor, IMultiSearchRequest>)` method:: added
`MultiSearch(Func<MultiSearchDescriptor, IMultiSearchRequest>)` method:: deleted
`MultiSearchAsync(IMultiSearchRequest, CancellationToken)` method::
Member type changed from `Task<IMultiSearchResponse>` to `Task<MultiSearchResponse>`.
`MultiSearchAsync(Indices, Func<MultiSearchDescriptor, IMultiSearchRequest>, CancellationToken)` method:: added
`MultiSearchAsync(Func<MultiSearchDescriptor, IMultiSearchRequest>, CancellationToken)` method:: deleted
`MultiSearchTemplate(IMultiSearchTemplateRequest)` method::
Member type changed from `IMultiSearchResponse` to `MultiSearchResponse`.
`MultiSearchTemplate(Indices, Func<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest>)` method:: added
`MultiSearchTemplate(Func<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest>)` method:: deleted
`MultiSearchTemplateAsync(IMultiSearchTemplateRequest, CancellationToken)` method::
Member type changed from `Task<IMultiSearchResponse>` to `Task<MultiSearchResponse>`.
`MultiSearchTemplateAsync(Indices, Func<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest>, CancellationToken)` method:: added
`MultiSearchTemplateAsync(Func<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest>, CancellationToken)` method:: deleted
`MultiTermVectors(IMultiTermVectorsRequest)` method::
Member type changed from `IMultiTermVectorsResponse` to `MultiTermVectorsResponse`.
`MultiTermVectors(Func<MultiTermVectorsDescriptor, IMultiTermVectorsRequest>)` method::
Member type changed from `IMultiTermVectorsResponse` to `MultiTermVectorsResponse`.
`MultiTermVectorsAsync(IMultiTermVectorsRequest, CancellationToken)` method::
Member type changed from `Task<IMultiTermVectorsResponse>` to `Task<MultiTermVectorsResponse>`.
`MultiTermVectorsAsync(Func<MultiTermVectorsDescriptor, IMultiTermVectorsRequest>, CancellationToken)` method::
Member type changed from `Task<IMultiTermVectorsResponse>` to `Task<MultiTermVectorsResponse>`.
`NodesHotThreads(INodesHotThreadsRequest)` method:: deleted
`NodesHotThreads(Func<NodesHotThreadsDescriptor, INodesHotThreadsRequest>)` method:: deleted
`NodesHotThreadsAsync(INodesHotThreadsRequest, CancellationToken)` method:: deleted
`NodesHotThreadsAsync(Func<NodesHotThreadsDescriptor, INodesHotThreadsRequest>, CancellationToken)` method:: deleted
`NodesInfo(INodesInfoRequest)` method:: deleted
`NodesInfo(Func<NodesInfoDescriptor, INodesInfoRequest>)` method:: deleted
`NodesInfoAsync(INodesInfoRequest, CancellationToken)` method:: deleted
`NodesInfoAsync(Func<NodesInfoDescriptor, INodesInfoRequest>, CancellationToken)` method:: deleted
`NodesStats(INodesStatsRequest)` method:: deleted
`NodesStats(Func<NodesStatsDescriptor, INodesStatsRequest>)` method:: deleted
`NodesStatsAsync(INodesStatsRequest, CancellationToken)` method:: deleted
`NodesStatsAsync(Func<NodesStatsDescriptor, INodesStatsRequest>, CancellationToken)` method:: deleted
`NodesUsage(INodesUsageRequest)` method:: deleted
`NodesUsage(Func<NodesUsageDescriptor, INodesUsageRequest>)` method:: deleted
`NodesUsageAsync(INodesUsageRequest, CancellationToken)` method:: deleted
`NodesUsageAsync(Func<NodesUsageDescriptor, INodesUsageRequest>, CancellationToken)` method:: deleted
`OpenIndex(Indices, Func<OpenIndexDescriptor, IOpenIndexRequest>)` method:: deleted
`OpenIndex(IOpenIndexRequest)` method:: deleted
`OpenIndexAsync(Indices, Func<OpenIndexDescriptor, IOpenIndexRequest>, CancellationToken)` method:: deleted
`OpenIndexAsync(IOpenIndexRequest, CancellationToken)` method:: deleted
`OpenJob(Id, Func<OpenJobDescriptor, IOpenJobRequest>)` method:: deleted
`OpenJob(IOpenJobRequest)` method:: deleted
`OpenJobAsync(Id, Func<OpenJobDescriptor, IOpenJobRequest>, CancellationToken)` method:: deleted
`OpenJobAsync(IOpenJobRequest, CancellationToken)` method:: deleted
`PauseFollowIndex(IndexName, Func<PauseFollowIndexDescriptor, IPauseFollowIndexRequest>)` method:: deleted
`PauseFollowIndex(IPauseFollowIndexRequest)` method:: deleted
`PauseFollowIndexAsync(IndexName, Func<PauseFollowIndexDescriptor, IPauseFollowIndexRequest>, CancellationToken)` method:: deleted
`PauseFollowIndexAsync(IPauseFollowIndexRequest, CancellationToken)` method:: deleted
`Ping(IPingRequest)` method::
Member type changed from `IPingResponse` to `PingResponse`.
`Ping(Func<PingDescriptor, IPingRequest>)` method::
Member type changed from `IPingResponse` to `PingResponse`.
`PingAsync(IPingRequest, CancellationToken)` method::
Member type changed from `Task<IPingResponse>` to `Task<PingResponse>`.
`PingAsync(Func<PingDescriptor, IPingRequest>, CancellationToken)` method::
Member type changed from `Task<IPingResponse>` to `Task<PingResponse>`.
`PostCalendarEvents(Id, Func<PostCalendarEventsDescriptor, IPostCalendarEventsRequest>)` method:: deleted
`PostCalendarEvents(IPostCalendarEventsRequest)` method:: deleted
`PostCalendarEventsAsync(Id, Func<PostCalendarEventsDescriptor, IPostCalendarEventsRequest>, CancellationToken)` method:: deleted
`PostCalendarEventsAsync(IPostCalendarEventsRequest, CancellationToken)` method:: deleted
`PostJobData(Id, Func<PostJobDataDescriptor, IPostJobDataRequest>)` method:: deleted
`PostJobData(IPostJobDataRequest)` method:: deleted
`PostJobDataAsync(Id, Func<PostJobDataDescriptor, IPostJobDataRequest>, CancellationToken)` method:: deleted
`PostJobDataAsync(IPostJobDataRequest, CancellationToken)` method:: deleted
`PostLicense(IPostLicenseRequest)` method:: deleted
`PostLicense(Func<PostLicenseDescriptor, IPostLicenseRequest>)` method:: deleted
`PostLicenseAsync(IPostLicenseRequest, CancellationToken)` method:: deleted
`PostLicenseAsync(Func<PostLicenseDescriptor, IPostLicenseRequest>, CancellationToken)` method:: deleted
`PreviewDatafeed<T>(Id, Func<PreviewDatafeedDescriptor, IPreviewDatafeedRequest>)` method:: deleted
`PreviewDatafeed<T>(IPreviewDatafeedRequest)` method:: deleted
`PreviewDatafeedAsync<T>(Id, Func<PreviewDatafeedDescriptor, IPreviewDatafeedRequest>, CancellationToken)` method:: deleted
`PreviewDatafeedAsync<T>(IPreviewDatafeedRequest, CancellationToken)` method:: deleted
`PutAlias(Indices, Name, Func<PutAliasDescriptor, IPutAliasRequest>)` method:: deleted
`PutAlias(IPutAliasRequest)` method:: deleted
`PutAliasAsync(Indices, Name, Func<PutAliasDescriptor, IPutAliasRequest>, CancellationToken)` method:: deleted
`PutAliasAsync(IPutAliasRequest, CancellationToken)` method:: deleted
`PutCalendar(Id, Func<PutCalendarDescriptor, IPutCalendarRequest>)` method:: deleted
`PutCalendar(IPutCalendarRequest)` method:: deleted
`PutCalendarAsync(Id, Func<PutCalendarDescriptor, IPutCalendarRequest>, CancellationToken)` method:: deleted
`PutCalendarAsync(IPutCalendarRequest, CancellationToken)` method:: deleted
`PutCalendarJob(Id, Id, Func<PutCalendarJobDescriptor, IPutCalendarJobRequest>)` method:: deleted
`PutCalendarJob(IPutCalendarJobRequest)` method:: deleted
`PutCalendarJobAsync(Id, Id, Func<PutCalendarJobDescriptor, IPutCalendarJobRequest>, CancellationToken)` method:: deleted
`PutCalendarJobAsync(IPutCalendarJobRequest, CancellationToken)` method:: deleted
`PutDatafeed<T>(Id, Func<PutDatafeedDescriptor<T>, IPutDatafeedRequest>)` method:: deleted
`PutDatafeed(IPutDatafeedRequest)` method:: deleted
`PutDatafeedAsync<T>(Id, Func<PutDatafeedDescriptor<T>, IPutDatafeedRequest>, CancellationToken)` method:: deleted
`PutDatafeedAsync(IPutDatafeedRequest, CancellationToken)` method:: deleted
`PutFilter(Id, Func<PutFilterDescriptor, IPutFilterRequest>)` method:: deleted
`PutFilter(IPutFilterRequest)` method:: deleted
`PutFilterAsync(Id, Func<PutFilterDescriptor, IPutFilterRequest>, CancellationToken)` method:: deleted
`PutFilterAsync(IPutFilterRequest, CancellationToken)` method:: deleted
`PutIndexTemplate(IPutIndexTemplateRequest)` method:: deleted
`PutIndexTemplate(Name, Func<PutIndexTemplateDescriptor, IPutIndexTemplateRequest>)` method:: deleted
`PutIndexTemplateAsync(IPutIndexTemplateRequest, CancellationToken)` method:: deleted
`PutIndexTemplateAsync(Name, Func<PutIndexTemplateDescriptor, IPutIndexTemplateRequest>, CancellationToken)` method:: deleted
`PutJob<T>(Id, Func<PutJobDescriptor<T>, IPutJobRequest>)` method:: deleted
`PutJob(IPutJobRequest)` method:: deleted
`PutJobAsync<T>(Id, Func<PutJobDescriptor<T>, IPutJobRequest>, CancellationToken)` method:: deleted
`PutJobAsync(IPutJobRequest, CancellationToken)` method:: deleted
`PutLifecycle(IPutLifecycleRequest)` method:: deleted
`PutLifecycle(PolicyId, Func<PutLifecycleDescriptor, IPutLifecycleRequest>)` method:: deleted
`PutLifecycleAsync(IPutLifecycleRequest, CancellationToken)` method:: deleted
`PutLifecycleAsync(PolicyId, Func<PutLifecycleDescriptor, IPutLifecycleRequest>, CancellationToken)` method:: deleted
`PutPipeline(Id, Func<PutPipelineDescriptor, IPutPipelineRequest>)` method:: deleted
`PutPipeline(IPutPipelineRequest)` method:: deleted
`PutPipelineAsync(Id, Func<PutPipelineDescriptor, IPutPipelineRequest>, CancellationToken)` method:: deleted
`PutPipelineAsync(IPutPipelineRequest, CancellationToken)` method:: deleted
`PutPrivileges(IPutPrivilegesRequest)` method:: deleted
`PutPrivileges(Func<PutPrivilegesDescriptor, IPutPrivilegesRequest>)` method:: deleted
`PutPrivilegesAsync(IPutPrivilegesRequest, CancellationToken)` method:: deleted
`PutPrivilegesAsync(Func<PutPrivilegesDescriptor, IPutPrivilegesRequest>, CancellationToken)` method:: deleted
`PutRole(IPutRoleRequest)` method:: deleted
`PutRole(Name, Func<PutRoleDescriptor, IPutRoleRequest>)` method:: deleted
`PutRoleAsync(IPutRoleRequest, CancellationToken)` method:: deleted
`PutRoleAsync(Name, Func<PutRoleDescriptor, IPutRoleRequest>, CancellationToken)` method:: deleted
`PutRoleMapping(IPutRoleMappingRequest)` method:: deleted
`PutRoleMapping(Name, Func<PutRoleMappingDescriptor, IPutRoleMappingRequest>)` method:: deleted
`PutRoleMappingAsync(IPutRoleMappingRequest, CancellationToken)` method:: deleted
`PutRoleMappingAsync(Name, Func<PutRoleMappingDescriptor, IPutRoleMappingRequest>, CancellationToken)` method:: deleted
`PutScript(Id, Func<PutScriptDescriptor, IPutScriptRequest>)` method::
Member type changed from `IPutScriptResponse` to `PutScriptResponse`.
`PutScript(IPutScriptRequest)` method::
Member type changed from `IPutScriptResponse` to `PutScriptResponse`.
`PutScriptAsync(Id, Func<PutScriptDescriptor, IPutScriptRequest>, CancellationToken)` method::
Member type changed from `Task<IPutScriptResponse>` to `Task<PutScriptResponse>`.
`PutScriptAsync(IPutScriptRequest, CancellationToken)` method::
Member type changed from `Task<IPutScriptResponse>` to `Task<PutScriptResponse>`.
`PutUser(IPutUserRequest)` method:: deleted
`PutUser(Name, Func<PutUserDescriptor, IPutUserRequest>)` method:: deleted
`PutUserAsync(IPutUserRequest, CancellationToken)` method:: deleted
`PutUserAsync(Name, Func<PutUserDescriptor, IPutUserRequest>, CancellationToken)` method:: deleted
`PutWatch(Id, Func<PutWatchDescriptor, IPutWatchRequest>)` method:: deleted
`PutWatch(IPutWatchRequest)` method:: deleted
`PutWatchAsync(Id, Func<PutWatchDescriptor, IPutWatchRequest>, CancellationToken)` method:: deleted
`PutWatchAsync(IPutWatchRequest, CancellationToken)` method:: deleted
`QuerySql(IQuerySqlRequest)` method:: deleted
`QuerySql(Func<QuerySqlDescriptor, IQuerySqlRequest>)` method:: deleted
`QuerySqlAsync(IQuerySqlRequest, CancellationToken)` method:: deleted
`QuerySqlAsync(Func<QuerySqlDescriptor, IQuerySqlRequest>, CancellationToken)` method:: deleted
`RecoveryStatus(Indices, Func<RecoveryStatusDescriptor, IRecoveryStatusRequest>)` method:: deleted
`RecoveryStatus(IRecoveryStatusRequest)` method:: deleted
`RecoveryStatusAsync(Indices, Func<RecoveryStatusDescriptor, IRecoveryStatusRequest>, CancellationToken)` method:: deleted
`RecoveryStatusAsync(IRecoveryStatusRequest, CancellationToken)` method:: deleted
`Refresh(Indices, Func<RefreshDescriptor, IRefreshRequest>)` method:: deleted
`Refresh(IRefreshRequest)` method:: deleted
`RefreshAsync(Indices, Func<RefreshDescriptor, IRefreshRequest>, CancellationToken)` method:: deleted
`RefreshAsync(IRefreshRequest, CancellationToken)` method:: deleted
`Reindex<TSource>(IndexName, IndexName, Func<QueryContainerDescriptor<TSource>, QueryContainer>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource, TTarget>(IndexName, IndexName, Func<TSource, TTarget>, Func<QueryContainerDescriptor<TSource>, QueryContainer>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource>(IReindexRequest<TSource>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource, TTarget>(IReindexRequest<TSource, TTarget>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource>(Func<ReindexDescriptor<TSource, TSource>, IReindexRequest<TSource, TSource>>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource, TTarget>(Func<TSource, TTarget>, Func<ReindexDescriptor<TSource, TTarget>, IReindexRequest<TSource, TTarget>>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`ReindexOnServer(IReindexOnServerRequest)` method::
Member type changed from `IReindexOnServerResponse` to `ReindexOnServerResponse`.
`ReindexOnServer(Func<ReindexOnServerDescriptor, IReindexOnServerRequest>)` method::
Member type changed from `IReindexOnServerResponse` to `ReindexOnServerResponse`.
`ReindexOnServerAsync(IReindexOnServerRequest, CancellationToken)` method::
Member type changed from `Task<IReindexOnServerResponse>` to `Task<ReindexOnServerResponse>`.
`ReindexOnServerAsync(Func<ReindexOnServerDescriptor, IReindexOnServerRequest>, CancellationToken)` method::
Member type changed from `Task<IReindexOnServerResponse>` to `Task<ReindexOnServerResponse>`.
`ReindexRethrottle(IReindexRethrottleRequest)` method:: added
`ReindexRethrottle(TaskId, Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>)` method:: added
`ReindexRethrottleAsync(IReindexRethrottleRequest, CancellationToken)` method:: added
`ReindexRethrottleAsync(TaskId, Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>, CancellationToken)` method:: added
`ReloadSecureSettings(IReloadSecureSettingsRequest)` method:: deleted
`ReloadSecureSettings(Func<ReloadSecureSettingsDescriptor, IReloadSecureSettingsRequest>)` method:: deleted
`ReloadSecureSettingsAsync(IReloadSecureSettingsRequest, CancellationToken)` method:: deleted
`ReloadSecureSettingsAsync(Func<ReloadSecureSettingsDescriptor, IReloadSecureSettingsRequest>, CancellationToken)` method:: deleted
`RemoteInfo(IRemoteInfoRequest)` method:: deleted
`RemoteInfo(Func<RemoteInfoDescriptor, IRemoteInfoRequest>)` method:: deleted
`RemoteInfoAsync(IRemoteInfoRequest, CancellationToken)` method:: deleted
`RemoteInfoAsync(Func<RemoteInfoDescriptor, IRemoteInfoRequest>, CancellationToken)` method:: deleted
`RemovePolicy(IndexName, Func<RemovePolicyDescriptor, IRemovePolicyRequest>)` method:: deleted
`RemovePolicy(IRemovePolicyRequest)` method:: deleted
`RemovePolicyAsync(IndexName, Func<RemovePolicyDescriptor, IRemovePolicyRequest>, CancellationToken)` method:: deleted
`RemovePolicyAsync(IRemovePolicyRequest, CancellationToken)` method:: deleted
`RenderSearchTemplate(IRenderSearchTemplateRequest)` method::
Member type changed from `IRenderSearchTemplateResponse` to `RenderSearchTemplateResponse`.
`RenderSearchTemplate(Func<RenderSearchTemplateDescriptor, IRenderSearchTemplateRequest>)` method::
Member type changed from `IRenderSearchTemplateResponse` to `RenderSearchTemplateResponse`.
`RenderSearchTemplateAsync(IRenderSearchTemplateRequest, CancellationToken)` method::
Member type changed from `Task<IRenderSearchTemplateResponse>` to `Task<RenderSearchTemplateResponse>`.
`RenderSearchTemplateAsync(Func<RenderSearchTemplateDescriptor, IRenderSearchTemplateRequest>, CancellationToken)` method::
Member type changed from `Task<IRenderSearchTemplateResponse>` to `Task<RenderSearchTemplateResponse>`.
`RestartWatcher(IRestartWatcherRequest)` method:: deleted
`RestartWatcher(Func<RestartWatcherDescriptor, IRestartWatcherRequest>)` method:: deleted
`RestartWatcherAsync(IRestartWatcherRequest, CancellationToken)` method:: deleted
`RestartWatcherAsync(Func<RestartWatcherDescriptor, IRestartWatcherRequest>, CancellationToken)` method:: deleted
`Restore(IRestoreRequest)` method:: deleted
`Restore(Name, Name, Func<RestoreDescriptor, IRestoreRequest>)` method:: deleted
`RestoreAsync(IRestoreRequest, CancellationToken)` method:: deleted
`RestoreAsync(Name, Name, Func<RestoreDescriptor, IRestoreRequest>, CancellationToken)` method:: deleted
`RestoreObservable(Name, Name, TimeSpan, Func<RestoreDescriptor, IRestoreRequest>)` method:: deleted
`RestoreObservable(TimeSpan, IRestoreRequest)` method:: deleted
`ResumeFollowIndex(IndexName, Func<ResumeFollowIndexDescriptor, IResumeFollowIndexRequest>)` method:: deleted
`ResumeFollowIndex(IResumeFollowIndexRequest)` method:: deleted
`ResumeFollowIndexAsync(IndexName, Func<ResumeFollowIndexDescriptor, IResumeFollowIndexRequest>, CancellationToken)` method:: deleted
`ResumeFollowIndexAsync(IResumeFollowIndexRequest, CancellationToken)` method:: deleted
`Rethrottle(IReindexRethrottleRequest)` method:: deleted
`Rethrottle(TaskId, Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>)` method:: deleted
`Rethrottle(Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>)` method:: deleted
`RethrottleAsync(IReindexRethrottleRequest, CancellationToken)` method:: deleted
`RethrottleAsync(TaskId, Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>, CancellationToken)` method:: deleted
`RethrottleAsync(Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>, CancellationToken)` method:: deleted
`RetryIlm(IndexName, Func<RetryIlmDescriptor, IRetryIlmRequest>)` method:: deleted
`RetryIlm(IRetryIlmRequest)` method:: deleted
`RetryIlmAsync(IndexName, Func<RetryIlmDescriptor, IRetryIlmRequest>, CancellationToken)` method:: deleted
`RetryIlmAsync(IRetryIlmRequest, CancellationToken)` method:: deleted
`RevertModelSnapshot(Id, Id, Func<RevertModelSnapshotDescriptor, IRevertModelSnapshotRequest>)` method:: deleted
`RevertModelSnapshot(IRevertModelSnapshotRequest)` method:: deleted
`RevertModelSnapshotAsync(Id, Id, Func<RevertModelSnapshotDescriptor, IRevertModelSnapshotRequest>, CancellationToken)` method:: deleted
`RevertModelSnapshotAsync(IRevertModelSnapshotRequest, CancellationToken)` method:: deleted
`RolloverIndex(IRolloverIndexRequest)` method:: deleted
`RolloverIndex(Name, Func<RolloverIndexDescriptor, IRolloverIndexRequest>)` method:: deleted
`RolloverIndexAsync(IRolloverIndexRequest, CancellationToken)` method:: deleted
`RolloverIndexAsync(Name, Func<RolloverIndexDescriptor, IRolloverIndexRequest>, CancellationToken)` method:: deleted
`RollupSearch<T, THit>(Indices, Func<RollupSearchDescriptor<T>, IRollupSearchRequest>)` method:: deleted
`RollupSearch<THit>(Indices, Func<RollupSearchDescriptor<THit>, IRollupSearchRequest>)` method:: deleted
`RollupSearch<THit>(IRollupSearchRequest)` method:: deleted
`RollupSearchAsync<T, THit>(Indices, Func<RollupSearchDescriptor<T>, IRollupSearchRequest>, CancellationToken)` method:: deleted
`RollupSearchAsync<THit>(Indices, Func<RollupSearchDescriptor<THit>, IRollupSearchRequest>, CancellationToken)` method:: deleted
`RollupSearchAsync<THit>(IRollupSearchRequest, CancellationToken)` method:: deleted
`RootNodeInfo(IRootNodeInfoRequest)` method::
Member type changed from `IRootNodeInfoResponse` to `RootNodeInfoResponse`.
`RootNodeInfo(Func<RootNodeInfoDescriptor, IRootNodeInfoRequest>)` method::
Member type changed from `IRootNodeInfoResponse` to `RootNodeInfoResponse`.
`RootNodeInfoAsync(IRootNodeInfoRequest, CancellationToken)` method::
Member type changed from `Task<IRootNodeInfoResponse>` to `Task<RootNodeInfoResponse>`.
`RootNodeInfoAsync(Func<RootNodeInfoDescriptor, IRootNodeInfoRequest>, CancellationToken)` method::
Member type changed from `Task<IRootNodeInfoResponse>` to `Task<RootNodeInfoResponse>`.
`Scroll<TDocument>(IScrollRequest)` method::
Member type changed from `ISearchResponse<T>` to `ISearchResponse<TDocument>`.
`Scroll<T>(Time, String, Func<ScrollDescriptor<T>, IScrollRequest>)` method:: deleted
`Scroll<TDocument>(Time, String, Func<ScrollDescriptor<TDocument>, IScrollRequest>)` method:: added
`Scroll<TInferDocument, TDocument>(Time, String, Func<ScrollDescriptor<TInferDocument>, IScrollRequest>)` method:: added
`ScrollAll<T>(IScrollAllRequest, CancellationToken)` method::
Member type changed from `IObservable<IScrollAllResponse<T>>` to `IObservable<ScrollAllResponse<T>>`.
`ScrollAll<T>(Time, Int32, Func<ScrollAllDescriptor<T>, IScrollAllRequest>, CancellationToken)` method::
Member type changed from `IObservable<IScrollAllResponse<T>>` to `IObservable<ScrollAllResponse<T>>`.
`ScrollAsync<TDocument>(IScrollRequest, CancellationToken)` method::
Member type changed from `Task<ISearchResponse<T>>` to `Task<ISearchResponse<TDocument>>`.
`ScrollAsync<T>(Time, String, Func<ScrollDescriptor<T>, IScrollRequest>, CancellationToken)` method:: deleted
`ScrollAsync<TDocument>(Time, String, Func<ScrollDescriptor<TDocument>, IScrollRequest>, CancellationToken)` method:: added
`ScrollAsync<TInferDocument, TDocument>(Time, String, Func<ScrollDescriptor<TInferDocument>, IScrollRequest>, CancellationToken)` method:: added
`Search<TDocument>(ISearchRequest)` method::
Member type changed from `ISearchResponse<TResult>` to `ISearchResponse<TDocument>`.
`Search<T>(ISearchRequest)` method:: deleted
`Search<T>(Func<SearchDescriptor<T>, ISearchRequest>)` method:: deleted
`Search<T, TResult>(Func<SearchDescriptor<T>, ISearchRequest>)` method:: deleted
`Search<TDocument>(Func<SearchDescriptor<TDocument>, ISearchRequest>)` method:: added
`Search<TInferDocument, TDocument>(Func<SearchDescriptor<TInferDocument>, ISearchRequest>)` method:: added
`SearchAsync<TDocument>(ISearchRequest, CancellationToken)` method::
Member type changed from `Task<ISearchResponse<T>>` to `Task<ISearchResponse<TDocument>>`.
`SearchAsync<T, TResult>(ISearchRequest, CancellationToken)` method:: deleted
`SearchAsync<T>(Func<SearchDescriptor<T>, ISearchRequest>, CancellationToken)` method:: deleted
`SearchAsync<T, TResult>(Func<SearchDescriptor<T>, ISearchRequest>, CancellationToken)` method:: deleted
`SearchAsync<TDocument>(Func<SearchDescriptor<TDocument>, ISearchRequest>, CancellationToken)` method:: added
`SearchAsync<TInferDocument, TDocument>(Func<SearchDescriptor<TInferDocument>, ISearchRequest>, CancellationToken)` method:: added
`SearchShards(ISearchShardsRequest)` method::
Member type changed from `ISearchShardsResponse` to `SearchShardsResponse`.
`SearchShards<T>(Func<SearchShardsDescriptor<T>, ISearchShardsRequest>)` method:: deleted
`SearchShards<TDocument>(Func<SearchShardsDescriptor<TDocument>, ISearchShardsRequest>)` method:: added
`SearchShardsAsync(ISearchShardsRequest, CancellationToken)` method::
Member type changed from `Task<ISearchShardsResponse>` to `Task<SearchShardsResponse>`.
`SearchShardsAsync<T>(Func<SearchShardsDescriptor<T>, ISearchShardsRequest>, CancellationToken)` method:: deleted
`SearchShardsAsync<TDocument>(Func<SearchShardsDescriptor<TDocument>, ISearchShardsRequest>, CancellationToken)` method:: added
`SearchTemplate<TDocument>(ISearchTemplateRequest)` method::
Member type changed from `ISearchResponse<T>` to `ISearchResponse<TDocument>`.
`SearchTemplate<T, TResult>(ISearchTemplateRequest)` method:: deleted
`SearchTemplate<T, TResult>(Func<SearchTemplateDescriptor<T>, ISearchTemplateRequest>)` method:: deleted
`SearchTemplate<T>(Func<SearchTemplateDescriptor<T>, ISearchTemplateRequest>)` method:: deleted
`SearchTemplate<TDocument>(Func<SearchTemplateDescriptor<TDocument>, ISearchTemplateRequest>)` method:: added
`SearchTemplateAsync<TDocument>(ISearchTemplateRequest, CancellationToken)` method::
Member type changed from `Task<ISearchResponse<T>>` to `Task<ISearchResponse<TDocument>>`.
`SearchTemplateAsync<T, TResult>(ISearchTemplateRequest, CancellationToken)` method:: deleted
`SearchTemplateAsync<T, TResult>(Func<SearchTemplateDescriptor<T>, ISearchTemplateRequest>, CancellationToken)` method:: deleted
`SearchTemplateAsync<T>(Func<SearchTemplateDescriptor<T>, ISearchTemplateRequest>, CancellationToken)` method:: deleted
`SearchTemplateAsync<TDocument>(Func<SearchTemplateDescriptor<TDocument>, ISearchTemplateRequest>, CancellationToken)` method:: added
`Segments(Indices, Func<SegmentsDescriptor, ISegmentsRequest>)` method:: deleted
`Segments(ISegmentsRequest)` method:: deleted
`SegmentsAsync(Indices, Func<SegmentsDescriptor, ISegmentsRequest>, CancellationToken)` method:: deleted
`SegmentsAsync(ISegmentsRequest, CancellationToken)` method:: deleted
`ShrinkIndex(IndexName, IndexName, Func<ShrinkIndexDescriptor, IShrinkIndexRequest>)` method:: deleted
`ShrinkIndex(IShrinkIndexRequest)` method:: deleted
`ShrinkIndexAsync(IndexName, IndexName, Func<ShrinkIndexDescriptor, IShrinkIndexRequest>, CancellationToken)` method:: deleted
`ShrinkIndexAsync(IShrinkIndexRequest, CancellationToken)` method:: deleted
`SimulatePipeline(ISimulatePipelineRequest)` method:: deleted
`SimulatePipeline(Func<SimulatePipelineDescriptor, ISimulatePipelineRequest>)` method:: deleted
`SimulatePipelineAsync(ISimulatePipelineRequest, CancellationToken)` method:: deleted
`SimulatePipelineAsync(Func<SimulatePipelineDescriptor, ISimulatePipelineRequest>, CancellationToken)` method:: deleted
`Snapshot(ISnapshotRequest)` method:: deleted
`Snapshot(Name, Name, Func<SnapshotDescriptor, ISnapshotRequest>)` method:: deleted
`SnapshotAsync(ISnapshotRequest, CancellationToken)` method:: deleted
`SnapshotAsync(Name, Name, Func<SnapshotDescriptor, ISnapshotRequest>, CancellationToken)` method:: deleted
`SnapshotObservable(Name, Name, TimeSpan, Func<SnapshotDescriptor, ISnapshotRequest>)` method:: deleted
`SnapshotObservable(TimeSpan, ISnapshotRequest)` method:: deleted
`SnapshotStatus(ISnapshotStatusRequest)` method:: deleted
`SnapshotStatus(Func<SnapshotStatusDescriptor, ISnapshotStatusRequest>)` method:: deleted
`SnapshotStatusAsync(ISnapshotStatusRequest, CancellationToken)` method:: deleted
`SnapshotStatusAsync(Func<SnapshotStatusDescriptor, ISnapshotStatusRequest>, CancellationToken)` method:: deleted
`Source<T>(DocumentPath<T>, Func<SourceDescriptor<T>, ISourceRequest>)` method:: deleted
`Source<TDocument>(DocumentPath<TDocument>, Func<SourceDescriptor<TDocument>, ISourceRequest>)` method:: added
`Source<TDocument>(ISourceRequest)` method::
Member type changed from `T` to `SourceResponse<TDocument>`.
`SourceAsync<T>(DocumentPath<T>, Func<SourceDescriptor<T>, ISourceRequest>, CancellationToken)` method:: deleted
`SourceAsync<TDocument>(DocumentPath<TDocument>, Func<SourceDescriptor<TDocument>, ISourceRequest>, CancellationToken)` method:: added
`SourceAsync<TDocument>(ISourceRequest, CancellationToken)` method::
Member type changed from `Task<T>` to `Task<SourceResponse<TDocument>>`.
`SourceExists<T>(DocumentPath<T>, Func<SourceExistsDescriptor<T>, ISourceExistsRequest>)` method:: deleted
`SourceExists<TDocument>(DocumentPath<TDocument>, Func<SourceExistsDescriptor<TDocument>, ISourceExistsRequest>)` method:: added
`SourceExists(ISourceExistsRequest)` method::
Member type changed from `IExistsResponse` to `ExistsResponse`.
`SourceExistsAsync<T>(DocumentPath<T>, Func<SourceExistsDescriptor<T>, ISourceExistsRequest>, CancellationToken)` method:: deleted
`SourceExistsAsync<TDocument>(DocumentPath<TDocument>, Func<SourceExistsDescriptor<TDocument>, ISourceExistsRequest>, CancellationToken)` method:: added
`SourceExistsAsync(ISourceExistsRequest, CancellationToken)` method::
Member type changed from `Task<IExistsResponse>` to `Task<ExistsResponse>`.
`SplitIndex(IndexName, IndexName, Func<SplitIndexDescriptor, ISplitIndexRequest>)` method:: deleted
`SplitIndex(ISplitIndexRequest)` method:: deleted
`SplitIndexAsync(IndexName, IndexName, Func<SplitIndexDescriptor, ISplitIndexRequest>, CancellationToken)` method:: deleted
`SplitIndexAsync(ISplitIndexRequest, CancellationToken)` method:: deleted
`StartBasicLicense(IStartBasicLicenseRequest)` method:: deleted
`StartBasicLicense(Func<StartBasicLicenseDescriptor, IStartBasicLicenseRequest>)` method:: deleted
`StartBasicLicenseAsync(IStartBasicLicenseRequest, CancellationToken)` method:: deleted
`StartBasicLicenseAsync(Func<StartBasicLicenseDescriptor, IStartBasicLicenseRequest>, CancellationToken)` method:: deleted
`StartDatafeed(Id, Func<StartDatafeedDescriptor, IStartDatafeedRequest>)` method:: deleted
`StartDatafeed(IStartDatafeedRequest)` method:: deleted
`StartDatafeedAsync(Id, Func<StartDatafeedDescriptor, IStartDatafeedRequest>, CancellationToken)` method:: deleted
`StartDatafeedAsync(IStartDatafeedRequest, CancellationToken)` method:: deleted
`StartIlm(IStartIlmRequest)` method:: deleted
`StartIlm(Func<StartIlmDescriptor, IStartIlmRequest>)` method:: deleted
`StartIlmAsync(IStartIlmRequest, CancellationToken)` method:: deleted
`StartIlmAsync(Func<StartIlmDescriptor, IStartIlmRequest>, CancellationToken)` method:: deleted
`StartRollupJob(Id, Func<StartRollupJobDescriptor, IStartRollupJobRequest>)` method:: deleted
`StartRollupJob(IStartRollupJobRequest)` method:: deleted
`StartRollupJobAsync(Id, Func<StartRollupJobDescriptor, IStartRollupJobRequest>, CancellationToken)` method:: deleted
`StartRollupJobAsync(IStartRollupJobRequest, CancellationToken)` method:: deleted
`StartTrialLicense(IStartTrialLicenseRequest)` method:: deleted
`StartTrialLicense(Func<StartTrialLicenseDescriptor, IStartTrialLicenseRequest>)` method:: deleted
`StartTrialLicenseAsync(IStartTrialLicenseRequest, CancellationToken)` method:: deleted
`StartTrialLicenseAsync(Func<StartTrialLicenseDescriptor, IStartTrialLicenseRequest>, CancellationToken)` method:: deleted
`StartWatcher(IStartWatcherRequest)` method:: deleted
`StartWatcher(Func<StartWatcherDescriptor, IStartWatcherRequest>)` method:: deleted
`StartWatcherAsync(IStartWatcherRequest, CancellationToken)` method:: deleted
`StartWatcherAsync(Func<StartWatcherDescriptor, IStartWatcherRequest>, CancellationToken)` method:: deleted
`StopDatafeed(Id, Func<StopDatafeedDescriptor, IStopDatafeedRequest>)` method:: deleted
`StopDatafeed(IStopDatafeedRequest)` method:: deleted
`StopDatafeedAsync(Id, Func<StopDatafeedDescriptor, IStopDatafeedRequest>, CancellationToken)` method:: deleted
`StopDatafeedAsync(IStopDatafeedRequest, CancellationToken)` method:: deleted
`StopIlm(IStopIlmRequest)` method:: deleted
`StopIlm(Func<StopIlmDescriptor, IStopIlmRequest>)` method:: deleted
`StopIlmAsync(IStopIlmRequest, CancellationToken)` method:: deleted
`StopIlmAsync(Func<StopIlmDescriptor, IStopIlmRequest>, CancellationToken)` method:: deleted
`StopRollupJob(Id, Func<StopRollupJobDescriptor, IStopRollupJobRequest>)` method:: deleted
`StopRollupJob(IStopRollupJobRequest)` method:: deleted
`StopRollupJobAsync(Id, Func<StopRollupJobDescriptor, IStopRollupJobRequest>, CancellationToken)` method:: deleted
`StopRollupJobAsync(IStopRollupJobRequest, CancellationToken)` method:: deleted
`StopWatcher(IStopWatcherRequest)` method:: deleted
`StopWatcher(Func<StopWatcherDescriptor, IStopWatcherRequest>)` method:: deleted
`StopWatcherAsync(IStopWatcherRequest, CancellationToken)` method:: deleted
`StopWatcherAsync(Func<StopWatcherDescriptor, IStopWatcherRequest>, CancellationToken)` method:: deleted
`SyncedFlush(Indices, Func<SyncedFlushDescriptor, ISyncedFlushRequest>)` method:: deleted
`SyncedFlush(ISyncedFlushRequest)` method:: deleted
`SyncedFlushAsync(Indices, Func<SyncedFlushDescriptor, ISyncedFlushRequest>, CancellationToken)` method:: deleted
`SyncedFlushAsync(ISyncedFlushRequest, CancellationToken)` method:: deleted
`TermVectors<T>(ITermVectorsRequest<T>)` method:: deleted
`TermVectors<TDocument>(ITermVectorsRequest<TDocument>)` method:: added
`TermVectors<T>(Func<TermVectorsDescriptor<T>, ITermVectorsRequest<T>>)` method:: deleted
`TermVectors<TDocument>(Func<TermVectorsDescriptor<TDocument>, ITermVectorsRequest<TDocument>>)` method:: added
`TermVectorsAsync<T>(ITermVectorsRequest<T>, CancellationToken)` method:: deleted
`TermVectorsAsync<TDocument>(ITermVectorsRequest<TDocument>, CancellationToken)` method:: added
`TermVectorsAsync<T>(Func<TermVectorsDescriptor<T>, ITermVectorsRequest<T>>, CancellationToken)` method:: deleted
`TermVectorsAsync<TDocument>(Func<TermVectorsDescriptor<TDocument>, ITermVectorsRequest<TDocument>>, CancellationToken)` method:: added
`TranslateSql(ITranslateSqlRequest)` method:: deleted
`TranslateSql(Func<TranslateSqlDescriptor, ITranslateSqlRequest>)` method:: deleted
`TranslateSqlAsync(ITranslateSqlRequest, CancellationToken)` method:: deleted
`TranslateSqlAsync(Func<TranslateSqlDescriptor, ITranslateSqlRequest>, CancellationToken)` method:: deleted
`TypeExists(Indices, Types, Func<TypeExistsDescriptor, ITypeExistsRequest>)` method:: deleted
`TypeExists(ITypeExistsRequest)` method:: deleted
`TypeExistsAsync(Indices, Types, Func<TypeExistsDescriptor, ITypeExistsRequest>, CancellationToken)` method:: deleted
`TypeExistsAsync(ITypeExistsRequest, CancellationToken)` method:: deleted
`UnfollowIndex(IndexName, Func<UnfollowIndexDescriptor, IUnfollowIndexRequest>)` method:: deleted
`UnfollowIndex(IUnfollowIndexRequest)` method:: deleted
`UnfollowIndexAsync(IndexName, Func<UnfollowIndexDescriptor, IUnfollowIndexRequest>, CancellationToken)` method:: deleted
`UnfollowIndexAsync(IUnfollowIndexRequest, CancellationToken)` method:: deleted
`Update<TDocument>(DocumentPath<TDocument>, Func<UpdateDescriptor<TDocument, TDocument>, IUpdateRequest<TDocument, TDocument>>)` method::
Member type changed from `IUpdateResponse<TDocument>` to `UpdateResponse<TDocument>`.
`Update<TDocument, TPartialDocument>(DocumentPath<TDocument>, Func<UpdateDescriptor<TDocument, TPartialDocument>, IUpdateRequest<TDocument, TPartialDocument>>)` method::
Member type changed from `IUpdateResponse<TDocument>` to `UpdateResponse<TDocument>`.
`Update<TDocument>(IUpdateRequest<TDocument, TDocument>)` method:: deleted
`Update<TDocument, TPartialDocument>(IUpdateRequest<TDocument, TPartialDocument>)` method::
Member type changed from `IUpdateResponse<TDocument>` to `UpdateResponse<TDocument>`.
`UpdateAsync<TDocument>(DocumentPath<TDocument>, Func<UpdateDescriptor<TDocument, TDocument>, IUpdateRequest<TDocument, TDocument>>, CancellationToken)` method::
Member type changed from `Task<IUpdateResponse<TDocument>>` to `Task<UpdateResponse<TDocument>>`.
`UpdateAsync<TDocument, TPartialDocument>(DocumentPath<TDocument>, Func<UpdateDescriptor<TDocument, TPartialDocument>, IUpdateRequest<TDocument, TPartialDocument>>, CancellationToken)` method::
Member type changed from `Task<IUpdateResponse<TDocument>>` to `Task<UpdateResponse<TDocument>>`.
`UpdateAsync<TDocument>(IUpdateRequest<TDocument, TDocument>, CancellationToken)` method:: deleted
`UpdateAsync<TDocument, TPartialDocument>(IUpdateRequest<TDocument, TPartialDocument>, CancellationToken)` method::
Member type changed from `Task<IUpdateResponse<TDocument>>` to `Task<UpdateResponse<TDocument>>`.
`UpdateByQuery(IUpdateByQueryRequest)` method::
Member type changed from `IUpdateByQueryResponse` to `UpdateByQueryResponse`.
`UpdateByQuery<T>(Func<UpdateByQueryDescriptor<T>, IUpdateByQueryRequest>)` method:: deleted
`UpdateByQuery<TDocument>(Func<UpdateByQueryDescriptor<TDocument>, IUpdateByQueryRequest>)` method:: added
`UpdateByQueryAsync(IUpdateByQueryRequest, CancellationToken)` method::
Member type changed from `Task<IUpdateByQueryResponse>` to `Task<UpdateByQueryResponse>`.
`UpdateByQueryAsync<T>(Func<UpdateByQueryDescriptor<T>, IUpdateByQueryRequest>, CancellationToken)` method:: deleted
`UpdateByQueryAsync<TDocument>(Func<UpdateByQueryDescriptor<TDocument>, IUpdateByQueryRequest>, CancellationToken)` method:: added
`UpdateByQueryRethrottle(IUpdateByQueryRethrottleRequest)` method::
Member type changed from `IListTasksResponse` to `ListTasksResponse`.
`UpdateByQueryRethrottle(TaskId, Func<UpdateByQueryRethrottleDescriptor, IUpdateByQueryRethrottleRequest>)` method::
Member type changed from `IListTasksResponse` to `ListTasksResponse`.
`UpdateByQueryRethrottleAsync(IUpdateByQueryRethrottleRequest, CancellationToken)` method::
Member type changed from `Task<IListTasksResponse>` to `Task<ListTasksResponse>`.
`UpdateByQueryRethrottleAsync(TaskId, Func<UpdateByQueryRethrottleDescriptor, IUpdateByQueryRethrottleRequest>, CancellationToken)` method::
Member type changed from `Task<IListTasksResponse>` to `Task<ListTasksResponse>`.
`UpdateDatafeed<T>(Id, Func<UpdateDatafeedDescriptor<T>, IUpdateDatafeedRequest>)` method:: deleted
`UpdateDatafeed(IUpdateDatafeedRequest)` method:: deleted
`UpdateDatafeedAsync<T>(Id, Func<UpdateDatafeedDescriptor<T>, IUpdateDatafeedRequest>, CancellationToken)` method:: deleted
`UpdateDatafeedAsync(IUpdateDatafeedRequest, CancellationToken)` method:: deleted
`UpdateFilter(Id, Func<UpdateFilterDescriptor, IUpdateFilterRequest>)` method:: deleted
`UpdateFilter(IUpdateFilterRequest)` method:: deleted
`UpdateFilterAsync(Id, Func<UpdateFilterDescriptor, IUpdateFilterRequest>, CancellationToken)` method:: deleted
`UpdateFilterAsync(IUpdateFilterRequest, CancellationToken)` method:: deleted
`UpdateIndexSettings(Indices, Func<UpdateIndexSettingsDescriptor, IUpdateIndexSettingsRequest>)` method:: deleted
`UpdateIndexSettings(IUpdateIndexSettingsRequest)` method:: deleted
`UpdateIndexSettingsAsync(Indices, Func<UpdateIndexSettingsDescriptor, IUpdateIndexSettingsRequest>, CancellationToken)` method:: deleted
`UpdateIndexSettingsAsync(IUpdateIndexSettingsRequest, CancellationToken)` method:: deleted
`UpdateJob<T>(Id, Func<UpdateJobDescriptor<T>, IUpdateJobRequest>)` method:: deleted
`UpdateJob(IUpdateJobRequest)` method:: deleted
`UpdateJobAsync<T>(Id, Func<UpdateJobDescriptor<T>, IUpdateJobRequest>, CancellationToken)` method:: deleted
`UpdateJobAsync(IUpdateJobRequest, CancellationToken)` method:: deleted
`UpdateModelSnapshot(Id, Id, Func<UpdateModelSnapshotDescriptor, IUpdateModelSnapshotRequest>)` method:: deleted
`UpdateModelSnapshot(IUpdateModelSnapshotRequest)` method:: deleted
`UpdateModelSnapshotAsync(Id, Id, Func<UpdateModelSnapshotDescriptor, IUpdateModelSnapshotRequest>, CancellationToken)` method:: deleted
`UpdateModelSnapshotAsync(IUpdateModelSnapshotRequest, CancellationToken)` method:: deleted
`Upgrade(Indices, Func<UpgradeDescriptor, IUpgradeRequest>)` method:: deleted
`Upgrade(IUpgradeRequest)` method:: deleted
`UpgradeAsync(Indices, Func<UpgradeDescriptor, IUpgradeRequest>, CancellationToken)` method:: deleted
`UpgradeAsync(IUpgradeRequest, CancellationToken)` method:: deleted
`UpgradeStatus(IUpgradeStatusRequest)` method:: deleted
`UpgradeStatus(Func<UpgradeStatusDescriptor, IUpgradeStatusRequest>)` method:: deleted
`UpgradeStatusAsync(IUpgradeStatusRequest, CancellationToken)` method:: deleted
`UpgradeStatusAsync(Func<UpgradeStatusDescriptor, IUpgradeStatusRequest>, CancellationToken)` method:: deleted
`ValidateDetector(IValidateDetectorRequest)` method:: deleted
`ValidateDetector<T>(Func<ValidateDetectorDescriptor<T>, IValidateDetectorRequest>)` method:: deleted
`ValidateDetectorAsync(IValidateDetectorRequest, CancellationToken)` method:: deleted
`ValidateDetectorAsync<T>(Func<ValidateDetectorDescriptor<T>, IValidateDetectorRequest>, CancellationToken)` method:: deleted
`ValidateJob(IValidateJobRequest)` method:: deleted
`ValidateJob<T>(Func<ValidateJobDescriptor<T>, IValidateJobRequest>)` method:: deleted
`ValidateJobAsync(IValidateJobRequest, CancellationToken)` method:: deleted
`ValidateJobAsync<T>(Func<ValidateJobDescriptor<T>, IValidateJobRequest>, CancellationToken)` method:: deleted
`ValidateQuery(IValidateQueryRequest)` method:: deleted
`ValidateQuery<T>(Func<ValidateQueryDescriptor<T>, IValidateQueryRequest>)` method:: deleted
`ValidateQueryAsync(IValidateQueryRequest, CancellationToken)` method:: deleted
`ValidateQueryAsync<T>(Func<ValidateQueryDescriptor<T>, IValidateQueryRequest>, CancellationToken)` method:: deleted
`VerifyRepository(IVerifyRepositoryRequest)` method:: deleted
`VerifyRepository(Name, Func<VerifyRepositoryDescriptor, IVerifyRepositoryRequest>)` method:: deleted
`VerifyRepositoryAsync(IVerifyRepositoryRequest, CancellationToken)` method:: deleted
`VerifyRepositoryAsync(Name, Func<VerifyRepositoryDescriptor, IVerifyRepositoryRequest>, CancellationToken)` method:: deleted
`WatcherStats(IWatcherStatsRequest)` method:: deleted
`WatcherStats(Func<WatcherStatsDescriptor, IWatcherStatsRequest>)` method:: deleted
`WatcherStatsAsync(IWatcherStatsRequest, CancellationToken)` method:: deleted
`WatcherStatsAsync(Func<WatcherStatsDescriptor, IWatcherStatsRequest>, CancellationToken)` method:: deleted
`XPackInfo(IXPackInfoRequest)` method:: deleted
`XPackInfo(Func<XPackInfoDescriptor, IXPackInfoRequest>)` method:: deleted
`XPackInfoAsync(IXPackInfoRequest, CancellationToken)` method:: deleted
`XPackInfoAsync(Func<XPackInfoDescriptor, IXPackInfoRequest>, CancellationToken)` method:: deleted
`XPackUsage(IXPackUsageRequest)` method:: deleted
`XPackUsage(Func<XPackUsageDescriptor, IXPackUsageRequest>)` method:: deleted
`XPackUsageAsync(IXPackUsageRequest, CancellationToken)` method:: deleted
`XPackUsageAsync(Func<XPackUsageDescriptor, IXPackUsageRequest>, CancellationToken)` method:: deleted
`Cat` property:: added
`Cluster` property:: added
`CrossClusterReplication` property:: added
`Graph` property:: added
`IndexLifecycleManagement` property:: added
`Indices` property:: added
`Ingest` property:: added
`License` property:: added
`MachineLearning` property:: added
`Migration` property:: added
`Nodes` property:: added
`Rollup` property:: added
`Security` property:: added
`Snapshot` property:: added
`Sql` property:: added
`Tasks` property:: added
`Watcher` property:: added
`XPack` property:: added



[float]
=== `Nest.ElasticsearchPropertyAttributeBase`

[horizontal]
`AllowPrivate` property:: added
`Order` property:: added

[float]
=== `Nest.ElasticsearchTypeAttribute`

[horizontal]
`RelationName` property:: added

[float]
=== `Nest.ElasticsearchVersionInfo`

[horizontal]
`BuildDate` property:: added
`BuildFlavor` property:: added
`BuildHash` property:: added
`BuildSnapshot` property:: added
`BuildType` property:: added
`IsSnapShotBuild` property:: deleted
`MinimumIndexCompatibilityVersion` property:: added
`MinimumWireCompatibilityVersion` property:: added




[float]
=== `Nest.EnableUserDescriptor`

[horizontal]
`EnableUserDescriptor()` method::
Member is less visible.
`Username(Name)` method:: deleted

[float]
=== `Nest.EnableUserRequest`

[horizontal]
`EnableUserRequest()` method:: added

[float]
=== `Nest.EnvelopeGeoShape`

[horizontal]
`EnvelopeGeoShape()` method::
Member is less visible.




[float]
=== `Nest.ExecuteWatchDescriptor`

[horizontal]
`ExecuteWatchDescriptor(Id)` method:: added
`Watch(Func<PutWatchDescriptor, IPutWatchRequest>)` method:: deleted
`Watch(Func<WatchDescriptor, IWatch>)` method:: added

[float]
=== `Nest.ExecuteWatchRequest`

[horizontal]

[float]
=== `Nest.ExecuteWatchResponse`

[horizontal]
`Id` property getter::
changed to non-virtual.
`Id` property setter::
changed to non-virtual.
`WatchRecord` property getter::
changed to non-virtual.
`WatchRecord` property setter::
changed to non-virtual.



[float]
=== `Nest.ExecutionResultAction`

[horizontal]
`HipChat` property:: deleted





[float]
=== `Nest.ExistsQueryDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.ExistsResponse`

[horizontal]
`Exists` property getter::
changed to non-virtual.


[float]
=== `Nest.ExplainDescriptor<TDocument>`

[horizontal]
`ExplainDescriptor()` method:: added
`ExplainDescriptor(DocumentPath<TDocument>)` method:: deleted
`ExplainDescriptor(Id)` method:: added
`ExplainDescriptor(IndexName, Id)` method:: added
`ExplainDescriptor(IndexName, TypeName, Id)` method:: deleted
`ExplainDescriptor(TDocument, IndexName, Id)` method:: added
`AnalyzeWildcard(Nullable<Boolean>)` method::
Parameter name changed from `analyzeWildcard` to `analyzewildcard`.
`DefaultOperator(Nullable<DefaultOperator>)` method::
Parameter name changed from `defaultOperator` to `defaultoperator`.
`Parent(String)` method:: deleted
`QueryOnQueryString(String)` method::
Parameter name changed from `queryOnQueryString` to `queryonquerystring`.
`SourceEnabled(Nullable<Boolean>)` method::
Parameter name changed from `sourceEnabled` to `sourceenabled`.
`SourceExclude(Fields)` method:: deleted
`SourceExclude(Expression<Func<TDocument, Object>>[])` method:: deleted
`SourceExcludes(Fields)` method:: added
`SourceExcludes(Expression<Func<TDocument, Object>>[])` method:: added
`SourceInclude(Fields)` method:: deleted
`SourceInclude(Expression<Func<TDocument, Object>>[])` method:: deleted
`SourceIncludes(Fields)` method:: added
`SourceIncludes(Expression<Func<TDocument, Object>>[])` method:: added
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted

[float]
=== `Nest.ExplainLifecycleDescriptor`

[horizontal]
`ExplainLifecycleDescriptor()` method:: added
`MasterTimeout(Time)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.ExplainLifecycleRequest`

[horizontal]
`ExplainLifecycleRequest()` method:: added
`MasterTimeout` property:: deleted
`Timeout` property:: deleted

[float]
=== `Nest.ExplainLifecycleResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.

[float]
=== `Nest.ExplainRequest`

[horizontal]
type:: added

[float]
=== `Nest.ExplainRequest<TDocument>`

[horizontal]
`ExplainRequest()` method:: added
`ExplainRequest(DocumentPath<TDocument>, IndexName, TypeName, Id)` method:: deleted
`ExplainRequest(Id)` method:: added
`ExplainRequest(IndexName, Id)` method:: added
`ExplainRequest(IndexName, TypeName, Id)` method:: deleted
`ExplainRequest(TDocument, IndexName, Id)` method:: added
`Analyzer` property:: deleted
`AnalyzeWildcard` property:: deleted
`DefaultOperator` property:: deleted
`Df` property:: deleted
`Lenient` property:: deleted
`Parent` property:: deleted
`Preference` property:: deleted
`Query` property:: deleted
`QueryOnQueryString` property:: deleted
`Routing` property:: deleted
`Self` property:: deleted
`SourceEnabled` property:: deleted
`SourceExclude` property:: deleted
`SourceInclude` property:: deleted
`StoredFields` property:: deleted
`TypedSelf` property:: added

[float]
=== `Nest.ExplainResponse<TDocument>`

[horizontal]
`Explanation` property getter::
changed to non-virtual.
`Matched` property getter::
changed to non-virtual.



[float]
=== `Nest.ExpressionExtensions`

[horizontal]
`AppendSuffix<T, TValue>(Expression<Func<T, TValue>>, String)` method:: added


[float]
=== `Nest.ExtendedStatsAggregate`

[horizontal]
`Average` property:: deleted
`Count` property:: deleted
`Max` property:: deleted
`Min` property:: deleted
`Sum` property:: deleted

[float]
=== `Nest.Field`

[horizontal]
`Field(Expression, Nullable<Double>)` method:: deleted
`Field(PropertyInfo, Nullable<Double>)` method:: deleted
`Field(String, Nullable<Double>)` method:: deleted
`And<T>(Expression<Func<T, Object>>, Nullable<Double>)` method:: deleted
`And<T, TValue>(Expression<Func<T, TValue>>, Nullable<Double>, String)` method:: added
`And(PropertyInfo, Nullable<Double>)` method:: deleted
`And(String, Nullable<Double>)` method:: deleted

[float]
=== `Nest.FieldAliasPropertyDescriptor<T>`

[horizontal]
`Path(Expression<Func<T, Object>>)` method:: deleted
`Path<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.FieldCapabilitiesDescriptor`

[horizontal]
`FieldCapabilitiesDescriptor(Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.


[float]
=== `Nest.FieldCapabilitiesResponse`

[horizontal]
`Fields` property getter::
changed to non-virtual.
`Shards` property:: deleted

[float]
=== `Nest.FieldCollapseDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.FielddataStats`

[horizontal]
`MemorySize` property:: deleted

[float]
=== `Nest.FieldIndexOption`

[horizontal]
type:: deleted

[float]
=== `Nest.FieldLookup`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.FieldLookupDescriptor<T>`

[horizontal]
`Path(Expression<Func<T, Object>>)` method:: deleted
`Path<TValue>(Expression<Func<T, TValue>>)` method:: added
`Type(TypeName)` method:: deleted


[float]
=== `Nest.FieldMappingProperties`

[horizontal]
type:: deleted

[float]
=== `Nest.FieldNameQueryDescriptorBase<TDescriptor, TInterface, T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.Fields`

[horizontal]
`And<T>(Expression<Func<T, Object>>, Nullable<Double>)` method:: deleted
`And<T>(Expression<Func<T, Object>>, Nullable<Double>, String)` method:: deleted
`And<T, TValue>(Expression<Func<T, TValue>>, Nullable<Double>, String)` method:: added
`And(PropertyInfo, Nullable<Double>, String)` method:: deleted
`And(String, Nullable<Double>)` method:: deleted

[float]
=== `Nest.FieldsDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>, Nullable<Double>)` method:: deleted
`Field(Expression<Func<T, Object>>, Nullable<Double>, String)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>, Nullable<Double>, String)` method:: added
`Field(String, Nullable<Double>)` method:: deleted


[float]
=== `Nest.FieldSort`

[horizontal]
type:: added

[float]
=== `Nest.FieldSortDescriptor<T>`

[horizontal]
type:: added



[float]
=== `Nest.FieldTypes`

[horizontal]
`ParentJoin` property:: added

[float]
=== `Nest.FieldValueFactorFunctionDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added









[float]
=== `Nest.FiltersAggregation`

[horizontal]



[float]
=== `Nest.FlushDescriptor`

[horizontal]
`FlushDescriptor(Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`WaitIfOngoing(Nullable<Boolean>)` method::
Parameter name changed from `waitIfOngoing` to `waitifongoing`.

[float]
=== `Nest.FlushJobDescriptor`

[horizontal]
`FlushJobDescriptor()` method:: added
`FlushJobDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`SkipTime(String)` method::
Parameter name changed from `skipTime` to `skiptime`.

[float]
=== `Nest.FlushJobRequest`

[horizontal]
`FlushJobRequest()` method:: added
`FlushJobRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.FlushJobResponse`

[horizontal]
`Flushed` property getter::
changed to non-virtual.





[float]
=== `Nest.FollowIndexStatsDescriptor`

[horizontal]
`FollowIndexStatsDescriptor()` method::
Member is less visible.
`FollowIndexStatsDescriptor(Indices)` method:: added

[float]
=== `Nest.FollowIndexStatsRequest`

[horizontal]
`FollowIndexStatsRequest()` method:: added

[float]
=== `Nest.FollowIndexStatsResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.

[float]
=== `Nest.ForceMergeDescriptor`

[horizontal]
`ForceMergeDescriptor(Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`MaxNumSegments(Nullable<Int64>)` method::
Parameter name changed from `maxNumSegments` to `maxnumsegments`.
`OnlyExpungeDeletes(Nullable<Boolean>)` method::
Parameter name changed from `onlyExpungeDeletes` to `onlyexpungedeletes`.
`OperationThreading(String)` method:: deleted
`WaitForMerge(Nullable<Boolean>)` method:: deleted

[float]
=== `Nest.ForceMergeRequest`

[horizontal]
`OperationThreading` property:: deleted
`WaitForMerge` property:: deleted

[float]
=== `Nest.ForeachProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.ForecastIds`

[horizontal]
type:: deleted

[float]
=== `Nest.ForecastJobDescriptor`

[horizontal]
`ForecastJobDescriptor()` method:: added
`ForecastJobDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.ForecastJobRequest`

[horizontal]
`ForecastJobRequest()` method:: added
`ForecastJobRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.ForecastJobResponse`

[horizontal]
`ForecastId` property getter::
changed to non-virtual.





[float]
=== `Nest.FuzzySuggestDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.FuzzySuggester`

[horizontal]
type:: deleted


[float]
=== `Nest.GenericProperty`

[horizontal]
`Index` property getter::
`Index` property setter::
`Indexed` property:: deleted

[float]
=== `Nest.GenericPropertyDescriptor<T>`

[horizontal]
`Index(Nullable<FieldIndexOption>)` method:: deleted
`NotAnalyzed()` method:: deleted



[float]
=== `Nest.GeoDistanceAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.GeoDistanceSort`

[horizontal]
`GeoUnit` property:: deleted
`Unit` property:: added

[float]
=== `Nest.GeoDistanceSortDescriptor<T>`

[horizontal]
type:: added



[float]
=== `Nest.GeoHashGridAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.GeoIndexedShapeQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoIndexedShapeQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoIpProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.GeometryCollection`

[horizontal]
`GeometryCollection()` method::
Member is less visible.
`GeometryCollection(IEnumerable<IGeoShape>)` method:: added
`IgnoreUnmapped` property:: deleted
`Type` property:: deleted



[float]
=== `Nest.GeoShapeAttribute`

[horizontal]
`DistanceErrorPercentage` property:: deleted
`PointsOnly` property:: deleted
`Tree` property:: deleted
`TreeLevels` property:: deleted

[float]
=== `Nest.GeoShapeBase`

[horizontal]
`IgnoreUnmapped` property:: deleted

[float]
=== `Nest.GeoShapeCircleQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeCircleQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeDescriptor`

[horizontal]
type:: added

[float]
=== `Nest.GeoShapeEnvelopeQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeEnvelopeQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeGeometryCollectionQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeGeometryCollectionQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeLineStringQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeLineStringQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeMultiLineStringQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeMultiLineStringQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeMultiPointQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeMultiPointQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeMultiPolygonQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeMultiPolygonQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapePointQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapePointQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapePolygonQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapePolygonQueryDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeProperty`

[horizontal]
`DistanceErrorPercentage` property:: deleted
`PointsOnly` property:: deleted
`Precision` property:: deleted
`Tree` property:: deleted
`TreeLevels` property:: deleted

[float]
=== `Nest.GeoShapePropertyDescriptor<T>`

[horizontal]
`DistanceErrorPercentage(Nullable<Double>)` method:: deleted
`PointsOnly(Nullable<Boolean>)` method:: deleted
`Precision(Double, DistanceUnit)` method:: deleted
`Tree(Nullable<GeoTree>)` method:: deleted
`TreeLevels(Nullable<Int32>)` method:: deleted

[float]
=== `Nest.GeoShapeQuery`

[horizontal]
type:: added

[float]
=== `Nest.GeoShapeQueryBase`

[horizontal]
type:: deleted

[float]
=== `Nest.GeoShapeQueryDescriptor<T>`

[horizontal]
type:: added

[float]
=== `Nest.GeoShapeQueryDescriptorBase<TDescriptor, TInterface, T>`

[horizontal]
type:: deleted







[float]
=== `Nest.GeoWKTWriter`

[horizontal]
`Write(IGeometryCollection)` method:: deleted

[float]
=== `Nest.GetAliasDescriptor`

[horizontal]
`GetAliasDescriptor(Indices)` method:: added
`GetAliasDescriptor(Indices, Names)` method:: added
`GetAliasDescriptor(Names)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.

[float]
=== `Nest.GetAliasResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.

[float]
=== `Nest.GetAnomalyRecordsDescriptor`

[horizontal]
`GetAnomalyRecordsDescriptor()` method::
Member is less visible.
`GetAnomalyRecordsDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.GetAnomalyRecordsRequest`

[horizontal]
`GetAnomalyRecordsRequest()` method:: added
`GetAnomalyRecordsRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.GetAnomalyRecordsResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`Records` property getter::
changed to non-virtual.

[float]
=== `Nest.GetApiKeyDescriptor`

[horizontal]
`RealmName(String)` method::
Parameter name changed from `realmName` to `realmname`.

[float]
=== `Nest.GetApiKeyResponse`

[horizontal]
`ApiKeys` property getter::
changed to non-virtual.

[float]
=== `Nest.GetAutoFollowPatternDescriptor`

[horizontal]
`GetAutoFollowPatternDescriptor(Name)` method:: added

[float]
=== `Nest.GetAutoFollowPatternResponse`

[horizontal]
`Patterns` property getter::
changed to non-virtual.

[float]
=== `Nest.GetBasicLicenseStatusResponse`

[horizontal]
`EligableToStartBasic` property getter::
changed to non-virtual.

[float]
=== `Nest.GetBucketsDescriptor`

[horizontal]
`GetBucketsDescriptor()` method:: added
`GetBucketsDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`GetBucketsDescriptor(Id, Timestamp)` method:: added
`Timestamp(Timestamp)` method:: added
`Timestamp(Nullable<DateTimeOffset>)` method:: deleted

[float]
=== `Nest.GetBucketsRequest`

[horizontal]
`GetBucketsRequest()` method:: added
`GetBucketsRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`GetBucketsRequest(Id, Timestamp)` method:: added
`Timestamp` property:: deleted

[float]
=== `Nest.GetBucketsResponse`

[horizontal]
`Buckets` property getter::
changed to non-virtual.
`Count` property getter::
changed to non-virtual.

[float]
=== `Nest.GetCalendarEventsDescriptor`

[horizontal]
`GetCalendarEventsDescriptor()` method:: added
`GetCalendarEventsDescriptor(Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.
`JobId(String)` method::
Parameter name changed from `jobId` to `jobid`.

[float]
=== `Nest.GetCalendarEventsRequest`

[horizontal]
`GetCalendarEventsRequest()` method:: added
`GetCalendarEventsRequest(Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.GetCalendarEventsResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`Events` property getter::
changed to non-virtual.

[float]
=== `Nest.GetCalendarsDescriptor`

[horizontal]
`GetCalendarsDescriptor(Id)` method:: added

[float]
=== `Nest.GetCalendarsRequest`

[horizontal]
`GetCalendarsRequest(Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.GetCalendarsResponse`

[horizontal]
`Calendars` property getter::
changed to non-virtual.
`Count` property getter::
changed to non-virtual.

[float]
=== `Nest.GetCategoriesDescriptor`

[horizontal]
`GetCategoriesDescriptor()` method:: added
`GetCategoriesDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`GetCategoriesDescriptor(Id, LongId)` method:: added
`CategoryId(CategoryId)` method:: deleted
`CategoryId(LongId)` method:: added

[float]
=== `Nest.GetCategoriesRequest`

[horizontal]
`GetCategoriesRequest()` method:: added
`GetCategoriesRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`GetCategoriesRequest(Id, CategoryId)` method:: deleted
`GetCategoriesRequest(Id, LongId)` method:: added

[float]
=== `Nest.GetCategoriesResponse`

[horizontal]
`Categories` property getter::
changed to non-virtual.
`Count` property getter::
changed to non-virtual.

[float]
=== `Nest.GetCertificatesDescriptor`

[horizontal]
`RequestDefaults(GetCertificatesRequestParameters)` method:: added

[float]
=== `Nest.GetCertificatesRequest`

[horizontal]
`RequestDefaults(GetCertificatesRequestParameters)` method:: added

[float]
=== `Nest.GetCertificatesResponse`

[horizontal]
`Certificates` property getter::
changed to non-virtual.

[float]
=== `Nest.GetDatafeedsDescriptor`

[horizontal]
`GetDatafeedsDescriptor(Id)` method:: added
`AllowNoDatafeeds(Nullable<Boolean>)` method::
Parameter name changed from `allowNoDatafeeds` to `allownodatafeeds`.

[float]
=== `Nest.GetDatafeedsRequest`

[horizontal]
`GetDatafeedsRequest(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.

[float]
=== `Nest.GetDatafeedsResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`Datafeeds` property getter::
changed to non-virtual.

[float]
=== `Nest.GetDatafeedStatsDescriptor`

[horizontal]
`GetDatafeedStatsDescriptor(Id)` method:: added
`AllowNoDatafeeds(Nullable<Boolean>)` method::
Parameter name changed from `allowNoDatafeeds` to `allownodatafeeds`.

[float]
=== `Nest.GetDatafeedStatsRequest`

[horizontal]
`GetDatafeedStatsRequest(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.

[float]
=== `Nest.GetDatafeedStatsResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`Datafeeds` property getter::
changed to non-virtual.

[float]
=== `Nest.GetDescriptor<TDocument>`

[horizontal]
`GetDescriptor()` method:: added
`GetDescriptor(DocumentPath<T>)` method:: deleted
`GetDescriptor(Id)` method:: added
`GetDescriptor(IndexName, Id)` method:: added
`GetDescriptor(IndexName, TypeName, Id)` method:: deleted
`GetDescriptor(TDocument, IndexName, Id)` method:: added
`ExecuteOnLocalShard()` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`ExecuteOnPrimary()` method:: deleted
`Index<TOther>()` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`Index(IndexName)` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`Parent(String)` method:: deleted
`Preference(String)` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`Realtime(Nullable<Boolean>)` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`Refresh(Nullable<Boolean>)` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`Routing(Routing)` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`SourceEnabled(Nullable<Boolean>)` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`SourceExclude(Fields)` method:: deleted
`SourceExclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceExcludes(Fields)` method:: added
`SourceExcludes(Expression<Func<TDocument, Object>>[])` method:: added
`SourceInclude(Fields)` method:: deleted
`SourceInclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceIncludes(Fields)` method:: added
`SourceIncludes(Expression<Func<TDocument, Object>>[])` method:: added
`StoredFields(Fields)` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`StoredFields(Expression<Func<T, Object>>[])` method:: deleted
`StoredFields(Expression<Func<TDocument, Object>>[])` method:: added
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`Version(Nullable<Int64>)` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.
`VersionType(Nullable<VersionType>)` method::
Member type changed from `GetDescriptor<T>` to `GetDescriptor<TDocument>`.

[float]
=== `Nest.GetFieldMappingDescriptor<TDocument>`

[horizontal]
`GetFieldMappingDescriptor()` method:: added
`GetFieldMappingDescriptor(Indices, Fields)` method:: added
`AllIndices()` method::
Member type changed from `GetFieldMappingDescriptor<T>` to `GetFieldMappingDescriptor<TDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `GetFieldMappingDescriptor<T>` to `GetFieldMappingDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `GetFieldMappingDescriptor<T>` to `GetFieldMappingDescriptor<TDocument>`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `GetFieldMappingDescriptor<T>` to `GetFieldMappingDescriptor<TDocument>`.
`IncludeDefaults(Nullable<Boolean>)` method::
Member type changed from `GetFieldMappingDescriptor<T>` to `GetFieldMappingDescriptor<TDocument>`.
`IncludeTypeName(Nullable<Boolean>)` method::
Member type changed from `GetFieldMappingDescriptor<T>` to `GetFieldMappingDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `GetFieldMappingDescriptor<T>` to `GetFieldMappingDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `GetFieldMappingDescriptor<T>` to `GetFieldMappingDescriptor<TDocument>`.
`Local(Nullable<Boolean>)` method::
Member type changed from `GetFieldMappingDescriptor<T>` to `GetFieldMappingDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted

[float]
=== `Nest.GetFieldMappingRequest`

[horizontal]
`GetFieldMappingRequest()` method:: added
`GetFieldMappingRequest(Indices, Types, Fields)` method:: deleted
`GetFieldMappingRequest(Types, Fields)` method:: deleted

[float]
=== `Nest.GetFieldMappingResponse`

[horizontal]
`GetMapping(IndexName, Field)` method:: added
`GetMapping(IndexName, TypeName, Field)` method:: deleted
`MappingFor<T>(Field)` method:: added
`MappingFor<T>(Field, IndexName)` method:: added
`MappingFor<T>(Field, IndexName, TypeName)` method:: deleted
`MappingFor<T>(Expression<Func<T, Object>>, IndexName)` method:: added
`MappingFor<T>(Expression<Func<T, Object>>, IndexName, TypeName)` method:: deleted
`MappingFor<T, TValue>(Expression<Func<T, TValue>>, IndexName)` method:: added
`Indices` property getter::
changed to non-virtual.

[float]
=== `Nest.GetFiltersDescriptor`

[horizontal]
`GetFiltersDescriptor(Id)` method:: added

[float]
=== `Nest.GetFiltersRequest`

[horizontal]
`GetFiltersRequest(Id)` method::
Parameter name changed from `filter_id` to `filterId`.

[float]
=== `Nest.GetFiltersResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`Filters` property getter::
changed to non-virtual.

[float]
=== `Nest.GetIlmStatusDescriptor`

[horizontal]
`MasterTimeout(Time)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.GetIlmStatusRequest`

[horizontal]
`MasterTimeout` property:: deleted
`Timeout` property:: deleted

[float]
=== `Nest.GetIlmStatusResponse`

[horizontal]
`OperationMode` property getter::
changed to non-virtual.

[float]
=== `Nest.GetIndexDescriptor`

[horizontal]
`GetIndexDescriptor()` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`IncludeDefaults(Nullable<Boolean>)` method::
Parameter name changed from `includeDefaults` to `includedefaults`.
`IncludeTypeName(Nullable<Boolean>)` method::
Parameter name changed from `includeTypeName` to `includetypename`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.GetIndexRequest`

[horizontal]
`GetIndexRequest()` method:: added

[float]
=== `Nest.GetIndexResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.

[float]
=== `Nest.GetIndexSettingsDescriptor`

[horizontal]
`GetIndexSettingsDescriptor(Indices)` method:: added
`GetIndexSettingsDescriptor(Indices, Names)` method:: added
`GetIndexSettingsDescriptor(Names)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`IncludeDefaults(Nullable<Boolean>)` method::
Parameter name changed from `includeDefaults` to `includedefaults`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.GetIndexSettingsResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.

[float]
=== `Nest.GetIndexTemplateDescriptor`

[horizontal]
`GetIndexTemplateDescriptor(Names)` method:: added
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`IncludeTypeName(Nullable<Boolean>)` method::
Parameter name changed from `includeTypeName` to `includetypename`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.GetIndexTemplateResponse`

[horizontal]
`TemplateMappings` property getter::
changed to non-virtual.

[float]
=== `Nest.GetInfluencersDescriptor`

[horizontal]
`GetInfluencersDescriptor()` method::
Member is less visible.
`GetInfluencersDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.GetInfluencersRequest`

[horizontal]
`GetInfluencersRequest()` method:: added
`GetInfluencersRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.GetInfluencersResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`Influencers` property getter::
changed to non-virtual.

[float]
=== `Nest.GetJobsDescriptor`

[horizontal]
`GetJobsDescriptor(Id)` method:: added
`AllowNoJobs(Nullable<Boolean>)` method::
Parameter name changed from `allowNoJobs` to `allownojobs`.

[float]
=== `Nest.GetJobsRequest`

[horizontal]
`GetJobsRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.GetJobsResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`Jobs` property getter::
changed to non-virtual.

[float]
=== `Nest.GetJobStatsDescriptor`

[horizontal]
`GetJobStatsDescriptor(Id)` method:: added
`AllowNoJobs(Nullable<Boolean>)` method::
Parameter name changed from `allowNoJobs` to `allownojobs`.

[float]
=== `Nest.GetJobStatsRequest`

[horizontal]
`GetJobStatsRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.GetJobStatsResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`Jobs` property getter::
changed to non-virtual.


[float]
=== `Nest.GetLicenseResponse`

[horizontal]
`License` property getter::
changed to non-virtual.

[float]
=== `Nest.GetLifecycleDescriptor`

[horizontal]
`GetLifecycleDescriptor(Id)` method:: added
`MasterTimeout(Time)` method:: deleted
`PolicyId(Id)` method:: added
`PolicyId(PolicyId)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.GetLifecycleRequest`

[horizontal]
`GetLifecycleRequest(Id)` method:: added
`GetLifecycleRequest(PolicyId)` method:: deleted
`MasterTimeout` property:: deleted
`Timeout` property:: deleted

[float]
=== `Nest.GetLifecycleResponse`

[horizontal]
`Policies` property getter::
changed to non-virtual.

[float]
=== `Nest.GetManyExtensions`

[horizontal]
`GetMany<T>(IElasticClient, IEnumerable<Int64>, IndexName)` method:: added
`GetMany<T>(IElasticClient, IEnumerable<Int64>, IndexName, TypeName)` method:: deleted
`GetMany<T>(IElasticClient, IEnumerable<String>, IndexName)` method:: added
`GetMany<T>(IElasticClient, IEnumerable<String>, IndexName, TypeName)` method:: deleted
`GetManyAsync<T>(IElasticClient, IEnumerable<Int64>, IndexName, TypeName, CancellationToken)` method:: deleted
`GetManyAsync<T>(IElasticClient, IEnumerable<Int64>, IndexName, CancellationToken)` method:: added
`GetManyAsync<T>(IElasticClient, IEnumerable<String>, IndexName, TypeName, CancellationToken)` method:: deleted
`GetManyAsync<T>(IElasticClient, IEnumerable<String>, IndexName, CancellationToken)` method:: added

[float]
=== `Nest.GetMappingDescriptor<TDocument>`

[horizontal]
`GetMappingDescriptor(Indices)` method:: added
`AllIndices()` method::
Member type changed from `GetMappingDescriptor<T>` to `GetMappingDescriptor<TDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `GetMappingDescriptor<T>` to `GetMappingDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `GetMappingDescriptor<T>` to `GetMappingDescriptor<TDocument>`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `GetMappingDescriptor<T>` to `GetMappingDescriptor<TDocument>`.
`IncludeTypeName(Nullable<Boolean>)` method::
Member type changed from `GetMappingDescriptor<T>` to `GetMappingDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `GetMappingDescriptor<T>` to `GetMappingDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `GetMappingDescriptor<T>` to `GetMappingDescriptor<TDocument>`.
`Local(Nullable<Boolean>)` method::
Member type changed from `GetMappingDescriptor<T>` to `GetMappingDescriptor<TDocument>`.
`MasterTimeout(Time)` method::
Member type changed from `GetMappingDescriptor<T>` to `GetMappingDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted

[float]
=== `Nest.GetMappingRequest`

[horizontal]
`GetMappingRequest(Indices, Types)` method:: deleted
`GetMappingRequest(Types)` method:: deleted

[float]
=== `Nest.GetMappingResponse`

[horizontal]
`Accept(IMappingVisitor)` method::
Method changed to non-virtual.
`Indices` property getter::
changed to non-virtual.
`Mapping` property:: deleted
`Mappings` property:: deleted

[float]
=== `Nest.GetMappingResponseExtensions`

[horizontal]
`GetMappingFor<T>(GetMappingResponse)` method:: added
`GetMappingFor(GetMappingResponse, IndexName)` method:: added
`GetMappingFor<T>(IGetMappingResponse)` method:: deleted
`GetMappingFor(IGetMappingResponse, IndexName)` method:: deleted
`GetMappingFor(IGetMappingResponse, IndexName, TypeName)` method:: deleted

[float]
=== `Nest.GetModelSnapshotsDescriptor`

[horizontal]
`GetModelSnapshotsDescriptor()` method:: added
`GetModelSnapshotsDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`GetModelSnapshotsDescriptor(Id, Id)` method:: added

[float]
=== `Nest.GetModelSnapshotsRequest`

[horizontal]
`GetModelSnapshotsRequest()` method:: added
`GetModelSnapshotsRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`GetModelSnapshotsRequest(Id, Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.GetModelSnapshotsResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`ModelSnapshots` property getter::
changed to non-virtual.

[float]
=== `Nest.GetOverallBucketsDescriptor`

[horizontal]
`GetOverallBucketsDescriptor()` method:: added
`GetOverallBucketsDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.GetOverallBucketsRequest`

[horizontal]
`GetOverallBucketsRequest()` method:: added
`GetOverallBucketsRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.GetOverallBucketsResponse`

[horizontal]
`Count` property getter::
changed to non-virtual.
`OverallBuckets` property getter::
changed to non-virtual.

[float]
=== `Nest.GetPipelineDescriptor`

[horizontal]
`GetPipelineDescriptor(Id)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.GetPipelineResponse`

[horizontal]
`Pipelines` property getter::
changed to non-virtual.

[float]
=== `Nest.GetPrivilegesDescriptor`

[horizontal]
`GetPrivilegesDescriptor(Name)` method:: added
`GetPrivilegesDescriptor(Name, Name)` method:: added

[float]
=== `Nest.GetPrivilegesResponse`

[horizontal]
`Applications` property getter::
changed to non-virtual.

[float]
=== `Nest.GetRepositoryDescriptor`

[horizontal]
`GetRepositoryDescriptor(Names)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.GetRepositoryResponse`

[horizontal]
`Azure(String)` method::
Method changed to non-virtual.
`FileSystem(String)` method::
Method changed to non-virtual.
`Hdfs(String)` method::
Method changed to non-virtual.
`ReadOnlyUrl(String)` method::
Method changed to non-virtual.
`S3(String)` method::
Method changed to non-virtual.
`Repositories` property getter::
changed to non-virtual.

[float]
=== `Nest.GetRequest`

[horizontal]
`GetRequest()` method:: added
`GetRequest(IndexName, Id)` method:: added
`GetRequest(IndexName, TypeName, Id)` method:: deleted
`Parent` property:: deleted
`SourceExclude` property:: deleted
`SourceExcludes` property:: added
`SourceInclude` property:: deleted
`SourceIncludes` property:: added

[float]
=== `Nest.GetRequest<TDocument>`

[horizontal]
`GetRequest()` method:: added
`GetRequest(DocumentPath<T>, IndexName, TypeName, Id)` method:: deleted
`GetRequest(Id)` method:: added
`GetRequest(IndexName, Id)` method:: added
`GetRequest(IndexName, TypeName, Id)` method:: deleted
`GetRequest(TDocument, IndexName, Id)` method:: added
`Parent` property:: deleted
`Preference` property:: deleted
`Realtime` property:: deleted
`Refresh` property:: deleted
`Routing` property:: deleted
`Self` property:: deleted
`SourceEnabled` property:: deleted
`SourceExclude` property:: deleted
`SourceInclude` property:: deleted
`StoredFields` property:: deleted
`TypedSelf` property:: added
`Version` property:: deleted
`VersionType` property:: deleted

[float]
=== `Nest.GetResponse<TDocument>`

[horizontal]
`Fields` property getter::
changed to non-virtual.
`Found` property getter::
changed to non-virtual.
`Id` property getter::
changed to non-virtual.
`Index` property getter::
changed to non-virtual.
`Parent` property:: deleted
`PrimaryTerm` property getter::
changed to non-virtual.
`Routing` property getter::
changed to non-virtual.
`SequenceNumber` property getter::
changed to non-virtual.
`Type` property getter::
changed to non-virtual.
`Version` property getter::
changed to non-virtual.

[float]
=== `Nest.GetRoleDescriptor`

[horizontal]
`GetRoleDescriptor(Name)` method:: added

[float]
=== `Nest.GetRoleMappingDescriptor`

[horizontal]
`GetRoleMappingDescriptor(Name)` method:: added

[float]
=== `Nest.GetRoleMappingResponse`

[horizontal]
`RoleMappings` property getter::
changed to non-virtual.

[float]
=== `Nest.GetRoleResponse`

[horizontal]
`Roles` property getter::
changed to non-virtual.

[float]
=== `Nest.GetRollupCapabilitiesDescriptor`

[horizontal]
`GetRollupCapabilitiesDescriptor(Id)` method:: added
`AllIndices()` method:: deleted
`Id(Id)` method:: added
`Index<TOther>()` method:: deleted
`Index(Indices)` method:: deleted

[float]
=== `Nest.GetRollupCapabilitiesRequest`

[horizontal]
`GetRollupCapabilitiesRequest(Id)` method:: added
`GetRollupCapabilitiesRequest(Indices)` method:: deleted

[float]
=== `Nest.GetRollupCapabilitiesResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.

[float]
=== `Nest.GetRollupIndexCapabilitiesDescriptor`

[horizontal]
`GetRollupIndexCapabilitiesDescriptor()` method:: added

[float]
=== `Nest.GetRollupIndexCapabilitiesRequest`

[horizontal]
`GetRollupIndexCapabilitiesRequest()` method:: added

[float]
=== `Nest.GetRollupIndexCapabilitiesResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.

[float]
=== `Nest.GetRollupJobDescriptor`

[horizontal]
`GetRollupJobDescriptor(Id)` method:: added

[float]
=== `Nest.GetRollupJobResponse`

[horizontal]
`Jobs` property getter::
changed to non-virtual.

[float]
=== `Nest.GetScriptDescriptor`

[horizontal]
`GetScriptDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.GetScriptRequest`

[horizontal]
`GetScriptRequest()` method:: added

[float]
=== `Nest.GetScriptResponse`

[horizontal]
`Script` property getter::
changed to non-virtual.

[float]
=== `Nest.GetSnapshotDescriptor`

[horizontal]
`GetSnapshotDescriptor()` method:: added
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.GetSnapshotRequest`

[horizontal]
`GetSnapshotRequest()` method:: added

[float]
=== `Nest.GetSnapshotResponse`

[horizontal]
`Snapshots` property getter::
changed to non-virtual.


[float]
=== `Nest.GetTaskDescriptor`

[horizontal]
`GetTaskDescriptor()` method::
Member is less visible.
`GetTaskDescriptor(TaskId)` method::
Parameter name changed from `task_id` to `taskId`.
`TaskId(TaskId)` method:: deleted
`WaitForCompletion(Nullable<Boolean>)` method::
Parameter name changed from `waitForCompletion` to `waitforcompletion`.

[float]
=== `Nest.GetTaskRequest`

[horizontal]
`GetTaskRequest()` method:: added
`GetTaskRequest(TaskId)` method::
Parameter name changed from `task_id` to `taskId`.

[float]
=== `Nest.GetTaskResponse`

[horizontal]
`Completed` property getter::
changed to non-virtual.
`Task` property getter::
changed to non-virtual.


[float]
=== `Nest.GetTrialLicenseStatusResponse`

[horizontal]
`EligibleToStartTrial` property getter::
changed to non-virtual.


[float]
=== `Nest.GetUserAccessTokenResponse`

[horizontal]
`AccessToken` property getter::
changed to non-virtual.
`AccessToken` property setter::
changed to non-virtual.
`ExpiresIn` property getter::
changed to non-virtual.
`ExpiresIn` property setter::
changed to non-virtual.
`Scope` property getter::
changed to non-virtual.
`Scope` property setter::
changed to non-virtual.
`Type` property getter::
changed to non-virtual.
`Type` property setter::
changed to non-virtual.

[float]
=== `Nest.GetUserDescriptor`

[horizontal]
`GetUserDescriptor(Names)` method:: added

[float]
=== `Nest.GetUserPrivilegesResponse`

[horizontal]
`Applications` property getter::
changed to non-virtual.
`Cluster` property getter::
changed to non-virtual.
`Global` property getter::
changed to non-virtual.
`Indices` property getter::
changed to non-virtual.
`RunAs` property getter::
changed to non-virtual.

[float]
=== `Nest.GetUserResponse`

[horizontal]
`Users` property getter::
changed to non-virtual.

[float]
=== `Nest.GetWatchDescriptor`

[horizontal]
`GetWatchDescriptor()` method:: added

[float]
=== `Nest.GetWatchRequest`

[horizontal]
`GetWatchRequest()` method:: added

[float]
=== `Nest.GetWatchResponse`

[horizontal]
`Found` property getter::
changed to non-virtual.
`Id` property getter::
changed to non-virtual.
`Status` property getter::
changed to non-virtual.
`Watch` property getter::
changed to non-virtual.



[float]
=== `Nest.GraphExploreControlsDescriptor<T>`

[horizontal]
`SamleDiversity(Field, Nullable<Int32>)` method:: deleted
`SamleDiversity(Expression<Func<T, Object>>, Nullable<Int32>)` method:: deleted
`SampleDiversity(Field, Nullable<Int32>)` method:: added
`SampleDiversity<TValue>(Expression<Func<T, TValue>>, Nullable<Int32>)` method:: added

[float]
=== `Nest.GraphExploreDescriptor<TDocument>`

[horizontal]
`AllIndices()` method::
Member type changed from `GraphExploreDescriptor<T>` to `GraphExploreDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`Connections(Func<HopDescriptor<T>, IHop>)` method:: deleted
`Connections(Func<HopDescriptor<TDocument>, IHop>)` method:: added
`Controls(Func<GraphExploreControlsDescriptor<T>, IGraphExploreControls>)` method:: deleted
`Controls(Func<GraphExploreControlsDescriptor<TDocument>, IGraphExploreControls>)` method:: added
`Index<TOther>()` method::
Member type changed from `GraphExploreDescriptor<T>` to `GraphExploreDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `GraphExploreDescriptor<T>` to `GraphExploreDescriptor<TDocument>`.
`Query(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`Query(Func<QueryContainerDescriptor<TDocument>, QueryContainer>)` method:: added
`Routing(Routing)` method::
Member type changed from `GraphExploreDescriptor<T>` to `GraphExploreDescriptor<TDocument>`.
`Timeout(Time)` method::
Member type changed from `GraphExploreDescriptor<T>` to `GraphExploreDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted
`Vertices(Func<GraphVerticesDescriptor<T>, IPromise<IList<IGraphVertexDefinition>>>)` method:: deleted
`Vertices(Func<GraphVerticesDescriptor<TDocument>, IPromise<IList<IGraphVertexDefinition>>>)` method:: added

[float]
=== `Nest.GraphExploreRequest`

[horizontal]
`GraphExploreRequest()` method:: added
`GraphExploreRequest(Indices, Types)` method:: deleted

[float]
=== `Nest.GraphExploreRequest<TDocument>`

[horizontal]
`GraphExploreRequest(Indices, Types)` method:: deleted
`Connections` property:: deleted
`Controls` property:: deleted
`Query` property:: deleted
`Routing` property:: deleted
`Self` property:: deleted
`Timeout` property:: deleted
`TypedSelf` property:: added
`Vertices` property:: deleted

[float]
=== `Nest.GraphExploreResponse`

[horizontal]
`Connections` property getter::
changed to non-virtual.
`Failures` property getter::
changed to non-virtual.
`TimedOut` property getter::
changed to non-virtual.
`Took` property getter::
changed to non-virtual.
`Vertices` property getter::
changed to non-virtual.



[float]
=== `Nest.GraphVerticesDescriptor<T>`

[horizontal]
`Vertex(Expression<Func<T, Object>>, Func<GraphVertexDefinitionDescriptor, IGraphVertexDefinition>)` method:: deleted
`Vertex<TValue>(Expression<Func<T, TValue>>, Func<GraphVertexDefinitionDescriptor, IGraphVertexDefinition>)` method:: added

[float]
=== `Nest.GrokProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.GrokProcessorPatternsResponse`

[horizontal]
`Patterns` property getter::
changed to non-virtual.

[float]
=== `Nest.GsubProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.HasChildQuery`

[horizontal]

[float]
=== `Nest.HasParentQuery`

[horizontal]

[float]
=== `Nest.HasPrivilegesDescriptor`

[horizontal]
`HasPrivilegesDescriptor(Name)` method:: added

[float]
=== `Nest.HasPrivilegesResponse`

[horizontal]
`Applications` property getter::
changed to non-virtual.
`Clusters` property getter::
changed to non-virtual.
`HasAllRequested` property getter::
changed to non-virtual.
`Indices` property getter::
changed to non-virtual.
`Username` property getter::
changed to non-virtual.

[float]
=== `Nest.HighlightDescriptor<T>`

[horizontal]
`BoundaryCharacters(String)` method:: deleted
`BoundaryChars(String)` method:: added
`PostTags(String)` method:: deleted
`PostTags(String[])` method:: added
`PreTags(String)` method:: deleted
`PreTags(String[])` method:: added






[float]
=== `Nest.HighlightFieldDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.HighlightFieldDictionary`

[horizontal]
type:: deleted

[float]
=== `Nest.HighlightHit`

[horizontal]
type:: deleted

[float]
=== `Nest.HipChatAction`

[horizontal]
type:: deleted

[float]
=== `Nest.HipChatActionDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.HipChatActionMessageResult`

[horizontal]
type:: deleted

[float]
=== `Nest.HipChatActionResult`

[horizontal]
type:: deleted

[float]
=== `Nest.HipChatMessage`

[horizontal]
type:: deleted

[float]
=== `Nest.HipChatMessageColor`

[horizontal]
type:: deleted

[float]
=== `Nest.HipChatMessageDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.HipChatMessageFormat`

[horizontal]
type:: deleted

[float]
=== `Nest.HistogramAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.HistogramOrder`

[horizontal]
`Key` property getter::
changed to virtual.
`Key` property setter::
changed to virtual.
`Order` property getter::
changed to virtual.
`Order` property setter::
changed to virtual.

[float]
=== `Nest.Hit<TDocument>`

[horizontal]
`Highlight` property:: added
`Highlights` property:: deleted
`Nested` property getter::
changed to virtual.
`Parent` property:: deleted
`PrimaryTerm` property:: added
`SequenceNumber` property:: added

[float]
=== `Nest.HitsMetadata<T>`

[horizontal]
`Hits` property getter::
changed to virtual.
`MaxScore` property getter::
changed to virtual.
`Total` property getter::
changed to virtual.







[float]
=== `Nest.IAcknowledgedResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IAcknowledgeWatchRequest`

[horizontal]

[float]
=== `Nest.IAcknowledgeWatchResponse`

[horizontal]
type:: deleted




[float]
=== `Nest.IActivateWatchResponse`

[horizontal]
type:: deleted

























[float]
=== `Nest.IAnalyzeResponse`

[horizontal]
type:: deleted













[float]
=== `Nest.IAuthenticateResponse`

[horizontal]
type:: deleted











[float]
=== `Nest.IBoolQuery`

[horizontal]
`ShouldSerializeFilter()` method:: added
`ShouldSerializeMust()` method:: added
`ShouldSerializeMustNot()` method:: added
`ShouldSerializeShould()` method:: added








[float]
=== `Nest.IBulkAliasResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IBulkAllRequest<T>`

[horizontal]
`Refresh` property:: deleted
`Type` property:: deleted

[float]
=== `Nest.IBulkAllResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IBulkDeleteOperation<T>`

[horizontal]
`IfPrimaryTerm` property:: added
`IfSequenceNumber` property:: added

[float]
=== `Nest.IBulkIndexOperation<T>`

[horizontal]
`IfPrimaryTerm` property:: added
`IfSequenceNumber` property:: added

[float]
=== `Nest.IBulkOperation`

[horizontal]
`Parent` property:: deleted
`Type` property:: deleted

[float]
=== `Nest.IBulkRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IBulkResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IBulkResponseItem`

[horizontal]
type:: deleted






[float]
=== `Nest.ICancelTasksResponse`

[horizontal]
type:: deleted
















[float]
=== `Nest.ICatResponse<out TCatRecord>`

[horizontal]
type:: deleted








[float]
=== `Nest.ICcrStatsResponse`

[horizontal]
type:: deleted




[float]
=== `Nest.IChangePasswordResponse`

[horizontal]
type:: deleted








[float]
=== `Nest.IClassicSimilarity`

[horizontal]
type:: deleted


[float]
=== `Nest.IClearCachedRealmsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClearCachedRolesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClearCacheResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClearScrollResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClearSqlCursorResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.ICloseIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.ICloseJobResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IClrTypeMapping`

[horizontal]
`TypeName` property:: deleted


[float]
=== `Nest.IClusterAllocationExplainResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClusterGetSettingsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClusterHealthResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClusterPendingTasksResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClusterPutSettingsResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IClusterRerouteResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClusterStateResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IClusterStatsResponse`

[horizontal]
type:: deleted





[float]
=== `Nest.ICompletionSuggester`

[horizontal]

[float]
=== `Nest.ICompositeAggregation`

[horizontal]

[float]
=== `Nest.ICompositeAggregationSource`

[horizontal]
`Missing` property:: deleted





[float]
=== `Nest.IConnectionSettingsValues`

[horizontal]
`DefaultTypeName` property:: deleted
`DefaultTypeNameInferrer` property:: deleted
`DefaultTypeNames` property:: deleted



[float]
=== `Nest.ICoreProperty`

[horizontal]

[float]
=== `Nest.ICountRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.ICountResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.ICovariantSearchRequest`

[horizontal]
type:: deleted


[float]
=== `Nest.ICreateApiKeyResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.ICreateAutoFollowPatternResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.ICreateFollowIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.ICreateIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.ICreateRepositoryResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.ICreateRequest<TDocument>`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.ICreateResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.ICreateRollupJobResponse`

[horizontal]
type:: deleted

















[float]
=== `Nest.IDateHistogramCompositeAggregationSource`

[horizontal]
`Timezone` property:: deleted
`TimeZone` property:: added



[float]
=== `Nest.IDateProcessor`

[horizontal]
`Timezone` property:: deleted
`TimeZone` property:: added







[float]
=== `Nest.IDeactivateWatchResponse`

[horizontal]
type:: deleted




[float]
=== `Nest.IDeleteAliasResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteAutoFollowPatternResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IDeleteByQueryRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IDeleteByQueryResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IDeleteCalendarEventResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteCalendarJobResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteCalendarResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteDatafeedResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteExpiredDataResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteFilterResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IDeleteForecastRequest`

[horizontal]

[float]
=== `Nest.IDeleteForecastResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteIndexTemplateResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteJobResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteLicenseResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IDeleteLifecycleRequest`

[horizontal]

[float]
=== `Nest.IDeleteLifecycleResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteModelSnapshotResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeletePipelineResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeletePrivilegesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteRepositoryResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IDeleteRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IDeleteResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteRoleMappingResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteRoleResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteRollupJobResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteScriptResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteSnapshotResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteUserResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IDeleteWatchResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IDeprecationInfoResponse`

[horizontal]
type:: deleted






[float]
=== `Nest.IDirectGenerator`

[horizontal]


[float]
=== `Nest.IDisableUserResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IDocumentExistsRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IDocumentPath`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IDocumentRequest`

[horizontal]
type:: added





[float]
=== `Nest.Ids`

[horizontal]
type:: added

[float]
=== `Nest.IdsQuery`

[horizontal]
`Types` property:: deleted

[float]
=== `Nest.IdsQueryDescriptor`

[horizontal]
`Types(TypeName[])` method:: deleted
`Types(Types)` method:: deleted
`Types(IEnumerable<TypeName>)` method:: deleted


[float]
=== `Nest.IDynamicResponse`

[horizontal]
type:: added





[float]
=== `Nest.IElasticClient`

[horizontal]
`AcknowledgeWatch(IAcknowledgeWatchRequest)` method:: deleted
`AcknowledgeWatch(Id, Func<AcknowledgeWatchDescriptor, IAcknowledgeWatchRequest>)` method:: deleted
`AcknowledgeWatchAsync(IAcknowledgeWatchRequest, CancellationToken)` method:: deleted
`AcknowledgeWatchAsync(Id, Func<AcknowledgeWatchDescriptor, IAcknowledgeWatchRequest>, CancellationToken)` method:: deleted
`ActivateWatch(IActivateWatchRequest)` method:: deleted
`ActivateWatch(Id, Func<ActivateWatchDescriptor, IActivateWatchRequest>)` method:: deleted
`ActivateWatchAsync(IActivateWatchRequest, CancellationToken)` method:: deleted
`ActivateWatchAsync(Id, Func<ActivateWatchDescriptor, IActivateWatchRequest>, CancellationToken)` method:: deleted
`Alias(IBulkAliasRequest)` method:: deleted
`Alias(Func<BulkAliasDescriptor, IBulkAliasRequest>)` method:: deleted
`AliasAsync(IBulkAliasRequest, CancellationToken)` method:: deleted
`AliasAsync(Func<BulkAliasDescriptor, IBulkAliasRequest>, CancellationToken)` method:: deleted
`AliasExists(IAliasExistsRequest)` method:: deleted
`AliasExists(Names, Func<AliasExistsDescriptor, IAliasExistsRequest>)` method:: deleted
`AliasExists(Func<AliasExistsDescriptor, IAliasExistsRequest>)` method:: deleted
`AliasExistsAsync(IAliasExistsRequest, CancellationToken)` method:: deleted
`AliasExistsAsync(Names, Func<AliasExistsDescriptor, IAliasExistsRequest>, CancellationToken)` method:: deleted
`AliasExistsAsync(Func<AliasExistsDescriptor, IAliasExistsRequest>, CancellationToken)` method:: deleted
`Analyze(IAnalyzeRequest)` method:: deleted
`Analyze(Func<AnalyzeDescriptor, IAnalyzeRequest>)` method:: deleted
`AnalyzeAsync(IAnalyzeRequest, CancellationToken)` method:: deleted
`AnalyzeAsync(Func<AnalyzeDescriptor, IAnalyzeRequest>, CancellationToken)` method:: deleted
`Authenticate(IAuthenticateRequest)` method:: deleted
`Authenticate(Func<AuthenticateDescriptor, IAuthenticateRequest>)` method:: deleted
`AuthenticateAsync(IAuthenticateRequest, CancellationToken)` method:: deleted
`AuthenticateAsync(Func<AuthenticateDescriptor, IAuthenticateRequest>, CancellationToken)` method:: deleted
`Bulk(IBulkRequest)` method::
Member type changed from `IBulkResponse` to `BulkResponse`.
`Bulk(Func<BulkDescriptor, IBulkRequest>)` method::
Member type changed from `IBulkResponse` to `BulkResponse`.
`BulkAsync(IBulkRequest, CancellationToken)` method::
Member type changed from `Task<IBulkResponse>` to `Task<BulkResponse>`.
`BulkAsync(Func<BulkDescriptor, IBulkRequest>, CancellationToken)` method::
Member type changed from `Task<IBulkResponse>` to `Task<BulkResponse>`.
`CancelTasks(ICancelTasksRequest)` method:: deleted
`CancelTasks(Func<CancelTasksDescriptor, ICancelTasksRequest>)` method:: deleted
`CancelTasksAsync(ICancelTasksRequest, CancellationToken)` method:: deleted
`CancelTasksAsync(Func<CancelTasksDescriptor, ICancelTasksRequest>, CancellationToken)` method:: deleted
`CatAliases(ICatAliasesRequest)` method:: deleted
`CatAliases(Func<CatAliasesDescriptor, ICatAliasesRequest>)` method:: deleted
`CatAliasesAsync(ICatAliasesRequest, CancellationToken)` method:: deleted
`CatAliasesAsync(Func<CatAliasesDescriptor, ICatAliasesRequest>, CancellationToken)` method:: deleted
`CatAllocation(ICatAllocationRequest)` method:: deleted
`CatAllocation(Func<CatAllocationDescriptor, ICatAllocationRequest>)` method:: deleted
`CatAllocationAsync(ICatAllocationRequest, CancellationToken)` method:: deleted
`CatAllocationAsync(Func<CatAllocationDescriptor, ICatAllocationRequest>, CancellationToken)` method:: deleted
`CatCount(ICatCountRequest)` method:: deleted
`CatCount(Func<CatCountDescriptor, ICatCountRequest>)` method:: deleted
`CatCountAsync(ICatCountRequest, CancellationToken)` method:: deleted
`CatCountAsync(Func<CatCountDescriptor, ICatCountRequest>, CancellationToken)` method:: deleted
`CatFielddata(ICatFielddataRequest)` method:: deleted
`CatFielddata(Func<CatFielddataDescriptor, ICatFielddataRequest>)` method:: deleted
`CatFielddataAsync(ICatFielddataRequest, CancellationToken)` method:: deleted
`CatFielddataAsync(Func<CatFielddataDescriptor, ICatFielddataRequest>, CancellationToken)` method:: deleted
`CatHealth(ICatHealthRequest)` method:: deleted
`CatHealth(Func<CatHealthDescriptor, ICatHealthRequest>)` method:: deleted
`CatHealthAsync(ICatHealthRequest, CancellationToken)` method:: deleted
`CatHealthAsync(Func<CatHealthDescriptor, ICatHealthRequest>, CancellationToken)` method:: deleted
`CatHelp(ICatHelpRequest)` method:: deleted
`CatHelp(Func<CatHelpDescriptor, ICatHelpRequest>)` method:: deleted
`CatHelpAsync(ICatHelpRequest, CancellationToken)` method:: deleted
`CatHelpAsync(Func<CatHelpDescriptor, ICatHelpRequest>, CancellationToken)` method:: deleted
`CatIndices(ICatIndicesRequest)` method:: deleted
`CatIndices(Func<CatIndicesDescriptor, ICatIndicesRequest>)` method:: deleted
`CatIndicesAsync(ICatIndicesRequest, CancellationToken)` method:: deleted
`CatIndicesAsync(Func<CatIndicesDescriptor, ICatIndicesRequest>, CancellationToken)` method:: deleted
`CatMaster(ICatMasterRequest)` method:: deleted
`CatMaster(Func<CatMasterDescriptor, ICatMasterRequest>)` method:: deleted
`CatMasterAsync(ICatMasterRequest, CancellationToken)` method:: deleted
`CatMasterAsync(Func<CatMasterDescriptor, ICatMasterRequest>, CancellationToken)` method:: deleted
`CatNodeAttributes(ICatNodeAttributesRequest)` method:: deleted
`CatNodeAttributes(Func<CatNodeAttributesDescriptor, ICatNodeAttributesRequest>)` method:: deleted
`CatNodeAttributesAsync(ICatNodeAttributesRequest, CancellationToken)` method:: deleted
`CatNodeAttributesAsync(Func<CatNodeAttributesDescriptor, ICatNodeAttributesRequest>, CancellationToken)` method:: deleted
`CatNodes(ICatNodesRequest)` method:: deleted
`CatNodes(Func<CatNodesDescriptor, ICatNodesRequest>)` method:: deleted
`CatNodesAsync(ICatNodesRequest, CancellationToken)` method:: deleted
`CatNodesAsync(Func<CatNodesDescriptor, ICatNodesRequest>, CancellationToken)` method:: deleted
`CatPendingTasks(ICatPendingTasksRequest)` method:: deleted
`CatPendingTasks(Func<CatPendingTasksDescriptor, ICatPendingTasksRequest>)` method:: deleted
`CatPendingTasksAsync(ICatPendingTasksRequest, CancellationToken)` method:: deleted
`CatPendingTasksAsync(Func<CatPendingTasksDescriptor, ICatPendingTasksRequest>, CancellationToken)` method:: deleted
`CatPlugins(ICatPluginsRequest)` method:: deleted
`CatPlugins(Func<CatPluginsDescriptor, ICatPluginsRequest>)` method:: deleted
`CatPluginsAsync(ICatPluginsRequest, CancellationToken)` method:: deleted
`CatPluginsAsync(Func<CatPluginsDescriptor, ICatPluginsRequest>, CancellationToken)` method:: deleted
`CatRecovery(ICatRecoveryRequest)` method:: deleted
`CatRecovery(Func<CatRecoveryDescriptor, ICatRecoveryRequest>)` method:: deleted
`CatRecoveryAsync(ICatRecoveryRequest, CancellationToken)` method:: deleted
`CatRecoveryAsync(Func<CatRecoveryDescriptor, ICatRecoveryRequest>, CancellationToken)` method:: deleted
`CatRepositories(ICatRepositoriesRequest)` method:: deleted
`CatRepositories(Func<CatRepositoriesDescriptor, ICatRepositoriesRequest>)` method:: deleted
`CatRepositoriesAsync(ICatRepositoriesRequest, CancellationToken)` method:: deleted
`CatRepositoriesAsync(Func<CatRepositoriesDescriptor, ICatRepositoriesRequest>, CancellationToken)` method:: deleted
`CatSegments(ICatSegmentsRequest)` method:: deleted
`CatSegments(Func<CatSegmentsDescriptor, ICatSegmentsRequest>)` method:: deleted
`CatSegmentsAsync(ICatSegmentsRequest, CancellationToken)` method:: deleted
`CatSegmentsAsync(Func<CatSegmentsDescriptor, ICatSegmentsRequest>, CancellationToken)` method:: deleted
`CatShards(ICatShardsRequest)` method:: deleted
`CatShards(Func<CatShardsDescriptor, ICatShardsRequest>)` method:: deleted
`CatShardsAsync(ICatShardsRequest, CancellationToken)` method:: deleted
`CatShardsAsync(Func<CatShardsDescriptor, ICatShardsRequest>, CancellationToken)` method:: deleted
`CatSnapshots(ICatSnapshotsRequest)` method:: deleted
`CatSnapshots(Names, Func<CatSnapshotsDescriptor, ICatSnapshotsRequest>)` method:: deleted
`CatSnapshotsAsync(ICatSnapshotsRequest, CancellationToken)` method:: deleted
`CatSnapshotsAsync(Names, Func<CatSnapshotsDescriptor, ICatSnapshotsRequest>, CancellationToken)` method:: deleted
`CatTasks(ICatTasksRequest)` method:: deleted
`CatTasks(Func<CatTasksDescriptor, ICatTasksRequest>)` method:: deleted
`CatTasksAsync(ICatTasksRequest, CancellationToken)` method:: deleted
`CatTasksAsync(Func<CatTasksDescriptor, ICatTasksRequest>, CancellationToken)` method:: deleted
`CatTemplates(ICatTemplatesRequest)` method:: deleted
`CatTemplates(Func<CatTemplatesDescriptor, ICatTemplatesRequest>)` method:: deleted
`CatTemplatesAsync(ICatTemplatesRequest, CancellationToken)` method:: deleted
`CatTemplatesAsync(Func<CatTemplatesDescriptor, ICatTemplatesRequest>, CancellationToken)` method:: deleted
`CatThreadPool(ICatThreadPoolRequest)` method:: deleted
`CatThreadPool(Func<CatThreadPoolDescriptor, ICatThreadPoolRequest>)` method:: deleted
`CatThreadPoolAsync(ICatThreadPoolRequest, CancellationToken)` method:: deleted
`CatThreadPoolAsync(Func<CatThreadPoolDescriptor, ICatThreadPoolRequest>, CancellationToken)` method:: deleted
`CcrStats(ICcrStatsRequest)` method:: deleted
`CcrStats(Func<CcrStatsDescriptor, ICcrStatsRequest>)` method:: deleted
`CcrStatsAsync(ICcrStatsRequest, CancellationToken)` method:: deleted
`CcrStatsAsync(Func<CcrStatsDescriptor, ICcrStatsRequest>, CancellationToken)` method:: deleted
`ChangePassword(IChangePasswordRequest)` method:: deleted
`ChangePassword(Func<ChangePasswordDescriptor, IChangePasswordRequest>)` method:: deleted
`ChangePasswordAsync(IChangePasswordRequest, CancellationToken)` method:: deleted
`ChangePasswordAsync(Func<ChangePasswordDescriptor, IChangePasswordRequest>, CancellationToken)` method:: deleted
`ClearCache(IClearCacheRequest)` method:: deleted
`ClearCache(Indices, Func<ClearCacheDescriptor, IClearCacheRequest>)` method:: deleted
`ClearCacheAsync(IClearCacheRequest, CancellationToken)` method:: deleted
`ClearCacheAsync(Indices, Func<ClearCacheDescriptor, IClearCacheRequest>, CancellationToken)` method:: deleted
`ClearCachedRealms(IClearCachedRealmsRequest)` method:: deleted
`ClearCachedRealms(Names, Func<ClearCachedRealmsDescriptor, IClearCachedRealmsRequest>)` method:: deleted
`ClearCachedRealmsAsync(IClearCachedRealmsRequest, CancellationToken)` method:: deleted
`ClearCachedRealmsAsync(Names, Func<ClearCachedRealmsDescriptor, IClearCachedRealmsRequest>, CancellationToken)` method:: deleted
`ClearCachedRoles(IClearCachedRolesRequest)` method:: deleted
`ClearCachedRoles(Names, Func<ClearCachedRolesDescriptor, IClearCachedRolesRequest>)` method:: deleted
`ClearCachedRolesAsync(IClearCachedRolesRequest, CancellationToken)` method:: deleted
`ClearCachedRolesAsync(Names, Func<ClearCachedRolesDescriptor, IClearCachedRolesRequest>, CancellationToken)` method:: deleted
`ClearScroll(IClearScrollRequest)` method::
Member type changed from `IClearScrollResponse` to `ClearScrollResponse`.
`ClearScroll(Func<ClearScrollDescriptor, IClearScrollRequest>)` method::
Member type changed from `IClearScrollResponse` to `ClearScrollResponse`.
`ClearScrollAsync(IClearScrollRequest, CancellationToken)` method::
Member type changed from `Task<IClearScrollResponse>` to `Task<ClearScrollResponse>`.
`ClearScrollAsync(Func<ClearScrollDescriptor, IClearScrollRequest>, CancellationToken)` method::
Member type changed from `Task<IClearScrollResponse>` to `Task<ClearScrollResponse>`.
`ClearSqlCursor(IClearSqlCursorRequest)` method:: deleted
`ClearSqlCursor(Func<ClearSqlCursorDescriptor, IClearSqlCursorRequest>)` method:: deleted
`ClearSqlCursorAsync(IClearSqlCursorRequest, CancellationToken)` method:: deleted
`ClearSqlCursorAsync(Func<ClearSqlCursorDescriptor, IClearSqlCursorRequest>, CancellationToken)` method:: deleted
`CloseIndex(ICloseIndexRequest)` method:: deleted
`CloseIndex(Indices, Func<CloseIndexDescriptor, ICloseIndexRequest>)` method:: deleted
`CloseIndexAsync(ICloseIndexRequest, CancellationToken)` method:: deleted
`CloseIndexAsync(Indices, Func<CloseIndexDescriptor, ICloseIndexRequest>, CancellationToken)` method:: deleted
`CloseJob(ICloseJobRequest)` method:: deleted
`CloseJob(Id, Func<CloseJobDescriptor, ICloseJobRequest>)` method:: deleted
`CloseJobAsync(ICloseJobRequest, CancellationToken)` method:: deleted
`CloseJobAsync(Id, Func<CloseJobDescriptor, ICloseJobRequest>, CancellationToken)` method:: deleted
`ClusterAllocationExplain(IClusterAllocationExplainRequest)` method:: deleted
`ClusterAllocationExplain(Func<ClusterAllocationExplainDescriptor, IClusterAllocationExplainRequest>)` method:: deleted
`ClusterAllocationExplainAsync(IClusterAllocationExplainRequest, CancellationToken)` method:: deleted
`ClusterAllocationExplainAsync(Func<ClusterAllocationExplainDescriptor, IClusterAllocationExplainRequest>, CancellationToken)` method:: deleted
`ClusterGetSettings(IClusterGetSettingsRequest)` method:: deleted
`ClusterGetSettings(Func<ClusterGetSettingsDescriptor, IClusterGetSettingsRequest>)` method:: deleted
`ClusterGetSettingsAsync(IClusterGetSettingsRequest, CancellationToken)` method:: deleted
`ClusterGetSettingsAsync(Func<ClusterGetSettingsDescriptor, IClusterGetSettingsRequest>, CancellationToken)` method:: deleted
`ClusterHealth(IClusterHealthRequest)` method:: deleted
`ClusterHealth(Func<ClusterHealthDescriptor, IClusterHealthRequest>)` method:: deleted
`ClusterHealthAsync(IClusterHealthRequest, CancellationToken)` method:: deleted
`ClusterHealthAsync(Func<ClusterHealthDescriptor, IClusterHealthRequest>, CancellationToken)` method:: deleted
`ClusterPendingTasks(IClusterPendingTasksRequest)` method:: deleted
`ClusterPendingTasks(Func<ClusterPendingTasksDescriptor, IClusterPendingTasksRequest>)` method:: deleted
`ClusterPendingTasksAsync(IClusterPendingTasksRequest, CancellationToken)` method:: deleted
`ClusterPendingTasksAsync(Func<ClusterPendingTasksDescriptor, IClusterPendingTasksRequest>, CancellationToken)` method:: deleted
`ClusterPutSettings(IClusterPutSettingsRequest)` method:: deleted
`ClusterPutSettings(Func<ClusterPutSettingsDescriptor, IClusterPutSettingsRequest>)` method:: deleted
`ClusterPutSettingsAsync(IClusterPutSettingsRequest, CancellationToken)` method:: deleted
`ClusterPutSettingsAsync(Func<ClusterPutSettingsDescriptor, IClusterPutSettingsRequest>, CancellationToken)` method:: deleted
`ClusterReroute(IClusterRerouteRequest)` method:: deleted
`ClusterReroute(Func<ClusterRerouteDescriptor, IClusterRerouteRequest>)` method:: deleted
`ClusterRerouteAsync(IClusterRerouteRequest, CancellationToken)` method:: deleted
`ClusterRerouteAsync(Func<ClusterRerouteDescriptor, IClusterRerouteRequest>, CancellationToken)` method:: deleted
`ClusterState(IClusterStateRequest)` method:: deleted
`ClusterState(Func<ClusterStateDescriptor, IClusterStateRequest>)` method:: deleted
`ClusterStateAsync(IClusterStateRequest, CancellationToken)` method:: deleted
`ClusterStateAsync(Func<ClusterStateDescriptor, IClusterStateRequest>, CancellationToken)` method:: deleted
`ClusterStats(IClusterStatsRequest)` method:: deleted
`ClusterStats(Func<ClusterStatsDescriptor, IClusterStatsRequest>)` method:: deleted
`ClusterStatsAsync(IClusterStatsRequest, CancellationToken)` method:: deleted
`ClusterStatsAsync(Func<ClusterStatsDescriptor, IClusterStatsRequest>, CancellationToken)` method:: deleted
`Count(ICountRequest)` method::
Member type changed from `ICountResponse` to `CountResponse`.
`Count<T>(Func<CountDescriptor<T>, ICountRequest>)` method:: deleted
`Count<TDocument>(Func<CountDescriptor<TDocument>, ICountRequest>)` method:: added
`CountAsync(ICountRequest, CancellationToken)` method::
Member type changed from `Task<ICountResponse>` to `Task<CountResponse>`.
`CountAsync<T>(Func<CountDescriptor<T>, ICountRequest>, CancellationToken)` method:: deleted
`CountAsync<TDocument>(Func<CountDescriptor<TDocument>, ICountRequest>, CancellationToken)` method:: added
`Create<TDocument>(ICreateRequest<TDocument>)` method::
Member type changed from `ICreateResponse` to `CreateResponse`.
`Create<TDocument>(TDocument, Func<CreateDescriptor<TDocument>, ICreateRequest<TDocument>>)` method::
Member type changed from `ICreateResponse` to `CreateResponse`.
`CreateApiKey(ICreateApiKeyRequest)` method:: deleted
`CreateApiKey(Func<CreateApiKeyDescriptor, ICreateApiKeyRequest>)` method:: deleted
`CreateApiKeyAsync(ICreateApiKeyRequest, CancellationToken)` method:: deleted
`CreateApiKeyAsync(Func<CreateApiKeyDescriptor, ICreateApiKeyRequest>, CancellationToken)` method:: deleted
`CreateAsync<TDocument>(ICreateRequest<TDocument>, CancellationToken)` method::
Member type changed from `Task<ICreateResponse>` to `Task<CreateResponse>`.
`CreateAsync<TDocument>(TDocument, Func<CreateDescriptor<TDocument>, ICreateRequest<TDocument>>, CancellationToken)` method::
Member type changed from `Task<ICreateResponse>` to `Task<CreateResponse>`.
`CreateAutoFollowPattern(ICreateAutoFollowPatternRequest)` method:: deleted
`CreateAutoFollowPattern(Name, Func<CreateAutoFollowPatternDescriptor, ICreateAutoFollowPatternRequest>)` method:: deleted
`CreateAutoFollowPatternAsync(ICreateAutoFollowPatternRequest, CancellationToken)` method:: deleted
`CreateAutoFollowPatternAsync(Name, Func<CreateAutoFollowPatternDescriptor, ICreateAutoFollowPatternRequest>, CancellationToken)` method:: deleted
`CreateDocument<TDocument>(TDocument)` method::
Member type changed from `ICreateResponse` to `CreateResponse`.
`CreateDocumentAsync<TDocument>(TDocument, CancellationToken)` method::
Member type changed from `Task<ICreateResponse>` to `Task<CreateResponse>`.
`CreateFollowIndex(ICreateFollowIndexRequest)` method:: deleted
`CreateFollowIndex(IndexName, Func<CreateFollowIndexDescriptor, ICreateFollowIndexRequest>)` method:: deleted
`CreateFollowIndexAsync(ICreateFollowIndexRequest, CancellationToken)` method:: deleted
`CreateFollowIndexAsync(IndexName, Func<CreateFollowIndexDescriptor, ICreateFollowIndexRequest>, CancellationToken)` method:: deleted
`CreateIndex(ICreateIndexRequest)` method:: deleted
`CreateIndex(IndexName, Func<CreateIndexDescriptor, ICreateIndexRequest>)` method:: deleted
`CreateIndexAsync(ICreateIndexRequest, CancellationToken)` method:: deleted
`CreateIndexAsync(IndexName, Func<CreateIndexDescriptor, ICreateIndexRequest>, CancellationToken)` method:: deleted
`CreateRepository(ICreateRepositoryRequest)` method:: deleted
`CreateRepository(Name, Func<CreateRepositoryDescriptor, ICreateRepositoryRequest>)` method:: deleted
`CreateRepositoryAsync(ICreateRepositoryRequest, CancellationToken)` method:: deleted
`CreateRepositoryAsync(Name, Func<CreateRepositoryDescriptor, ICreateRepositoryRequest>, CancellationToken)` method:: deleted
`CreateRollupJob(ICreateRollupJobRequest)` method:: deleted
`CreateRollupJob<T>(Id, Func<CreateRollupJobDescriptor<T>, ICreateRollupJobRequest>)` method:: deleted
`CreateRollupJobAsync(ICreateRollupJobRequest, CancellationToken)` method:: deleted
`CreateRollupJobAsync<T>(Id, Func<CreateRollupJobDescriptor<T>, ICreateRollupJobRequest>, CancellationToken)` method:: deleted
`DeactivateWatch(Id, Func<DeactivateWatchDescriptor, IDeactivateWatchRequest>)` method:: deleted
`DeactivateWatch(IDeactivateWatchRequest)` method:: deleted
`DeactivateWatchAsync(Id, Func<DeactivateWatchDescriptor, IDeactivateWatchRequest>, CancellationToken)` method:: deleted
`DeactivateWatchAsync(IDeactivateWatchRequest, CancellationToken)` method:: deleted
`Delete<T>(DocumentPath<T>, Func<DeleteDescriptor<T>, IDeleteRequest>)` method:: deleted
`Delete<TDocument>(DocumentPath<TDocument>, Func<DeleteDescriptor<TDocument>, IDeleteRequest>)` method:: added
`Delete(IDeleteRequest)` method::
Member type changed from `IDeleteResponse` to `DeleteResponse`.
`DeleteAlias(IDeleteAliasRequest)` method:: deleted
`DeleteAlias(Indices, Names, Func<DeleteAliasDescriptor, IDeleteAliasRequest>)` method:: deleted
`DeleteAliasAsync(IDeleteAliasRequest, CancellationToken)` method:: deleted
`DeleteAliasAsync(Indices, Names, Func<DeleteAliasDescriptor, IDeleteAliasRequest>, CancellationToken)` method:: deleted
`DeleteAsync<T>(DocumentPath<T>, Func<DeleteDescriptor<T>, IDeleteRequest>, CancellationToken)` method:: deleted
`DeleteAsync<TDocument>(DocumentPath<TDocument>, Func<DeleteDescriptor<TDocument>, IDeleteRequest>, CancellationToken)` method:: added
`DeleteAsync(IDeleteRequest, CancellationToken)` method::
Member type changed from `Task<IDeleteResponse>` to `Task<DeleteResponse>`.
`DeleteAutoFollowPattern(IDeleteAutoFollowPatternRequest)` method:: deleted
`DeleteAutoFollowPattern(Name, Func<DeleteAutoFollowPatternDescriptor, IDeleteAutoFollowPatternRequest>)` method:: deleted
`DeleteAutoFollowPatternAsync(IDeleteAutoFollowPatternRequest, CancellationToken)` method:: deleted
`DeleteAutoFollowPatternAsync(Name, Func<DeleteAutoFollowPatternDescriptor, IDeleteAutoFollowPatternRequest>, CancellationToken)` method:: deleted
`DeleteByQuery(IDeleteByQueryRequest)` method::
Member type changed from `IDeleteByQueryResponse` to `DeleteByQueryResponse`.
`DeleteByQuery<T>(Func<DeleteByQueryDescriptor<T>, IDeleteByQueryRequest>)` method:: deleted
`DeleteByQuery<TDocument>(Func<DeleteByQueryDescriptor<TDocument>, IDeleteByQueryRequest>)` method:: added
`DeleteByQueryAsync(IDeleteByQueryRequest, CancellationToken)` method::
Member type changed from `Task<IDeleteByQueryResponse>` to `Task<DeleteByQueryResponse>`.
`DeleteByQueryAsync<T>(Func<DeleteByQueryDescriptor<T>, IDeleteByQueryRequest>, CancellationToken)` method:: deleted
`DeleteByQueryAsync<TDocument>(Func<DeleteByQueryDescriptor<TDocument>, IDeleteByQueryRequest>, CancellationToken)` method:: added
`DeleteByQueryRethrottle(IDeleteByQueryRethrottleRequest)` method::
Member type changed from `IListTasksResponse` to `ListTasksResponse`.
`DeleteByQueryRethrottle(TaskId, Func<DeleteByQueryRethrottleDescriptor, IDeleteByQueryRethrottleRequest>)` method::
Member type changed from `IListTasksResponse` to `ListTasksResponse`.
`DeleteByQueryRethrottleAsync(IDeleteByQueryRethrottleRequest, CancellationToken)` method::
Member type changed from `Task<IListTasksResponse>` to `Task<ListTasksResponse>`.
`DeleteByQueryRethrottleAsync(TaskId, Func<DeleteByQueryRethrottleDescriptor, IDeleteByQueryRethrottleRequest>, CancellationToken)` method::
Member type changed from `Task<IListTasksResponse>` to `Task<ListTasksResponse>`.
`DeleteCalendar(Id, Func<DeleteCalendarDescriptor, IDeleteCalendarRequest>)` method:: deleted
`DeleteCalendar(IDeleteCalendarRequest)` method:: deleted
`DeleteCalendarAsync(Id, Func<DeleteCalendarDescriptor, IDeleteCalendarRequest>, CancellationToken)` method:: deleted
`DeleteCalendarAsync(IDeleteCalendarRequest, CancellationToken)` method:: deleted
`DeleteCalendarEvent(Id, Id, Func<DeleteCalendarEventDescriptor, IDeleteCalendarEventRequest>)` method:: deleted
`DeleteCalendarEvent(IDeleteCalendarEventRequest)` method:: deleted
`DeleteCalendarEventAsync(Id, Id, Func<DeleteCalendarEventDescriptor, IDeleteCalendarEventRequest>, CancellationToken)` method:: deleted
`DeleteCalendarEventAsync(IDeleteCalendarEventRequest, CancellationToken)` method:: deleted
`DeleteCalendarJob(Id, Id, Func<DeleteCalendarJobDescriptor, IDeleteCalendarJobRequest>)` method:: deleted
`DeleteCalendarJob(IDeleteCalendarJobRequest)` method:: deleted
`DeleteCalendarJobAsync(Id, Id, Func<DeleteCalendarJobDescriptor, IDeleteCalendarJobRequest>, CancellationToken)` method:: deleted
`DeleteCalendarJobAsync(IDeleteCalendarJobRequest, CancellationToken)` method:: deleted
`DeleteDatafeed(Id, Func<DeleteDatafeedDescriptor, IDeleteDatafeedRequest>)` method:: deleted
`DeleteDatafeed(IDeleteDatafeedRequest)` method:: deleted
`DeleteDatafeedAsync(Id, Func<DeleteDatafeedDescriptor, IDeleteDatafeedRequest>, CancellationToken)` method:: deleted
`DeleteDatafeedAsync(IDeleteDatafeedRequest, CancellationToken)` method:: deleted
`DeleteExpiredData(IDeleteExpiredDataRequest)` method:: deleted
`DeleteExpiredData(Func<DeleteExpiredDataDescriptor, IDeleteExpiredDataRequest>)` method:: deleted
`DeleteExpiredDataAsync(IDeleteExpiredDataRequest, CancellationToken)` method:: deleted
`DeleteExpiredDataAsync(Func<DeleteExpiredDataDescriptor, IDeleteExpiredDataRequest>, CancellationToken)` method:: deleted
`DeleteFilter(Id, Func<DeleteFilterDescriptor, IDeleteFilterRequest>)` method:: deleted
`DeleteFilter(IDeleteFilterRequest)` method:: deleted
`DeleteFilterAsync(Id, Func<DeleteFilterDescriptor, IDeleteFilterRequest>, CancellationToken)` method:: deleted
`DeleteFilterAsync(IDeleteFilterRequest, CancellationToken)` method:: deleted
`DeleteForecast(Id, ForecastIds, Func<DeleteForecastDescriptor, IDeleteForecastRequest>)` method:: deleted
`DeleteForecast(IDeleteForecastRequest)` method:: deleted
`DeleteForecastAsync(Id, ForecastIds, Func<DeleteForecastDescriptor, IDeleteForecastRequest>, CancellationToken)` method:: deleted
`DeleteForecastAsync(IDeleteForecastRequest, CancellationToken)` method:: deleted
`DeleteIndex(IDeleteIndexRequest)` method:: deleted
`DeleteIndex(Indices, Func<DeleteIndexDescriptor, IDeleteIndexRequest>)` method:: deleted
`DeleteIndexAsync(IDeleteIndexRequest, CancellationToken)` method:: deleted
`DeleteIndexAsync(Indices, Func<DeleteIndexDescriptor, IDeleteIndexRequest>, CancellationToken)` method:: deleted
`DeleteIndexTemplate(IDeleteIndexTemplateRequest)` method:: deleted
`DeleteIndexTemplate(Name, Func<DeleteIndexTemplateDescriptor, IDeleteIndexTemplateRequest>)` method:: deleted
`DeleteIndexTemplateAsync(IDeleteIndexTemplateRequest, CancellationToken)` method:: deleted
`DeleteIndexTemplateAsync(Name, Func<DeleteIndexTemplateDescriptor, IDeleteIndexTemplateRequest>, CancellationToken)` method:: deleted
`DeleteJob(Id, Func<DeleteJobDescriptor, IDeleteJobRequest>)` method:: deleted
`DeleteJob(IDeleteJobRequest)` method:: deleted
`DeleteJobAsync(Id, Func<DeleteJobDescriptor, IDeleteJobRequest>, CancellationToken)` method:: deleted
`DeleteJobAsync(IDeleteJobRequest, CancellationToken)` method:: deleted
`DeleteLicense(IDeleteLicenseRequest)` method:: deleted
`DeleteLicense(Func<DeleteLicenseDescriptor, IDeleteLicenseRequest>)` method:: deleted
`DeleteLicenseAsync(IDeleteLicenseRequest, CancellationToken)` method:: deleted
`DeleteLicenseAsync(Func<DeleteLicenseDescriptor, IDeleteLicenseRequest>, CancellationToken)` method:: deleted
`DeleteLifecycle(IDeleteLifecycleRequest)` method:: deleted
`DeleteLifecycle(PolicyId, Func<DeleteLifecycleDescriptor, IDeleteLifecycleRequest>)` method:: deleted
`DeleteLifecycleAsync(IDeleteLifecycleRequest, CancellationToken)` method:: deleted
`DeleteLifecycleAsync(PolicyId, Func<DeleteLifecycleDescriptor, IDeleteLifecycleRequest>, CancellationToken)` method:: deleted
`DeleteModelSnapshot(Id, Id, Func<DeleteModelSnapshotDescriptor, IDeleteModelSnapshotRequest>)` method:: deleted
`DeleteModelSnapshot(IDeleteModelSnapshotRequest)` method:: deleted
`DeleteModelSnapshotAsync(Id, Id, Func<DeleteModelSnapshotDescriptor, IDeleteModelSnapshotRequest>, CancellationToken)` method:: deleted
`DeleteModelSnapshotAsync(IDeleteModelSnapshotRequest, CancellationToken)` method:: deleted
`DeletePipeline(Id, Func<DeletePipelineDescriptor, IDeletePipelineRequest>)` method:: deleted
`DeletePipeline(IDeletePipelineRequest)` method:: deleted
`DeletePipelineAsync(Id, Func<DeletePipelineDescriptor, IDeletePipelineRequest>, CancellationToken)` method:: deleted
`DeletePipelineAsync(IDeletePipelineRequest, CancellationToken)` method:: deleted
`DeletePrivileges(IDeletePrivilegesRequest)` method:: deleted
`DeletePrivileges(Name, Name, Func<DeletePrivilegesDescriptor, IDeletePrivilegesRequest>)` method:: deleted
`DeletePrivilegesAsync(IDeletePrivilegesRequest, CancellationToken)` method:: deleted
`DeletePrivilegesAsync(Name, Name, Func<DeletePrivilegesDescriptor, IDeletePrivilegesRequest>, CancellationToken)` method:: deleted
`DeleteRepository(IDeleteRepositoryRequest)` method:: deleted
`DeleteRepository(Names, Func<DeleteRepositoryDescriptor, IDeleteRepositoryRequest>)` method:: deleted
`DeleteRepositoryAsync(IDeleteRepositoryRequest, CancellationToken)` method:: deleted
`DeleteRepositoryAsync(Names, Func<DeleteRepositoryDescriptor, IDeleteRepositoryRequest>, CancellationToken)` method:: deleted
`DeleteRole(IDeleteRoleRequest)` method:: deleted
`DeleteRole(Name, Func<DeleteRoleDescriptor, IDeleteRoleRequest>)` method:: deleted
`DeleteRoleAsync(IDeleteRoleRequest, CancellationToken)` method:: deleted
`DeleteRoleAsync(Name, Func<DeleteRoleDescriptor, IDeleteRoleRequest>, CancellationToken)` method:: deleted
`DeleteRoleMapping(IDeleteRoleMappingRequest)` method:: deleted
`DeleteRoleMapping(Name, Func<DeleteRoleMappingDescriptor, IDeleteRoleMappingRequest>)` method:: deleted
`DeleteRoleMappingAsync(IDeleteRoleMappingRequest, CancellationToken)` method:: deleted
`DeleteRoleMappingAsync(Name, Func<DeleteRoleMappingDescriptor, IDeleteRoleMappingRequest>, CancellationToken)` method:: deleted
`DeleteRollupJob(Id, Func<DeleteRollupJobDescriptor, IDeleteRollupJobRequest>)` method:: deleted
`DeleteRollupJob(IDeleteRollupJobRequest)` method:: deleted
`DeleteRollupJobAsync(Id, Func<DeleteRollupJobDescriptor, IDeleteRollupJobRequest>, CancellationToken)` method:: deleted
`DeleteRollupJobAsync(IDeleteRollupJobRequest, CancellationToken)` method:: deleted
`DeleteScript(Id, Func<DeleteScriptDescriptor, IDeleteScriptRequest>)` method::
Member type changed from `IDeleteScriptResponse` to `DeleteScriptResponse`.
`DeleteScript(IDeleteScriptRequest)` method::
Member type changed from `IDeleteScriptResponse` to `DeleteScriptResponse`.
`DeleteScriptAsync(Id, Func<DeleteScriptDescriptor, IDeleteScriptRequest>, CancellationToken)` method::
Member type changed from `Task<IDeleteScriptResponse>` to `Task<DeleteScriptResponse>`.
`DeleteScriptAsync(IDeleteScriptRequest, CancellationToken)` method::
Member type changed from `Task<IDeleteScriptResponse>` to `Task<DeleteScriptResponse>`.
`DeleteSnapshot(IDeleteSnapshotRequest)` method:: deleted
`DeleteSnapshot(Name, Name, Func<DeleteSnapshotDescriptor, IDeleteSnapshotRequest>)` method:: deleted
`DeleteSnapshotAsync(IDeleteSnapshotRequest, CancellationToken)` method:: deleted
`DeleteSnapshotAsync(Name, Name, Func<DeleteSnapshotDescriptor, IDeleteSnapshotRequest>, CancellationToken)` method:: deleted
`DeleteUser(IDeleteUserRequest)` method:: deleted
`DeleteUser(Name, Func<DeleteUserDescriptor, IDeleteUserRequest>)` method:: deleted
`DeleteUserAsync(IDeleteUserRequest, CancellationToken)` method:: deleted
`DeleteUserAsync(Name, Func<DeleteUserDescriptor, IDeleteUserRequest>, CancellationToken)` method:: deleted
`DeleteWatch(Id, Func<DeleteWatchDescriptor, IDeleteWatchRequest>)` method:: deleted
`DeleteWatch(IDeleteWatchRequest)` method:: deleted
`DeleteWatchAsync(Id, Func<DeleteWatchDescriptor, IDeleteWatchRequest>, CancellationToken)` method:: deleted
`DeleteWatchAsync(IDeleteWatchRequest, CancellationToken)` method:: deleted
`DeprecationInfo(IDeprecationInfoRequest)` method:: deleted
`DeprecationInfo(Func<DeprecationInfoDescriptor, IDeprecationInfoRequest>)` method:: deleted
`DeprecationInfoAsync(IDeprecationInfoRequest, CancellationToken)` method:: deleted
`DeprecationInfoAsync(Func<DeprecationInfoDescriptor, IDeprecationInfoRequest>, CancellationToken)` method:: deleted
`DisableUser(IDisableUserRequest)` method:: deleted
`DisableUser(Name, Func<DisableUserDescriptor, IDisableUserRequest>)` method:: deleted
`DisableUserAsync(IDisableUserRequest, CancellationToken)` method:: deleted
`DisableUserAsync(Name, Func<DisableUserDescriptor, IDisableUserRequest>, CancellationToken)` method:: deleted
`DocumentExists<T>(DocumentPath<T>, Func<DocumentExistsDescriptor<T>, IDocumentExistsRequest>)` method:: deleted
`DocumentExists<TDocument>(DocumentPath<TDocument>, Func<DocumentExistsDescriptor<TDocument>, IDocumentExistsRequest>)` method:: added
`DocumentExists(IDocumentExistsRequest)` method::
Member type changed from `IExistsResponse` to `ExistsResponse`.
`DocumentExistsAsync<T>(DocumentPath<T>, Func<DocumentExistsDescriptor<T>, IDocumentExistsRequest>, CancellationToken)` method:: deleted
`DocumentExistsAsync<TDocument>(DocumentPath<TDocument>, Func<DocumentExistsDescriptor<TDocument>, IDocumentExistsRequest>, CancellationToken)` method:: added
`DocumentExistsAsync(IDocumentExistsRequest, CancellationToken)` method::
Member type changed from `Task<IExistsResponse>` to `Task<ExistsResponse>`.
`EnableUser(IEnableUserRequest)` method:: deleted
`EnableUser(Name, Func<EnableUserDescriptor, IEnableUserRequest>)` method:: deleted
`EnableUserAsync(IEnableUserRequest, CancellationToken)` method:: deleted
`EnableUserAsync(Name, Func<EnableUserDescriptor, IEnableUserRequest>, CancellationToken)` method:: deleted
`ExecutePainlessScript<TResult>(IExecutePainlessScriptRequest)` method::
Member type changed from `IExecutePainlessScriptResponse<TResult>` to `ExecutePainlessScriptResponse<TResult>`.
`ExecutePainlessScript<TResult>(Func<ExecutePainlessScriptDescriptor, IExecutePainlessScriptRequest>)` method::
Member type changed from `IExecutePainlessScriptResponse<TResult>` to `ExecutePainlessScriptResponse<TResult>`.
`ExecutePainlessScriptAsync<TResult>(IExecutePainlessScriptRequest, CancellationToken)` method::
Member type changed from `Task<IExecutePainlessScriptResponse<TResult>>` to `Task<ExecutePainlessScriptResponse<TResult>>`.
`ExecutePainlessScriptAsync<TResult>(Func<ExecutePainlessScriptDescriptor, IExecutePainlessScriptRequest>, CancellationToken)` method::
Member type changed from `Task<IExecutePainlessScriptResponse<TResult>>` to `Task<ExecutePainlessScriptResponse<TResult>>`.
`ExecuteWatch(IExecuteWatchRequest)` method:: deleted
`ExecuteWatch(Func<ExecuteWatchDescriptor, IExecuteWatchRequest>)` method:: deleted
`ExecuteWatchAsync(IExecuteWatchRequest, CancellationToken)` method:: deleted
`ExecuteWatchAsync(Func<ExecuteWatchDescriptor, IExecuteWatchRequest>, CancellationToken)` method:: deleted
`Explain<TDocument>(DocumentPath<TDocument>, Func<ExplainDescriptor<TDocument>, IExplainRequest<TDocument>>)` method:: deleted
`Explain<TDocument>(DocumentPath<TDocument>, Func<ExplainDescriptor<TDocument>, IExplainRequest>)` method:: added
`Explain<TDocument>(IExplainRequest)` method:: added
`Explain<TDocument>(IExplainRequest<TDocument>)` method:: deleted
`ExplainAsync<TDocument>(DocumentPath<TDocument>, Func<ExplainDescriptor<TDocument>, IExplainRequest<TDocument>>, CancellationToken)` method:: deleted
`ExplainAsync<TDocument>(DocumentPath<TDocument>, Func<ExplainDescriptor<TDocument>, IExplainRequest>, CancellationToken)` method:: added
`ExplainAsync<TDocument>(IExplainRequest, CancellationToken)` method:: added
`ExplainAsync<TDocument>(IExplainRequest<TDocument>, CancellationToken)` method:: deleted
`ExplainLifecycle(IExplainLifecycleRequest)` method:: deleted
`ExplainLifecycle(IndexName, Func<ExplainLifecycleDescriptor, IExplainLifecycleRequest>)` method:: deleted
`ExplainLifecycleAsync(IExplainLifecycleRequest, CancellationToken)` method:: deleted
`ExplainLifecycleAsync(IndexName, Func<ExplainLifecycleDescriptor, IExplainLifecycleRequest>, CancellationToken)` method:: deleted
`FieldCapabilities(IFieldCapabilitiesRequest)` method::
Member type changed from `IFieldCapabilitiesResponse` to `FieldCapabilitiesResponse`.
`FieldCapabilities(Indices, Func<FieldCapabilitiesDescriptor, IFieldCapabilitiesRequest>)` method::
Member type changed from `IFieldCapabilitiesResponse` to `FieldCapabilitiesResponse`.
`FieldCapabilitiesAsync(IFieldCapabilitiesRequest, CancellationToken)` method::
Member type changed from `Task<IFieldCapabilitiesResponse>` to `Task<FieldCapabilitiesResponse>`.
`FieldCapabilitiesAsync(Indices, Func<FieldCapabilitiesDescriptor, IFieldCapabilitiesRequest>, CancellationToken)` method::
Member type changed from `Task<IFieldCapabilitiesResponse>` to `Task<FieldCapabilitiesResponse>`.
`Flush(IFlushRequest)` method:: deleted
`Flush(Indices, Func<FlushDescriptor, IFlushRequest>)` method:: deleted
`FlushAsync(IFlushRequest, CancellationToken)` method:: deleted
`FlushAsync(Indices, Func<FlushDescriptor, IFlushRequest>, CancellationToken)` method:: deleted
`FlushJob(Id, Func<FlushJobDescriptor, IFlushJobRequest>)` method:: deleted
`FlushJob(IFlushJobRequest)` method:: deleted
`FlushJobAsync(Id, Func<FlushJobDescriptor, IFlushJobRequest>, CancellationToken)` method:: deleted
`FlushJobAsync(IFlushJobRequest, CancellationToken)` method:: deleted
`FollowIndexStats(IFollowIndexStatsRequest)` method:: deleted
`FollowIndexStats(Indices, Func<FollowIndexStatsDescriptor, IFollowIndexStatsRequest>)` method:: deleted
`FollowIndexStatsAsync(IFollowIndexStatsRequest, CancellationToken)` method:: deleted
`FollowIndexStatsAsync(Indices, Func<FollowIndexStatsDescriptor, IFollowIndexStatsRequest>, CancellationToken)` method:: deleted
`ForceMerge(IForceMergeRequest)` method:: deleted
`ForceMerge(Indices, Func<ForceMergeDescriptor, IForceMergeRequest>)` method:: deleted
`ForceMergeAsync(IForceMergeRequest, CancellationToken)` method:: deleted
`ForceMergeAsync(Indices, Func<ForceMergeDescriptor, IForceMergeRequest>, CancellationToken)` method:: deleted
`ForecastJob(Id, Func<ForecastJobDescriptor, IForecastJobRequest>)` method:: deleted
`ForecastJob(IForecastJobRequest)` method:: deleted
`ForecastJobAsync(Id, Func<ForecastJobDescriptor, IForecastJobRequest>, CancellationToken)` method:: deleted
`ForecastJobAsync(IForecastJobRequest, CancellationToken)` method:: deleted
`Get<T>(DocumentPath<T>, Func<GetDescriptor<T>, IGetRequest>)` method:: deleted
`Get<TDocument>(DocumentPath<TDocument>, Func<GetDescriptor<TDocument>, IGetRequest>)` method:: added
`Get<TDocument>(IGetRequest)` method::
Member type changed from `IGetResponse<T>` to `GetResponse<TDocument>`.
`GetAlias(IGetAliasRequest)` method:: deleted
`GetAlias(Func<GetAliasDescriptor, IGetAliasRequest>)` method:: deleted
`GetAliasAsync(IGetAliasRequest, CancellationToken)` method:: deleted
`GetAliasAsync(Func<GetAliasDescriptor, IGetAliasRequest>, CancellationToken)` method:: deleted
`GetAnomalyRecords(Id, Func<GetAnomalyRecordsDescriptor, IGetAnomalyRecordsRequest>)` method:: deleted
`GetAnomalyRecords(IGetAnomalyRecordsRequest)` method:: deleted
`GetAnomalyRecordsAsync(Id, Func<GetAnomalyRecordsDescriptor, IGetAnomalyRecordsRequest>, CancellationToken)` method:: deleted
`GetAnomalyRecordsAsync(IGetAnomalyRecordsRequest, CancellationToken)` method:: deleted
`GetApiKey(IGetApiKeyRequest)` method:: deleted
`GetApiKey(Func<GetApiKeyDescriptor, IGetApiKeyRequest>)` method:: deleted
`GetApiKeyAsync(IGetApiKeyRequest, CancellationToken)` method:: deleted
`GetApiKeyAsync(Func<GetApiKeyDescriptor, IGetApiKeyRequest>, CancellationToken)` method:: deleted
`GetAsync<T>(DocumentPath<T>, Func<GetDescriptor<T>, IGetRequest>, CancellationToken)` method:: deleted
`GetAsync<TDocument>(DocumentPath<TDocument>, Func<GetDescriptor<TDocument>, IGetRequest>, CancellationToken)` method:: added
`GetAsync<TDocument>(IGetRequest, CancellationToken)` method::
Member type changed from `Task<IGetResponse<T>>` to `Task<GetResponse<TDocument>>`.
`GetAutoFollowPattern(IGetAutoFollowPatternRequest)` method:: deleted
`GetAutoFollowPattern(Func<GetAutoFollowPatternDescriptor, IGetAutoFollowPatternRequest>)` method:: deleted
`GetAutoFollowPatternAsync(IGetAutoFollowPatternRequest, CancellationToken)` method:: deleted
`GetAutoFollowPatternAsync(Func<GetAutoFollowPatternDescriptor, IGetAutoFollowPatternRequest>, CancellationToken)` method:: deleted
`GetBasicLicenseStatus(IGetBasicLicenseStatusRequest)` method:: deleted
`GetBasicLicenseStatus(Func<GetBasicLicenseStatusDescriptor, IGetBasicLicenseStatusRequest>)` method:: deleted
`GetBasicLicenseStatusAsync(IGetBasicLicenseStatusRequest, CancellationToken)` method:: deleted
`GetBasicLicenseStatusAsync(Func<GetBasicLicenseStatusDescriptor, IGetBasicLicenseStatusRequest>, CancellationToken)` method:: deleted
`GetBuckets(Id, Func<GetBucketsDescriptor, IGetBucketsRequest>)` method:: deleted
`GetBuckets(IGetBucketsRequest)` method:: deleted
`GetBucketsAsync(Id, Func<GetBucketsDescriptor, IGetBucketsRequest>, CancellationToken)` method:: deleted
`GetBucketsAsync(IGetBucketsRequest, CancellationToken)` method:: deleted
`GetCalendarEvents(Id, Func<GetCalendarEventsDescriptor, IGetCalendarEventsRequest>)` method:: deleted
`GetCalendarEvents(IGetCalendarEventsRequest)` method:: deleted
`GetCalendarEventsAsync(Id, Func<GetCalendarEventsDescriptor, IGetCalendarEventsRequest>, CancellationToken)` method:: deleted
`GetCalendarEventsAsync(IGetCalendarEventsRequest, CancellationToken)` method:: deleted
`GetCalendars(IGetCalendarsRequest)` method:: deleted
`GetCalendars(Func<GetCalendarsDescriptor, IGetCalendarsRequest>)` method:: deleted
`GetCalendarsAsync(IGetCalendarsRequest, CancellationToken)` method:: deleted
`GetCalendarsAsync(Func<GetCalendarsDescriptor, IGetCalendarsRequest>, CancellationToken)` method:: deleted
`GetCategories(Id, Func<GetCategoriesDescriptor, IGetCategoriesRequest>)` method:: deleted
`GetCategories(IGetCategoriesRequest)` method:: deleted
`GetCategoriesAsync(Id, Func<GetCategoriesDescriptor, IGetCategoriesRequest>, CancellationToken)` method:: deleted
`GetCategoriesAsync(IGetCategoriesRequest, CancellationToken)` method:: deleted
`GetCertificates(IGetCertificatesRequest)` method:: deleted
`GetCertificates(Func<GetCertificatesDescriptor, IGetCertificatesRequest>)` method:: deleted
`GetCertificatesAsync(IGetCertificatesRequest, CancellationToken)` method:: deleted
`GetCertificatesAsync(Func<GetCertificatesDescriptor, IGetCertificatesRequest>, CancellationToken)` method:: deleted
`GetDatafeeds(IGetDatafeedsRequest)` method:: deleted
`GetDatafeeds(Func<GetDatafeedsDescriptor, IGetDatafeedsRequest>)` method:: deleted
`GetDatafeedsAsync(IGetDatafeedsRequest, CancellationToken)` method:: deleted
`GetDatafeedsAsync(Func<GetDatafeedsDescriptor, IGetDatafeedsRequest>, CancellationToken)` method:: deleted
`GetDatafeedStats(IGetDatafeedStatsRequest)` method:: deleted
`GetDatafeedStats(Func<GetDatafeedStatsDescriptor, IGetDatafeedStatsRequest>)` method:: deleted
`GetDatafeedStatsAsync(IGetDatafeedStatsRequest, CancellationToken)` method:: deleted
`GetDatafeedStatsAsync(Func<GetDatafeedStatsDescriptor, IGetDatafeedStatsRequest>, CancellationToken)` method:: deleted
`GetFieldMapping<T>(Fields, Func<GetFieldMappingDescriptor<T>, IGetFieldMappingRequest>)` method:: deleted
`GetFieldMapping(IGetFieldMappingRequest)` method:: deleted
`GetFieldMappingAsync<T>(Fields, Func<GetFieldMappingDescriptor<T>, IGetFieldMappingRequest>, CancellationToken)` method:: deleted
`GetFieldMappingAsync(IGetFieldMappingRequest, CancellationToken)` method:: deleted
`GetFilters(IGetFiltersRequest)` method:: deleted
`GetFilters(Func<GetFiltersDescriptor, IGetFiltersRequest>)` method:: deleted
`GetFiltersAsync(IGetFiltersRequest, CancellationToken)` method:: deleted
`GetFiltersAsync(Func<GetFiltersDescriptor, IGetFiltersRequest>, CancellationToken)` method:: deleted
`GetIlmStatus(IGetIlmStatusRequest)` method:: deleted
`GetIlmStatus(Func<GetIlmStatusDescriptor, IGetIlmStatusRequest>)` method:: deleted
`GetIlmStatusAsync(IGetIlmStatusRequest, CancellationToken)` method:: deleted
`GetIlmStatusAsync(Func<GetIlmStatusDescriptor, IGetIlmStatusRequest>, CancellationToken)` method:: deleted
`GetIndex(IGetIndexRequest)` method:: deleted
`GetIndex(Indices, Func<GetIndexDescriptor, IGetIndexRequest>)` method:: deleted
`GetIndexAsync(IGetIndexRequest, CancellationToken)` method:: deleted
`GetIndexAsync(Indices, Func<GetIndexDescriptor, IGetIndexRequest>, CancellationToken)` method:: deleted
`GetIndexSettings(IGetIndexSettingsRequest)` method:: deleted
`GetIndexSettings(Func<GetIndexSettingsDescriptor, IGetIndexSettingsRequest>)` method:: deleted
`GetIndexSettingsAsync(IGetIndexSettingsRequest, CancellationToken)` method:: deleted
`GetIndexSettingsAsync(Func<GetIndexSettingsDescriptor, IGetIndexSettingsRequest>, CancellationToken)` method:: deleted
`GetIndexTemplate(IGetIndexTemplateRequest)` method:: deleted
`GetIndexTemplate(Func<GetIndexTemplateDescriptor, IGetIndexTemplateRequest>)` method:: deleted
`GetIndexTemplateAsync(IGetIndexTemplateRequest, CancellationToken)` method:: deleted
`GetIndexTemplateAsync(Func<GetIndexTemplateDescriptor, IGetIndexTemplateRequest>, CancellationToken)` method:: deleted
`GetInfluencers(Id, Func<GetInfluencersDescriptor, IGetInfluencersRequest>)` method:: deleted
`GetInfluencers(IGetInfluencersRequest)` method:: deleted
`GetInfluencersAsync(Id, Func<GetInfluencersDescriptor, IGetInfluencersRequest>, CancellationToken)` method:: deleted
`GetInfluencersAsync(IGetInfluencersRequest, CancellationToken)` method:: deleted
`GetJobs(IGetJobsRequest)` method:: deleted
`GetJobs(Func<GetJobsDescriptor, IGetJobsRequest>)` method:: deleted
`GetJobsAsync(IGetJobsRequest, CancellationToken)` method:: deleted
`GetJobsAsync(Func<GetJobsDescriptor, IGetJobsRequest>, CancellationToken)` method:: deleted
`GetJobStats(IGetJobStatsRequest)` method:: deleted
`GetJobStats(Func<GetJobStatsDescriptor, IGetJobStatsRequest>)` method:: deleted
`GetJobStatsAsync(IGetJobStatsRequest, CancellationToken)` method:: deleted
`GetJobStatsAsync(Func<GetJobStatsDescriptor, IGetJobStatsRequest>, CancellationToken)` method:: deleted
`GetLicense(IGetLicenseRequest)` method:: deleted
`GetLicense(Func<GetLicenseDescriptor, IGetLicenseRequest>)` method:: deleted
`GetLicenseAsync(IGetLicenseRequest, CancellationToken)` method:: deleted
`GetLicenseAsync(Func<GetLicenseDescriptor, IGetLicenseRequest>, CancellationToken)` method:: deleted
`GetLifecycle(IGetLifecycleRequest)` method:: deleted
`GetLifecycle(Func<GetLifecycleDescriptor, IGetLifecycleRequest>)` method:: deleted
`GetLifecycleAsync(IGetLifecycleRequest, CancellationToken)` method:: deleted
`GetLifecycleAsync(Func<GetLifecycleDescriptor, IGetLifecycleRequest>, CancellationToken)` method:: deleted
`GetMapping(IGetMappingRequest)` method:: deleted
`GetMapping<T>(Func<GetMappingDescriptor<T>, IGetMappingRequest>)` method:: deleted
`GetMappingAsync(IGetMappingRequest, CancellationToken)` method:: deleted
`GetMappingAsync<T>(Func<GetMappingDescriptor<T>, IGetMappingRequest>, CancellationToken)` method:: deleted
`GetModelSnapshots(Id, Func<GetModelSnapshotsDescriptor, IGetModelSnapshotsRequest>)` method:: deleted
`GetModelSnapshots(IGetModelSnapshotsRequest)` method:: deleted
`GetModelSnapshotsAsync(Id, Func<GetModelSnapshotsDescriptor, IGetModelSnapshotsRequest>, CancellationToken)` method:: deleted
`GetModelSnapshotsAsync(IGetModelSnapshotsRequest, CancellationToken)` method:: deleted
`GetOverallBuckets(Id, Func<GetOverallBucketsDescriptor, IGetOverallBucketsRequest>)` method:: deleted
`GetOverallBuckets(IGetOverallBucketsRequest)` method:: deleted
`GetOverallBucketsAsync(Id, Func<GetOverallBucketsDescriptor, IGetOverallBucketsRequest>, CancellationToken)` method:: deleted
`GetOverallBucketsAsync(IGetOverallBucketsRequest, CancellationToken)` method:: deleted
`GetPipeline(IGetPipelineRequest)` method:: deleted
`GetPipeline(Func<GetPipelineDescriptor, IGetPipelineRequest>)` method:: deleted
`GetPipelineAsync(IGetPipelineRequest, CancellationToken)` method:: deleted
`GetPipelineAsync(Func<GetPipelineDescriptor, IGetPipelineRequest>, CancellationToken)` method:: deleted
`GetPrivileges(IGetPrivilegesRequest)` method:: deleted
`GetPrivileges(Func<GetPrivilegesDescriptor, IGetPrivilegesRequest>)` method:: deleted
`GetPrivilegesAsync(IGetPrivilegesRequest, CancellationToken)` method:: deleted
`GetPrivilegesAsync(Func<GetPrivilegesDescriptor, IGetPrivilegesRequest>, CancellationToken)` method:: deleted
`GetRepository(IGetRepositoryRequest)` method:: deleted
`GetRepository(Func<GetRepositoryDescriptor, IGetRepositoryRequest>)` method:: deleted
`GetRepositoryAsync(IGetRepositoryRequest, CancellationToken)` method:: deleted
`GetRepositoryAsync(Func<GetRepositoryDescriptor, IGetRepositoryRequest>, CancellationToken)` method:: deleted
`GetRole(IGetRoleRequest)` method:: deleted
`GetRole(Func<GetRoleDescriptor, IGetRoleRequest>)` method:: deleted
`GetRoleAsync(IGetRoleRequest, CancellationToken)` method:: deleted
`GetRoleAsync(Func<GetRoleDescriptor, IGetRoleRequest>, CancellationToken)` method:: deleted
`GetRoleMapping(IGetRoleMappingRequest)` method:: deleted
`GetRoleMapping(Func<GetRoleMappingDescriptor, IGetRoleMappingRequest>)` method:: deleted
`GetRoleMappingAsync(IGetRoleMappingRequest, CancellationToken)` method:: deleted
`GetRoleMappingAsync(Func<GetRoleMappingDescriptor, IGetRoleMappingRequest>, CancellationToken)` method:: deleted
`GetRollupCapabilities(IGetRollupCapabilitiesRequest)` method:: deleted
`GetRollupCapabilities(Func<GetRollupCapabilitiesDescriptor, IGetRollupCapabilitiesRequest>)` method:: deleted
`GetRollupCapabilitiesAsync(IGetRollupCapabilitiesRequest, CancellationToken)` method:: deleted
`GetRollupCapabilitiesAsync(Func<GetRollupCapabilitiesDescriptor, IGetRollupCapabilitiesRequest>, CancellationToken)` method:: deleted
`GetRollupIndexCapabilities(IGetRollupIndexCapabilitiesRequest)` method:: deleted
`GetRollupIndexCapabilities(IndexName, Func<GetRollupIndexCapabilitiesDescriptor, IGetRollupIndexCapabilitiesRequest>)` method:: deleted
`GetRollupIndexCapabilitiesAsync(IGetRollupIndexCapabilitiesRequest, CancellationToken)` method:: deleted
`GetRollupIndexCapabilitiesAsync(IndexName, Func<GetRollupIndexCapabilitiesDescriptor, IGetRollupIndexCapabilitiesRequest>, CancellationToken)` method:: deleted
`GetRollupJob(IGetRollupJobRequest)` method:: deleted
`GetRollupJob(Func<GetRollupJobDescriptor, IGetRollupJobRequest>)` method:: deleted
`GetRollupJobAsync(IGetRollupJobRequest, CancellationToken)` method:: deleted
`GetRollupJobAsync(Func<GetRollupJobDescriptor, IGetRollupJobRequest>, CancellationToken)` method:: deleted
`GetScript(Id, Func<GetScriptDescriptor, IGetScriptRequest>)` method::
Member type changed from `IGetScriptResponse` to `GetScriptResponse`.
`GetScript(IGetScriptRequest)` method::
Member type changed from `IGetScriptResponse` to `GetScriptResponse`.
`GetScriptAsync(Id, Func<GetScriptDescriptor, IGetScriptRequest>, CancellationToken)` method::
Member type changed from `Task<IGetScriptResponse>` to `Task<GetScriptResponse>`.
`GetScriptAsync(IGetScriptRequest, CancellationToken)` method::
Member type changed from `Task<IGetScriptResponse>` to `Task<GetScriptResponse>`.
`GetSnapshot(IGetSnapshotRequest)` method:: deleted
`GetSnapshot(Name, Names, Func<GetSnapshotDescriptor, IGetSnapshotRequest>)` method:: deleted
`GetSnapshotAsync(IGetSnapshotRequest, CancellationToken)` method:: deleted
`GetSnapshotAsync(Name, Names, Func<GetSnapshotDescriptor, IGetSnapshotRequest>, CancellationToken)` method:: deleted
`GetTask(IGetTaskRequest)` method:: deleted
`GetTask(TaskId, Func<GetTaskDescriptor, IGetTaskRequest>)` method:: deleted
`GetTaskAsync(IGetTaskRequest, CancellationToken)` method:: deleted
`GetTaskAsync(TaskId, Func<GetTaskDescriptor, IGetTaskRequest>, CancellationToken)` method:: deleted
`GetTrialLicenseStatus(IGetTrialLicenseStatusRequest)` method:: deleted
`GetTrialLicenseStatus(Func<GetTrialLicenseStatusDescriptor, IGetTrialLicenseStatusRequest>)` method:: deleted
`GetTrialLicenseStatusAsync(IGetTrialLicenseStatusRequest, CancellationToken)` method:: deleted
`GetTrialLicenseStatusAsync(Func<GetTrialLicenseStatusDescriptor, IGetTrialLicenseStatusRequest>, CancellationToken)` method:: deleted
`GetUser(IGetUserRequest)` method:: deleted
`GetUser(Func<GetUserDescriptor, IGetUserRequest>)` method:: deleted
`GetUserAccessToken(IGetUserAccessTokenRequest)` method:: deleted
`GetUserAccessToken(String, String, Func<GetUserAccessTokenDescriptor, IGetUserAccessTokenRequest>)` method:: deleted
`GetUserAccessTokenAsync(IGetUserAccessTokenRequest, CancellationToken)` method:: deleted
`GetUserAccessTokenAsync(String, String, Func<GetUserAccessTokenDescriptor, IGetUserAccessTokenRequest>, CancellationToken)` method:: deleted
`GetUserAsync(IGetUserRequest, CancellationToken)` method:: deleted
`GetUserAsync(Func<GetUserDescriptor, IGetUserRequest>, CancellationToken)` method:: deleted
`GetUserPrivileges(IGetUserPrivilegesRequest)` method:: deleted
`GetUserPrivileges(Func<GetUserPrivilegesDescriptor, IGetUserPrivilegesRequest>)` method:: deleted
`GetUserPrivilegesAsync(IGetUserPrivilegesRequest, CancellationToken)` method:: deleted
`GetUserPrivilegesAsync(Func<GetUserPrivilegesDescriptor, IGetUserPrivilegesRequest>, CancellationToken)` method:: deleted
`GetWatch(Id, Func<GetWatchDescriptor, IGetWatchRequest>)` method:: deleted
`GetWatch(IGetWatchRequest)` method:: deleted
`GetWatchAsync(Id, Func<GetWatchDescriptor, IGetWatchRequest>, CancellationToken)` method:: deleted
`GetWatchAsync(IGetWatchRequest, CancellationToken)` method:: deleted
`GraphExplore(IGraphExploreRequest)` method:: deleted
`GraphExplore<T>(Func<GraphExploreDescriptor<T>, IGraphExploreRequest>)` method:: deleted
`GraphExploreAsync(IGraphExploreRequest, CancellationToken)` method:: deleted
`GraphExploreAsync<T>(Func<GraphExploreDescriptor<T>, IGraphExploreRequest>, CancellationToken)` method:: deleted
`GrokProcessorPatterns(IGrokProcessorPatternsRequest)` method:: deleted
`GrokProcessorPatterns(Func<GrokProcessorPatternsDescriptor, IGrokProcessorPatternsRequest>)` method:: deleted
`GrokProcessorPatternsAsync(IGrokProcessorPatternsRequest, CancellationToken)` method:: deleted
`GrokProcessorPatternsAsync(Func<GrokProcessorPatternsDescriptor, IGrokProcessorPatternsRequest>, CancellationToken)` method:: deleted
`HasPrivileges(IHasPrivilegesRequest)` method:: deleted
`HasPrivileges(Func<HasPrivilegesDescriptor, IHasPrivilegesRequest>)` method:: deleted
`HasPrivilegesAsync(IHasPrivilegesRequest, CancellationToken)` method:: deleted
`HasPrivilegesAsync(Func<HasPrivilegesDescriptor, IHasPrivilegesRequest>, CancellationToken)` method:: deleted
`Index<T>(IIndexRequest<T>)` method:: deleted
`Index<TDocument>(IIndexRequest<TDocument>)` method:: added
`Index<T>(T, Func<IndexDescriptor<T>, IIndexRequest<T>>)` method:: deleted
`Index<TDocument>(TDocument, Func<IndexDescriptor<TDocument>, IIndexRequest<TDocument>>)` method:: added
`IndexAsync<T>(IIndexRequest<T>, CancellationToken)` method:: deleted
`IndexAsync<TDocument>(IIndexRequest<TDocument>, CancellationToken)` method:: added
`IndexAsync<T>(T, Func<IndexDescriptor<T>, IIndexRequest<T>>, CancellationToken)` method:: deleted
`IndexAsync<TDocument>(TDocument, Func<IndexDescriptor<TDocument>, IIndexRequest<TDocument>>, CancellationToken)` method:: added
`IndexDocument<T>(T)` method:: deleted
`IndexDocument<TDocument>(TDocument)` method:: added
`IndexDocumentAsync<T>(T, CancellationToken)` method::
Member type changed from `Task<IIndexResponse>` to `Task<IndexResponse>`.
`IndexExists(IIndexExistsRequest)` method:: deleted
`IndexExists(Indices, Func<IndexExistsDescriptor, IIndexExistsRequest>)` method:: deleted
`IndexExistsAsync(IIndexExistsRequest, CancellationToken)` method:: deleted
`IndexExistsAsync(Indices, Func<IndexExistsDescriptor, IIndexExistsRequest>, CancellationToken)` method:: deleted
`IndexTemplateExists(IIndexTemplateExistsRequest)` method:: deleted
`IndexTemplateExists(Name, Func<IndexTemplateExistsDescriptor, IIndexTemplateExistsRequest>)` method:: deleted
`IndexTemplateExistsAsync(IIndexTemplateExistsRequest, CancellationToken)` method:: deleted
`IndexTemplateExistsAsync(Name, Func<IndexTemplateExistsDescriptor, IIndexTemplateExistsRequest>, CancellationToken)` method:: deleted
`IndicesShardStores(IIndicesShardStoresRequest)` method:: deleted
`IndicesShardStores(Func<IndicesShardStoresDescriptor, IIndicesShardStoresRequest>)` method:: deleted
`IndicesShardStoresAsync(IIndicesShardStoresRequest, CancellationToken)` method:: deleted
`IndicesShardStoresAsync(Func<IndicesShardStoresDescriptor, IIndicesShardStoresRequest>, CancellationToken)` method:: deleted
`IndicesStats(IIndicesStatsRequest)` method:: deleted
`IndicesStats(Indices, Func<IndicesStatsDescriptor, IIndicesStatsRequest>)` method:: deleted
`IndicesStatsAsync(IIndicesStatsRequest, CancellationToken)` method:: deleted
`IndicesStatsAsync(Indices, Func<IndicesStatsDescriptor, IIndicesStatsRequest>, CancellationToken)` method:: deleted
`InvalidateApiKey(IInvalidateApiKeyRequest)` method:: deleted
`InvalidateApiKey(Func<InvalidateApiKeyDescriptor, IInvalidateApiKeyRequest>)` method:: deleted
`InvalidateApiKeyAsync(IInvalidateApiKeyRequest, CancellationToken)` method:: deleted
`InvalidateApiKeyAsync(Func<InvalidateApiKeyDescriptor, IInvalidateApiKeyRequest>, CancellationToken)` method:: deleted
`InvalidateUserAccessToken(IInvalidateUserAccessTokenRequest)` method:: deleted
`InvalidateUserAccessToken(String, Func<InvalidateUserAccessTokenDescriptor, IInvalidateUserAccessTokenRequest>)` method:: deleted
`InvalidateUserAccessTokenAsync(IInvalidateUserAccessTokenRequest, CancellationToken)` method:: deleted
`InvalidateUserAccessTokenAsync(String, Func<InvalidateUserAccessTokenDescriptor, IInvalidateUserAccessTokenRequest>, CancellationToken)` method:: deleted
`ListTasks(IListTasksRequest)` method:: deleted
`ListTasks(Func<ListTasksDescriptor, IListTasksRequest>)` method:: deleted
`ListTasksAsync(IListTasksRequest, CancellationToken)` method:: deleted
`ListTasksAsync(Func<ListTasksDescriptor, IListTasksRequest>, CancellationToken)` method:: deleted
`MachineLearningInfo(IMachineLearningInfoRequest)` method:: deleted
`MachineLearningInfo(Func<MachineLearningInfoDescriptor, IMachineLearningInfoRequest>)` method:: deleted
`MachineLearningInfoAsync(IMachineLearningInfoRequest, CancellationToken)` method:: deleted
`MachineLearningInfoAsync(Func<MachineLearningInfoDescriptor, IMachineLearningInfoRequest>, CancellationToken)` method:: deleted
`Map(IPutMappingRequest)` method::
Member type changed from `IPutMappingResponse` to `PutMappingResponse`.
`Map<T>(Func<PutMappingDescriptor<T>, IPutMappingRequest>)` method::
Member type changed from `IPutMappingResponse` to `PutMappingResponse`.
`MapAsync(IPutMappingRequest, CancellationToken)` method::
Member type changed from `Task<IPutMappingResponse>` to `Task<PutMappingResponse>`.
`MapAsync<T>(Func<PutMappingDescriptor<T>, IPutMappingRequest>, CancellationToken)` method::
Member type changed from `Task<IPutMappingResponse>` to `Task<PutMappingResponse>`.
`MigrationAssistance(IMigrationAssistanceRequest)` method:: deleted
`MigrationAssistance(Func<MigrationAssistanceDescriptor, IMigrationAssistanceRequest>)` method:: deleted
`MigrationAssistanceAsync(IMigrationAssistanceRequest, CancellationToken)` method:: deleted
`MigrationAssistanceAsync(Func<MigrationAssistanceDescriptor, IMigrationAssistanceRequest>, CancellationToken)` method:: deleted
`MigrationUpgrade(IMigrationUpgradeRequest)` method:: deleted
`MigrationUpgrade(IndexName, Func<MigrationUpgradeDescriptor, IMigrationUpgradeRequest>)` method:: deleted
`MigrationUpgradeAsync(IMigrationUpgradeRequest, CancellationToken)` method:: deleted
`MigrationUpgradeAsync(IndexName, Func<MigrationUpgradeDescriptor, IMigrationUpgradeRequest>, CancellationToken)` method:: deleted
`MoveToStep(IMoveToStepRequest)` method:: deleted
`MoveToStep(IndexName, Func<MoveToStepDescriptor, IMoveToStepRequest>)` method:: deleted
`MoveToStepAsync(IMoveToStepRequest, CancellationToken)` method:: deleted
`MoveToStepAsync(IndexName, Func<MoveToStepDescriptor, IMoveToStepRequest>, CancellationToken)` method:: deleted
`MultiGet(IMultiGetRequest)` method::
Member type changed from `IMultiGetResponse` to `MultiGetResponse`.
`MultiGet(Func<MultiGetDescriptor, IMultiGetRequest>)` method::
Member type changed from `IMultiGetResponse` to `MultiGetResponse`.
`MultiGetAsync(IMultiGetRequest, CancellationToken)` method::
Member type changed from `Task<IMultiGetResponse>` to `Task<MultiGetResponse>`.
`MultiGetAsync(Func<MultiGetDescriptor, IMultiGetRequest>, CancellationToken)` method::
Member type changed from `Task<IMultiGetResponse>` to `Task<MultiGetResponse>`.
`MultiSearch(IMultiSearchRequest)` method::
Member type changed from `IMultiSearchResponse` to `MultiSearchResponse`.
`MultiSearch(Indices, Func<MultiSearchDescriptor, IMultiSearchRequest>)` method:: added
`MultiSearch(Func<MultiSearchDescriptor, IMultiSearchRequest>)` method:: deleted
`MultiSearchAsync(IMultiSearchRequest, CancellationToken)` method::
Member type changed from `Task<IMultiSearchResponse>` to `Task<MultiSearchResponse>`.
`MultiSearchAsync(Indices, Func<MultiSearchDescriptor, IMultiSearchRequest>, CancellationToken)` method:: added
`MultiSearchAsync(Func<MultiSearchDescriptor, IMultiSearchRequest>, CancellationToken)` method:: deleted
`MultiSearchTemplate(IMultiSearchTemplateRequest)` method::
Member type changed from `IMultiSearchResponse` to `MultiSearchResponse`.
`MultiSearchTemplate(Indices, Func<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest>)` method:: added
`MultiSearchTemplate(Func<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest>)` method:: deleted
`MultiSearchTemplateAsync(IMultiSearchTemplateRequest, CancellationToken)` method::
Member type changed from `Task<IMultiSearchResponse>` to `Task<MultiSearchResponse>`.
`MultiSearchTemplateAsync(Indices, Func<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest>, CancellationToken)` method:: added
`MultiSearchTemplateAsync(Func<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest>, CancellationToken)` method:: deleted
`MultiTermVectors(IMultiTermVectorsRequest)` method::
Member type changed from `IMultiTermVectorsResponse` to `MultiTermVectorsResponse`.
`MultiTermVectors(Func<MultiTermVectorsDescriptor, IMultiTermVectorsRequest>)` method::
Member type changed from `IMultiTermVectorsResponse` to `MultiTermVectorsResponse`.
`MultiTermVectorsAsync(IMultiTermVectorsRequest, CancellationToken)` method::
Member type changed from `Task<IMultiTermVectorsResponse>` to `Task<MultiTermVectorsResponse>`.
`MultiTermVectorsAsync(Func<MultiTermVectorsDescriptor, IMultiTermVectorsRequest>, CancellationToken)` method::
Member type changed from `Task<IMultiTermVectorsResponse>` to `Task<MultiTermVectorsResponse>`.
`NodesHotThreads(INodesHotThreadsRequest)` method:: deleted
`NodesHotThreads(Func<NodesHotThreadsDescriptor, INodesHotThreadsRequest>)` method:: deleted
`NodesHotThreadsAsync(INodesHotThreadsRequest, CancellationToken)` method:: deleted
`NodesHotThreadsAsync(Func<NodesHotThreadsDescriptor, INodesHotThreadsRequest>, CancellationToken)` method:: deleted
`NodesInfo(INodesInfoRequest)` method:: deleted
`NodesInfo(Func<NodesInfoDescriptor, INodesInfoRequest>)` method:: deleted
`NodesInfoAsync(INodesInfoRequest, CancellationToken)` method:: deleted
`NodesInfoAsync(Func<NodesInfoDescriptor, INodesInfoRequest>, CancellationToken)` method:: deleted
`NodesStats(INodesStatsRequest)` method:: deleted
`NodesStats(Func<NodesStatsDescriptor, INodesStatsRequest>)` method:: deleted
`NodesStatsAsync(INodesStatsRequest, CancellationToken)` method:: deleted
`NodesStatsAsync(Func<NodesStatsDescriptor, INodesStatsRequest>, CancellationToken)` method:: deleted
`NodesUsage(INodesUsageRequest)` method:: deleted
`NodesUsage(Func<NodesUsageDescriptor, INodesUsageRequest>)` method:: deleted
`NodesUsageAsync(INodesUsageRequest, CancellationToken)` method:: deleted
`NodesUsageAsync(Func<NodesUsageDescriptor, INodesUsageRequest>, CancellationToken)` method:: deleted
`OpenIndex(Indices, Func<OpenIndexDescriptor, IOpenIndexRequest>)` method:: deleted
`OpenIndex(IOpenIndexRequest)` method:: deleted
`OpenIndexAsync(Indices, Func<OpenIndexDescriptor, IOpenIndexRequest>, CancellationToken)` method:: deleted
`OpenIndexAsync(IOpenIndexRequest, CancellationToken)` method:: deleted
`OpenJob(Id, Func<OpenJobDescriptor, IOpenJobRequest>)` method:: deleted
`OpenJob(IOpenJobRequest)` method:: deleted
`OpenJobAsync(Id, Func<OpenJobDescriptor, IOpenJobRequest>, CancellationToken)` method:: deleted
`OpenJobAsync(IOpenJobRequest, CancellationToken)` method:: deleted
`PauseFollowIndex(IndexName, Func<PauseFollowIndexDescriptor, IPauseFollowIndexRequest>)` method:: deleted
`PauseFollowIndex(IPauseFollowIndexRequest)` method:: deleted
`PauseFollowIndexAsync(IndexName, Func<PauseFollowIndexDescriptor, IPauseFollowIndexRequest>, CancellationToken)` method:: deleted
`PauseFollowIndexAsync(IPauseFollowIndexRequest, CancellationToken)` method:: deleted
`Ping(IPingRequest)` method::
Member type changed from `IPingResponse` to `PingResponse`.
`Ping(Func<PingDescriptor, IPingRequest>)` method::
Member type changed from `IPingResponse` to `PingResponse`.
`PingAsync(IPingRequest, CancellationToken)` method::
Member type changed from `Task<IPingResponse>` to `Task<PingResponse>`.
`PingAsync(Func<PingDescriptor, IPingRequest>, CancellationToken)` method::
Member type changed from `Task<IPingResponse>` to `Task<PingResponse>`.
`PostCalendarEvents(Id, Func<PostCalendarEventsDescriptor, IPostCalendarEventsRequest>)` method:: deleted
`PostCalendarEvents(IPostCalendarEventsRequest)` method:: deleted
`PostCalendarEventsAsync(Id, Func<PostCalendarEventsDescriptor, IPostCalendarEventsRequest>, CancellationToken)` method:: deleted
`PostCalendarEventsAsync(IPostCalendarEventsRequest, CancellationToken)` method:: deleted
`PostJobData(Id, Func<PostJobDataDescriptor, IPostJobDataRequest>)` method:: deleted
`PostJobData(IPostJobDataRequest)` method:: deleted
`PostJobDataAsync(Id, Func<PostJobDataDescriptor, IPostJobDataRequest>, CancellationToken)` method:: deleted
`PostJobDataAsync(IPostJobDataRequest, CancellationToken)` method:: deleted
`PostLicense(IPostLicenseRequest)` method:: deleted
`PostLicense(Func<PostLicenseDescriptor, IPostLicenseRequest>)` method:: deleted
`PostLicenseAsync(IPostLicenseRequest, CancellationToken)` method:: deleted
`PostLicenseAsync(Func<PostLicenseDescriptor, IPostLicenseRequest>, CancellationToken)` method:: deleted
`PreviewDatafeed<T>(Id, Func<PreviewDatafeedDescriptor, IPreviewDatafeedRequest>)` method:: deleted
`PreviewDatafeed<T>(IPreviewDatafeedRequest)` method:: deleted
`PreviewDatafeedAsync<T>(Id, Func<PreviewDatafeedDescriptor, IPreviewDatafeedRequest>, CancellationToken)` method:: deleted
`PreviewDatafeedAsync<T>(IPreviewDatafeedRequest, CancellationToken)` method:: deleted
`PutAlias(Indices, Name, Func<PutAliasDescriptor, IPutAliasRequest>)` method:: deleted
`PutAlias(IPutAliasRequest)` method:: deleted
`PutAliasAsync(Indices, Name, Func<PutAliasDescriptor, IPutAliasRequest>, CancellationToken)` method:: deleted
`PutAliasAsync(IPutAliasRequest, CancellationToken)` method:: deleted
`PutCalendar(Id, Func<PutCalendarDescriptor, IPutCalendarRequest>)` method:: deleted
`PutCalendar(IPutCalendarRequest)` method:: deleted
`PutCalendarAsync(Id, Func<PutCalendarDescriptor, IPutCalendarRequest>, CancellationToken)` method:: deleted
`PutCalendarAsync(IPutCalendarRequest, CancellationToken)` method:: deleted
`PutCalendarJob(Id, Id, Func<PutCalendarJobDescriptor, IPutCalendarJobRequest>)` method:: deleted
`PutCalendarJob(IPutCalendarJobRequest)` method:: deleted
`PutCalendarJobAsync(Id, Id, Func<PutCalendarJobDescriptor, IPutCalendarJobRequest>, CancellationToken)` method:: deleted
`PutCalendarJobAsync(IPutCalendarJobRequest, CancellationToken)` method:: deleted
`PutDatafeed<T>(Id, Func<PutDatafeedDescriptor<T>, IPutDatafeedRequest>)` method:: deleted
`PutDatafeed(IPutDatafeedRequest)` method:: deleted
`PutDatafeedAsync<T>(Id, Func<PutDatafeedDescriptor<T>, IPutDatafeedRequest>, CancellationToken)` method:: deleted
`PutDatafeedAsync(IPutDatafeedRequest, CancellationToken)` method:: deleted
`PutFilter(Id, Func<PutFilterDescriptor, IPutFilterRequest>)` method:: deleted
`PutFilter(IPutFilterRequest)` method:: deleted
`PutFilterAsync(Id, Func<PutFilterDescriptor, IPutFilterRequest>, CancellationToken)` method:: deleted
`PutFilterAsync(IPutFilterRequest, CancellationToken)` method:: deleted
`PutIndexTemplate(IPutIndexTemplateRequest)` method:: deleted
`PutIndexTemplate(Name, Func<PutIndexTemplateDescriptor, IPutIndexTemplateRequest>)` method:: deleted
`PutIndexTemplateAsync(IPutIndexTemplateRequest, CancellationToken)` method:: deleted
`PutIndexTemplateAsync(Name, Func<PutIndexTemplateDescriptor, IPutIndexTemplateRequest>, CancellationToken)` method:: deleted
`PutJob<T>(Id, Func<PutJobDescriptor<T>, IPutJobRequest>)` method:: deleted
`PutJob(IPutJobRequest)` method:: deleted
`PutJobAsync<T>(Id, Func<PutJobDescriptor<T>, IPutJobRequest>, CancellationToken)` method:: deleted
`PutJobAsync(IPutJobRequest, CancellationToken)` method:: deleted
`PutLifecycle(IPutLifecycleRequest)` method:: deleted
`PutLifecycle(PolicyId, Func<PutLifecycleDescriptor, IPutLifecycleRequest>)` method:: deleted
`PutLifecycleAsync(IPutLifecycleRequest, CancellationToken)` method:: deleted
`PutLifecycleAsync(PolicyId, Func<PutLifecycleDescriptor, IPutLifecycleRequest>, CancellationToken)` method:: deleted
`PutPipeline(Id, Func<PutPipelineDescriptor, IPutPipelineRequest>)` method:: deleted
`PutPipeline(IPutPipelineRequest)` method:: deleted
`PutPipelineAsync(Id, Func<PutPipelineDescriptor, IPutPipelineRequest>, CancellationToken)` method:: deleted
`PutPipelineAsync(IPutPipelineRequest, CancellationToken)` method:: deleted
`PutPrivileges(IPutPrivilegesRequest)` method:: deleted
`PutPrivileges(Func<PutPrivilegesDescriptor, IPutPrivilegesRequest>)` method:: deleted
`PutPrivilegesAsync(IPutPrivilegesRequest, CancellationToken)` method:: deleted
`PutPrivilegesAsync(Func<PutPrivilegesDescriptor, IPutPrivilegesRequest>, CancellationToken)` method:: deleted
`PutRole(IPutRoleRequest)` method:: deleted
`PutRole(Name, Func<PutRoleDescriptor, IPutRoleRequest>)` method:: deleted
`PutRoleAsync(IPutRoleRequest, CancellationToken)` method:: deleted
`PutRoleAsync(Name, Func<PutRoleDescriptor, IPutRoleRequest>, CancellationToken)` method:: deleted
`PutRoleMapping(IPutRoleMappingRequest)` method:: deleted
`PutRoleMapping(Name, Func<PutRoleMappingDescriptor, IPutRoleMappingRequest>)` method:: deleted
`PutRoleMappingAsync(IPutRoleMappingRequest, CancellationToken)` method:: deleted
`PutRoleMappingAsync(Name, Func<PutRoleMappingDescriptor, IPutRoleMappingRequest>, CancellationToken)` method:: deleted
`PutScript(Id, Func<PutScriptDescriptor, IPutScriptRequest>)` method::
Member type changed from `IPutScriptResponse` to `PutScriptResponse`.
`PutScript(IPutScriptRequest)` method::
Member type changed from `IPutScriptResponse` to `PutScriptResponse`.
`PutScriptAsync(Id, Func<PutScriptDescriptor, IPutScriptRequest>, CancellationToken)` method::
Member type changed from `Task<IPutScriptResponse>` to `Task<PutScriptResponse>`.
`PutScriptAsync(IPutScriptRequest, CancellationToken)` method::
Member type changed from `Task<IPutScriptResponse>` to `Task<PutScriptResponse>`.
`PutUser(IPutUserRequest)` method:: deleted
`PutUser(Name, Func<PutUserDescriptor, IPutUserRequest>)` method:: deleted
`PutUserAsync(IPutUserRequest, CancellationToken)` method:: deleted
`PutUserAsync(Name, Func<PutUserDescriptor, IPutUserRequest>, CancellationToken)` method:: deleted
`PutWatch(Id, Func<PutWatchDescriptor, IPutWatchRequest>)` method:: deleted
`PutWatch(IPutWatchRequest)` method:: deleted
`PutWatchAsync(Id, Func<PutWatchDescriptor, IPutWatchRequest>, CancellationToken)` method:: deleted
`PutWatchAsync(IPutWatchRequest, CancellationToken)` method:: deleted
`QuerySql(IQuerySqlRequest)` method:: deleted
`QuerySql(Func<QuerySqlDescriptor, IQuerySqlRequest>)` method:: deleted
`QuerySqlAsync(IQuerySqlRequest, CancellationToken)` method:: deleted
`QuerySqlAsync(Func<QuerySqlDescriptor, IQuerySqlRequest>, CancellationToken)` method:: deleted
`RecoveryStatus(Indices, Func<RecoveryStatusDescriptor, IRecoveryStatusRequest>)` method:: deleted
`RecoveryStatus(IRecoveryStatusRequest)` method:: deleted
`RecoveryStatusAsync(Indices, Func<RecoveryStatusDescriptor, IRecoveryStatusRequest>, CancellationToken)` method:: deleted
`RecoveryStatusAsync(IRecoveryStatusRequest, CancellationToken)` method:: deleted
`Refresh(Indices, Func<RefreshDescriptor, IRefreshRequest>)` method:: deleted
`Refresh(IRefreshRequest)` method:: deleted
`RefreshAsync(Indices, Func<RefreshDescriptor, IRefreshRequest>, CancellationToken)` method:: deleted
`RefreshAsync(IRefreshRequest, CancellationToken)` method:: deleted
`Reindex<TSource>(IndexName, IndexName, Func<QueryContainerDescriptor<TSource>, QueryContainer>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource, TTarget>(IndexName, IndexName, Func<TSource, TTarget>, Func<QueryContainerDescriptor<TSource>, QueryContainer>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource>(IReindexRequest<TSource>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource, TTarget>(IReindexRequest<TSource, TTarget>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource>(Func<ReindexDescriptor<TSource, TSource>, IReindexRequest<TSource, TSource>>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`Reindex<TSource, TTarget>(Func<TSource, TTarget>, Func<ReindexDescriptor<TSource, TTarget>, IReindexRequest<TSource, TTarget>>, CancellationToken)` method::
Member type changed from `IObservable<IBulkAllResponse>` to `IObservable<BulkAllResponse>`.
`ReindexOnServer(IReindexOnServerRequest)` method::
Member type changed from `IReindexOnServerResponse` to `ReindexOnServerResponse`.
`ReindexOnServer(Func<ReindexOnServerDescriptor, IReindexOnServerRequest>)` method::
Member type changed from `IReindexOnServerResponse` to `ReindexOnServerResponse`.
`ReindexOnServerAsync(IReindexOnServerRequest, CancellationToken)` method::
Member type changed from `Task<IReindexOnServerResponse>` to `Task<ReindexOnServerResponse>`.
`ReindexOnServerAsync(Func<ReindexOnServerDescriptor, IReindexOnServerRequest>, CancellationToken)` method::
Member type changed from `Task<IReindexOnServerResponse>` to `Task<ReindexOnServerResponse>`.
`ReindexRethrottle(IReindexRethrottleRequest)` method:: added
`ReindexRethrottle(TaskId, Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>)` method:: added
`ReindexRethrottleAsync(IReindexRethrottleRequest, CancellationToken)` method:: added
`ReindexRethrottleAsync(TaskId, Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>, CancellationToken)` method:: added
`ReloadSecureSettings(IReloadSecureSettingsRequest)` method:: deleted
`ReloadSecureSettings(Func<ReloadSecureSettingsDescriptor, IReloadSecureSettingsRequest>)` method:: deleted
`ReloadSecureSettingsAsync(IReloadSecureSettingsRequest, CancellationToken)` method:: deleted
`ReloadSecureSettingsAsync(Func<ReloadSecureSettingsDescriptor, IReloadSecureSettingsRequest>, CancellationToken)` method:: deleted
`RemoteInfo(IRemoteInfoRequest)` method:: deleted
`RemoteInfo(Func<RemoteInfoDescriptor, IRemoteInfoRequest>)` method:: deleted
`RemoteInfoAsync(IRemoteInfoRequest, CancellationToken)` method:: deleted
`RemoteInfoAsync(Func<RemoteInfoDescriptor, IRemoteInfoRequest>, CancellationToken)` method:: deleted
`RemovePolicy(IndexName, Func<RemovePolicyDescriptor, IRemovePolicyRequest>)` method:: deleted
`RemovePolicy(IRemovePolicyRequest)` method:: deleted
`RemovePolicyAsync(IndexName, Func<RemovePolicyDescriptor, IRemovePolicyRequest>, CancellationToken)` method:: deleted
`RemovePolicyAsync(IRemovePolicyRequest, CancellationToken)` method:: deleted
`RenderSearchTemplate(IRenderSearchTemplateRequest)` method::
Member type changed from `IRenderSearchTemplateResponse` to `RenderSearchTemplateResponse`.
`RenderSearchTemplate(Func<RenderSearchTemplateDescriptor, IRenderSearchTemplateRequest>)` method::
Member type changed from `IRenderSearchTemplateResponse` to `RenderSearchTemplateResponse`.
`RenderSearchTemplateAsync(IRenderSearchTemplateRequest, CancellationToken)` method::
Member type changed from `Task<IRenderSearchTemplateResponse>` to `Task<RenderSearchTemplateResponse>`.
`RenderSearchTemplateAsync(Func<RenderSearchTemplateDescriptor, IRenderSearchTemplateRequest>, CancellationToken)` method::
Member type changed from `Task<IRenderSearchTemplateResponse>` to `Task<RenderSearchTemplateResponse>`.
`RestartWatcher(IRestartWatcherRequest)` method:: deleted
`RestartWatcher(Func<RestartWatcherDescriptor, IRestartWatcherRequest>)` method:: deleted
`RestartWatcherAsync(IRestartWatcherRequest, CancellationToken)` method:: deleted
`RestartWatcherAsync(Func<RestartWatcherDescriptor, IRestartWatcherRequest>, CancellationToken)` method:: deleted
`Restore(IRestoreRequest)` method:: deleted
`Restore(Name, Name, Func<RestoreDescriptor, IRestoreRequest>)` method:: deleted
`RestoreAsync(IRestoreRequest, CancellationToken)` method:: deleted
`RestoreAsync(Name, Name, Func<RestoreDescriptor, IRestoreRequest>, CancellationToken)` method:: deleted
`RestoreObservable(Name, Name, TimeSpan, Func<RestoreDescriptor, IRestoreRequest>)` method:: deleted
`RestoreObservable(TimeSpan, IRestoreRequest)` method:: deleted
`ResumeFollowIndex(IndexName, Func<ResumeFollowIndexDescriptor, IResumeFollowIndexRequest>)` method:: deleted
`ResumeFollowIndex(IResumeFollowIndexRequest)` method:: deleted
`ResumeFollowIndexAsync(IndexName, Func<ResumeFollowIndexDescriptor, IResumeFollowIndexRequest>, CancellationToken)` method:: deleted
`ResumeFollowIndexAsync(IResumeFollowIndexRequest, CancellationToken)` method:: deleted
`Rethrottle(IReindexRethrottleRequest)` method:: deleted
`Rethrottle(TaskId, Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>)` method:: deleted
`Rethrottle(Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>)` method:: deleted
`RethrottleAsync(IReindexRethrottleRequest, CancellationToken)` method:: deleted
`RethrottleAsync(TaskId, Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>, CancellationToken)` method:: deleted
`RethrottleAsync(Func<ReindexRethrottleDescriptor, IReindexRethrottleRequest>, CancellationToken)` method:: deleted
`RetryIlm(IndexName, Func<RetryIlmDescriptor, IRetryIlmRequest>)` method:: deleted
`RetryIlm(IRetryIlmRequest)` method:: deleted
`RetryIlmAsync(IndexName, Func<RetryIlmDescriptor, IRetryIlmRequest>, CancellationToken)` method:: deleted
`RetryIlmAsync(IRetryIlmRequest, CancellationToken)` method:: deleted
`RevertModelSnapshot(Id, Id, Func<RevertModelSnapshotDescriptor, IRevertModelSnapshotRequest>)` method:: deleted
`RevertModelSnapshot(IRevertModelSnapshotRequest)` method:: deleted
`RevertModelSnapshotAsync(Id, Id, Func<RevertModelSnapshotDescriptor, IRevertModelSnapshotRequest>, CancellationToken)` method:: deleted
`RevertModelSnapshotAsync(IRevertModelSnapshotRequest, CancellationToken)` method:: deleted
`RolloverIndex(IRolloverIndexRequest)` method:: deleted
`RolloverIndex(Name, Func<RolloverIndexDescriptor, IRolloverIndexRequest>)` method:: deleted
`RolloverIndexAsync(IRolloverIndexRequest, CancellationToken)` method:: deleted
`RolloverIndexAsync(Name, Func<RolloverIndexDescriptor, IRolloverIndexRequest>, CancellationToken)` method:: deleted
`RollupSearch<T, THit>(Indices, Func<RollupSearchDescriptor<T>, IRollupSearchRequest>)` method:: deleted
`RollupSearch<THit>(Indices, Func<RollupSearchDescriptor<THit>, IRollupSearchRequest>)` method:: deleted
`RollupSearch<THit>(IRollupSearchRequest)` method:: deleted
`RollupSearchAsync<T, THit>(Indices, Func<RollupSearchDescriptor<T>, IRollupSearchRequest>, CancellationToken)` method:: deleted
`RollupSearchAsync<THit>(Indices, Func<RollupSearchDescriptor<THit>, IRollupSearchRequest>, CancellationToken)` method:: deleted
`RollupSearchAsync<THit>(IRollupSearchRequest, CancellationToken)` method:: deleted
`RootNodeInfo(IRootNodeInfoRequest)` method::
Member type changed from `IRootNodeInfoResponse` to `RootNodeInfoResponse`.
`RootNodeInfo(Func<RootNodeInfoDescriptor, IRootNodeInfoRequest>)` method::
Member type changed from `IRootNodeInfoResponse` to `RootNodeInfoResponse`.
`RootNodeInfoAsync(IRootNodeInfoRequest, CancellationToken)` method::
Member type changed from `Task<IRootNodeInfoResponse>` to `Task<RootNodeInfoResponse>`.
`RootNodeInfoAsync(Func<RootNodeInfoDescriptor, IRootNodeInfoRequest>, CancellationToken)` method::
Member type changed from `Task<IRootNodeInfoResponse>` to `Task<RootNodeInfoResponse>`.
`Scroll<TDocument>(IScrollRequest)` method::
Member type changed from `ISearchResponse<T>` to `ISearchResponse<TDocument>`.
`Scroll<T>(Time, String, Func<ScrollDescriptor<T>, IScrollRequest>)` method:: deleted
`Scroll<TDocument>(Time, String, Func<ScrollDescriptor<TDocument>, IScrollRequest>)` method:: added
`Scroll<TInferDocument, TDocument>(Time, String, Func<ScrollDescriptor<TInferDocument>, IScrollRequest>)` method:: added
`ScrollAll<T>(IScrollAllRequest, CancellationToken)` method::
Member type changed from `IObservable<IScrollAllResponse<T>>` to `IObservable<ScrollAllResponse<T>>`.
`ScrollAll<T>(Time, Int32, Func<ScrollAllDescriptor<T>, IScrollAllRequest>, CancellationToken)` method::
Member type changed from `IObservable<IScrollAllResponse<T>>` to `IObservable<ScrollAllResponse<T>>`.
`ScrollAsync<TDocument>(IScrollRequest, CancellationToken)` method::
Member type changed from `Task<ISearchResponse<T>>` to `Task<ISearchResponse<TDocument>>`.
`ScrollAsync<T>(Time, String, Func<ScrollDescriptor<T>, IScrollRequest>, CancellationToken)` method:: deleted
`ScrollAsync<TDocument>(Time, String, Func<ScrollDescriptor<TDocument>, IScrollRequest>, CancellationToken)` method:: added
`ScrollAsync<TInferDocument, TDocument>(Time, String, Func<ScrollDescriptor<TInferDocument>, IScrollRequest>, CancellationToken)` method:: added
`Search<TDocument>(ISearchRequest)` method::
Member type changed from `ISearchResponse<T>` to `ISearchResponse<TDocument>`.
`Search<T, TResult>(ISearchRequest)` method:: deleted
`Search<T>(Func<SearchDescriptor<T>, ISearchRequest>)` method:: deleted
`Search<T, TResult>(Func<SearchDescriptor<T>, ISearchRequest>)` method:: deleted
`Search<TDocument>(Func<SearchDescriptor<TDocument>, ISearchRequest>)` method:: added
`Search<TInferDocument, TDocument>(Func<SearchDescriptor<TInferDocument>, ISearchRequest>)` method:: added
`SearchAsync<TDocument>(ISearchRequest, CancellationToken)` method::
Member type changed from `Task<ISearchResponse<TResult>>` to `Task<ISearchResponse<TDocument>>`.
`SearchAsync<T>(ISearchRequest, CancellationToken)` method:: deleted
`SearchAsync<T>(Func<SearchDescriptor<T>, ISearchRequest>, CancellationToken)` method:: deleted
`SearchAsync<T, TResult>(Func<SearchDescriptor<T>, ISearchRequest>, CancellationToken)` method:: deleted
`SearchAsync<TDocument>(Func<SearchDescriptor<TDocument>, ISearchRequest>, CancellationToken)` method:: added
`SearchAsync<TInferDocument, TDocument>(Func<SearchDescriptor<TInferDocument>, ISearchRequest>, CancellationToken)` method:: added
`SearchShards(ISearchShardsRequest)` method::
Member type changed from `ISearchShardsResponse` to `SearchShardsResponse`.
`SearchShards<T>(Func<SearchShardsDescriptor<T>, ISearchShardsRequest>)` method:: deleted
`SearchShards<TDocument>(Func<SearchShardsDescriptor<TDocument>, ISearchShardsRequest>)` method:: added
`SearchShardsAsync(ISearchShardsRequest, CancellationToken)` method::
Member type changed from `Task<ISearchShardsResponse>` to `Task<SearchShardsResponse>`.
`SearchShardsAsync<T>(Func<SearchShardsDescriptor<T>, ISearchShardsRequest>, CancellationToken)` method:: deleted
`SearchShardsAsync<TDocument>(Func<SearchShardsDescriptor<TDocument>, ISearchShardsRequest>, CancellationToken)` method:: added
`SearchTemplate<TDocument>(ISearchTemplateRequest)` method::
Member type changed from `ISearchResponse<TResult>` to `ISearchResponse<TDocument>`.
`SearchTemplate<T>(ISearchTemplateRequest)` method:: deleted
`SearchTemplate<T>(Func<SearchTemplateDescriptor<T>, ISearchTemplateRequest>)` method:: deleted
`SearchTemplate<T, TResult>(Func<SearchTemplateDescriptor<T>, ISearchTemplateRequest>)` method:: deleted
`SearchTemplate<TDocument>(Func<SearchTemplateDescriptor<TDocument>, ISearchTemplateRequest>)` method:: added
`SearchTemplateAsync<TDocument>(ISearchTemplateRequest, CancellationToken)` method::
Member type changed from `Task<ISearchResponse<TResult>>` to `Task<ISearchResponse<TDocument>>`.
`SearchTemplateAsync<T>(ISearchTemplateRequest, CancellationToken)` method:: deleted
`SearchTemplateAsync<T>(Func<SearchTemplateDescriptor<T>, ISearchTemplateRequest>, CancellationToken)` method:: deleted
`SearchTemplateAsync<T, TResult>(Func<SearchTemplateDescriptor<T>, ISearchTemplateRequest>, CancellationToken)` method:: deleted
`SearchTemplateAsync<TDocument>(Func<SearchTemplateDescriptor<TDocument>, ISearchTemplateRequest>, CancellationToken)` method:: added
`Segments(Indices, Func<SegmentsDescriptor, ISegmentsRequest>)` method:: deleted
`Segments(ISegmentsRequest)` method:: deleted
`SegmentsAsync(Indices, Func<SegmentsDescriptor, ISegmentsRequest>, CancellationToken)` method:: deleted
`SegmentsAsync(ISegmentsRequest, CancellationToken)` method:: deleted
`ShrinkIndex(IndexName, IndexName, Func<ShrinkIndexDescriptor, IShrinkIndexRequest>)` method:: deleted
`ShrinkIndex(IShrinkIndexRequest)` method:: deleted
`ShrinkIndexAsync(IndexName, IndexName, Func<ShrinkIndexDescriptor, IShrinkIndexRequest>, CancellationToken)` method:: deleted
`ShrinkIndexAsync(IShrinkIndexRequest, CancellationToken)` method:: deleted
`SimulatePipeline(ISimulatePipelineRequest)` method:: deleted
`SimulatePipeline(Func<SimulatePipelineDescriptor, ISimulatePipelineRequest>)` method:: deleted
`SimulatePipelineAsync(ISimulatePipelineRequest, CancellationToken)` method:: deleted
`SimulatePipelineAsync(Func<SimulatePipelineDescriptor, ISimulatePipelineRequest>, CancellationToken)` method:: deleted
`Snapshot(ISnapshotRequest)` method:: deleted
`Snapshot(Name, Name, Func<SnapshotDescriptor, ISnapshotRequest>)` method:: deleted
`SnapshotAsync(ISnapshotRequest, CancellationToken)` method:: deleted
`SnapshotAsync(Name, Name, Func<SnapshotDescriptor, ISnapshotRequest>, CancellationToken)` method:: deleted
`SnapshotObservable(Name, Name, TimeSpan, Func<SnapshotDescriptor, ISnapshotRequest>)` method:: deleted
`SnapshotObservable(TimeSpan, ISnapshotRequest)` method:: deleted
`SnapshotStatus(ISnapshotStatusRequest)` method:: deleted
`SnapshotStatus(Func<SnapshotStatusDescriptor, ISnapshotStatusRequest>)` method:: deleted
`SnapshotStatusAsync(ISnapshotStatusRequest, CancellationToken)` method:: deleted
`SnapshotStatusAsync(Func<SnapshotStatusDescriptor, ISnapshotStatusRequest>, CancellationToken)` method:: deleted
`Source<T>(DocumentPath<T>, Func<SourceDescriptor<T>, ISourceRequest>)` method:: deleted
`Source<TDocument>(DocumentPath<TDocument>, Func<SourceDescriptor<TDocument>, ISourceRequest>)` method:: added
`Source<TDocument>(ISourceRequest)` method::
Member type changed from `T` to `SourceResponse<TDocument>`.
`SourceAsync<T>(DocumentPath<T>, Func<SourceDescriptor<T>, ISourceRequest>, CancellationToken)` method:: deleted
`SourceAsync<TDocument>(DocumentPath<TDocument>, Func<SourceDescriptor<TDocument>, ISourceRequest>, CancellationToken)` method:: added
`SourceAsync<TDocument>(ISourceRequest, CancellationToken)` method::
Member type changed from `Task<T>` to `Task<SourceResponse<TDocument>>`.
`SourceExists<T>(DocumentPath<T>, Func<SourceExistsDescriptor<T>, ISourceExistsRequest>)` method:: deleted
`SourceExists<TDocument>(DocumentPath<TDocument>, Func<SourceExistsDescriptor<TDocument>, ISourceExistsRequest>)` method:: added
`SourceExists(ISourceExistsRequest)` method::
Member type changed from `IExistsResponse` to `ExistsResponse`.
`SourceExistsAsync<T>(DocumentPath<T>, Func<SourceExistsDescriptor<T>, ISourceExistsRequest>, CancellationToken)` method:: deleted
`SourceExistsAsync<TDocument>(DocumentPath<TDocument>, Func<SourceExistsDescriptor<TDocument>, ISourceExistsRequest>, CancellationToken)` method:: added
`SourceExistsAsync(ISourceExistsRequest, CancellationToken)` method::
Member type changed from `Task<IExistsResponse>` to `Task<ExistsResponse>`.
`SplitIndex(IndexName, IndexName, Func<SplitIndexDescriptor, ISplitIndexRequest>)` method:: deleted
`SplitIndex(ISplitIndexRequest)` method:: deleted
`SplitIndexAsync(IndexName, IndexName, Func<SplitIndexDescriptor, ISplitIndexRequest>, CancellationToken)` method:: deleted
`SplitIndexAsync(ISplitIndexRequest, CancellationToken)` method:: deleted
`StartBasicLicense(IStartBasicLicenseRequest)` method:: deleted
`StartBasicLicense(Func<StartBasicLicenseDescriptor, IStartBasicLicenseRequest>)` method:: deleted
`StartBasicLicenseAsync(IStartBasicLicenseRequest, CancellationToken)` method:: deleted
`StartBasicLicenseAsync(Func<StartBasicLicenseDescriptor, IStartBasicLicenseRequest>, CancellationToken)` method:: deleted
`StartDatafeed(Id, Func<StartDatafeedDescriptor, IStartDatafeedRequest>)` method:: deleted
`StartDatafeed(IStartDatafeedRequest)` method:: deleted
`StartDatafeedAsync(Id, Func<StartDatafeedDescriptor, IStartDatafeedRequest>, CancellationToken)` method:: deleted
`StartDatafeedAsync(IStartDatafeedRequest, CancellationToken)` method:: deleted
`StartIlm(IStartIlmRequest)` method:: deleted
`StartIlm(Func<StartIlmDescriptor, IStartIlmRequest>)` method:: deleted
`StartIlmAsync(IStartIlmRequest, CancellationToken)` method:: deleted
`StartIlmAsync(Func<StartIlmDescriptor, IStartIlmRequest>, CancellationToken)` method:: deleted
`StartRollupJob(Id, Func<StartRollupJobDescriptor, IStartRollupJobRequest>)` method:: deleted
`StartRollupJob(IStartRollupJobRequest)` method:: deleted
`StartRollupJobAsync(Id, Func<StartRollupJobDescriptor, IStartRollupJobRequest>, CancellationToken)` method:: deleted
`StartRollupJobAsync(IStartRollupJobRequest, CancellationToken)` method:: deleted
`StartTrialLicense(IStartTrialLicenseRequest)` method:: deleted
`StartTrialLicense(Func<StartTrialLicenseDescriptor, IStartTrialLicenseRequest>)` method:: deleted
`StartTrialLicenseAsync(IStartTrialLicenseRequest, CancellationToken)` method:: deleted
`StartTrialLicenseAsync(Func<StartTrialLicenseDescriptor, IStartTrialLicenseRequest>, CancellationToken)` method:: deleted
`StartWatcher(IStartWatcherRequest)` method:: deleted
`StartWatcher(Func<StartWatcherDescriptor, IStartWatcherRequest>)` method:: deleted
`StartWatcherAsync(IStartWatcherRequest, CancellationToken)` method:: deleted
`StartWatcherAsync(Func<StartWatcherDescriptor, IStartWatcherRequest>, CancellationToken)` method:: deleted
`StopDatafeed(Id, Func<StopDatafeedDescriptor, IStopDatafeedRequest>)` method:: deleted
`StopDatafeed(IStopDatafeedRequest)` method:: deleted
`StopDatafeedAsync(Id, Func<StopDatafeedDescriptor, IStopDatafeedRequest>, CancellationToken)` method:: deleted
`StopDatafeedAsync(IStopDatafeedRequest, CancellationToken)` method:: deleted
`StopIlm(IStopIlmRequest)` method:: deleted
`StopIlm(Func<StopIlmDescriptor, IStopIlmRequest>)` method:: deleted
`StopIlmAsync(IStopIlmRequest, CancellationToken)` method:: deleted
`StopIlmAsync(Func<StopIlmDescriptor, IStopIlmRequest>, CancellationToken)` method:: deleted
`StopRollupJob(Id, Func<StopRollupJobDescriptor, IStopRollupJobRequest>)` method:: deleted
`StopRollupJob(IStopRollupJobRequest)` method:: deleted
`StopRollupJobAsync(Id, Func<StopRollupJobDescriptor, IStopRollupJobRequest>, CancellationToken)` method:: deleted
`StopRollupJobAsync(IStopRollupJobRequest, CancellationToken)` method:: deleted
`StopWatcher(IStopWatcherRequest)` method:: deleted
`StopWatcher(Func<StopWatcherDescriptor, IStopWatcherRequest>)` method:: deleted
`StopWatcherAsync(IStopWatcherRequest, CancellationToken)` method:: deleted
`StopWatcherAsync(Func<StopWatcherDescriptor, IStopWatcherRequest>, CancellationToken)` method:: deleted
`SyncedFlush(Indices, Func<SyncedFlushDescriptor, ISyncedFlushRequest>)` method:: deleted
`SyncedFlush(ISyncedFlushRequest)` method:: deleted
`SyncedFlushAsync(Indices, Func<SyncedFlushDescriptor, ISyncedFlushRequest>, CancellationToken)` method:: deleted
`SyncedFlushAsync(ISyncedFlushRequest, CancellationToken)` method:: deleted
`TermVectors<T>(ITermVectorsRequest<T>)` method:: deleted
`TermVectors<TDocument>(ITermVectorsRequest<TDocument>)` method:: added
`TermVectors<T>(Func<TermVectorsDescriptor<T>, ITermVectorsRequest<T>>)` method:: deleted
`TermVectors<TDocument>(Func<TermVectorsDescriptor<TDocument>, ITermVectorsRequest<TDocument>>)` method:: added
`TermVectorsAsync<T>(ITermVectorsRequest<T>, CancellationToken)` method:: deleted
`TermVectorsAsync<TDocument>(ITermVectorsRequest<TDocument>, CancellationToken)` method:: added
`TermVectorsAsync<T>(Func<TermVectorsDescriptor<T>, ITermVectorsRequest<T>>, CancellationToken)` method:: deleted
`TermVectorsAsync<TDocument>(Func<TermVectorsDescriptor<TDocument>, ITermVectorsRequest<TDocument>>, CancellationToken)` method:: added
`TranslateSql(ITranslateSqlRequest)` method:: deleted
`TranslateSql(Func<TranslateSqlDescriptor, ITranslateSqlRequest>)` method:: deleted
`TranslateSqlAsync(ITranslateSqlRequest, CancellationToken)` method:: deleted
`TranslateSqlAsync(Func<TranslateSqlDescriptor, ITranslateSqlRequest>, CancellationToken)` method:: deleted
`TypeExists(Indices, Types, Func<TypeExistsDescriptor, ITypeExistsRequest>)` method:: deleted
`TypeExists(ITypeExistsRequest)` method:: deleted
`TypeExistsAsync(Indices, Types, Func<TypeExistsDescriptor, ITypeExistsRequest>, CancellationToken)` method:: deleted
`TypeExistsAsync(ITypeExistsRequest, CancellationToken)` method:: deleted
`UnfollowIndex(IndexName, Func<UnfollowIndexDescriptor, IUnfollowIndexRequest>)` method:: deleted
`UnfollowIndex(IUnfollowIndexRequest)` method:: deleted
`UnfollowIndexAsync(IndexName, Func<UnfollowIndexDescriptor, IUnfollowIndexRequest>, CancellationToken)` method:: deleted
`UnfollowIndexAsync(IUnfollowIndexRequest, CancellationToken)` method:: deleted
`Update<TDocument>(DocumentPath<TDocument>, Func<UpdateDescriptor<TDocument, TDocument>, IUpdateRequest<TDocument, TDocument>>)` method::
Member type changed from `IUpdateResponse<TDocument>` to `UpdateResponse<TDocument>`.
`Update<TDocument, TPartialDocument>(DocumentPath<TDocument>, Func<UpdateDescriptor<TDocument, TPartialDocument>, IUpdateRequest<TDocument, TPartialDocument>>)` method::
Member type changed from `IUpdateResponse<TDocument>` to `UpdateResponse<TDocument>`.
`Update<TDocument>(IUpdateRequest<TDocument, TDocument>)` method:: deleted
`Update<TDocument, TPartialDocument>(IUpdateRequest<TDocument, TPartialDocument>)` method::
Member type changed from `IUpdateResponse<TDocument>` to `UpdateResponse<TDocument>`.
`UpdateAsync<TDocument>(DocumentPath<TDocument>, Func<UpdateDescriptor<TDocument, TDocument>, IUpdateRequest<TDocument, TDocument>>, CancellationToken)` method::
Member type changed from `Task<IUpdateResponse<TDocument>>` to `Task<UpdateResponse<TDocument>>`.
`UpdateAsync<TDocument, TPartialDocument>(DocumentPath<TDocument>, Func<UpdateDescriptor<TDocument, TPartialDocument>, IUpdateRequest<TDocument, TPartialDocument>>, CancellationToken)` method::
Member type changed from `Task<IUpdateResponse<TDocument>>` to `Task<UpdateResponse<TDocument>>`.
`UpdateAsync<TDocument>(IUpdateRequest<TDocument, TDocument>, CancellationToken)` method:: deleted
`UpdateAsync<TDocument, TPartialDocument>(IUpdateRequest<TDocument, TPartialDocument>, CancellationToken)` method::
Member type changed from `Task<IUpdateResponse<TDocument>>` to `Task<UpdateResponse<TDocument>>`.
`UpdateByQuery(IUpdateByQueryRequest)` method::
Member type changed from `IUpdateByQueryResponse` to `UpdateByQueryResponse`.
`UpdateByQuery<T>(Func<UpdateByQueryDescriptor<T>, IUpdateByQueryRequest>)` method:: deleted
`UpdateByQuery<TDocument>(Func<UpdateByQueryDescriptor<TDocument>, IUpdateByQueryRequest>)` method:: added
`UpdateByQueryAsync(IUpdateByQueryRequest, CancellationToken)` method::
Member type changed from `Task<IUpdateByQueryResponse>` to `Task<UpdateByQueryResponse>`.
`UpdateByQueryAsync<T>(Func<UpdateByQueryDescriptor<T>, IUpdateByQueryRequest>, CancellationToken)` method:: deleted
`UpdateByQueryAsync<TDocument>(Func<UpdateByQueryDescriptor<TDocument>, IUpdateByQueryRequest>, CancellationToken)` method:: added
`UpdateByQueryRethrottle(IUpdateByQueryRethrottleRequest)` method::
Member type changed from `IListTasksResponse` to `ListTasksResponse`.
`UpdateByQueryRethrottle(TaskId, Func<UpdateByQueryRethrottleDescriptor, IUpdateByQueryRethrottleRequest>)` method::
Member type changed from `IListTasksResponse` to `ListTasksResponse`.
`UpdateByQueryRethrottleAsync(IUpdateByQueryRethrottleRequest, CancellationToken)` method::
Member type changed from `Task<IListTasksResponse>` to `Task<ListTasksResponse>`.
`UpdateByQueryRethrottleAsync(TaskId, Func<UpdateByQueryRethrottleDescriptor, IUpdateByQueryRethrottleRequest>, CancellationToken)` method::
Member type changed from `Task<IListTasksResponse>` to `Task<ListTasksResponse>`.
`UpdateDatafeed<T>(Id, Func<UpdateDatafeedDescriptor<T>, IUpdateDatafeedRequest>)` method:: deleted
`UpdateDatafeed(IUpdateDatafeedRequest)` method:: deleted
`UpdateDatafeedAsync<T>(Id, Func<UpdateDatafeedDescriptor<T>, IUpdateDatafeedRequest>, CancellationToken)` method:: deleted
`UpdateDatafeedAsync(IUpdateDatafeedRequest, CancellationToken)` method:: deleted
`UpdateFilter(Id, Func<UpdateFilterDescriptor, IUpdateFilterRequest>)` method:: deleted
`UpdateFilter(IUpdateFilterRequest)` method:: deleted
`UpdateFilterAsync(Id, Func<UpdateFilterDescriptor, IUpdateFilterRequest>, CancellationToken)` method:: deleted
`UpdateFilterAsync(IUpdateFilterRequest, CancellationToken)` method:: deleted
`UpdateIndexSettings(Indices, Func<UpdateIndexSettingsDescriptor, IUpdateIndexSettingsRequest>)` method:: deleted
`UpdateIndexSettings(IUpdateIndexSettingsRequest)` method:: deleted
`UpdateIndexSettingsAsync(Indices, Func<UpdateIndexSettingsDescriptor, IUpdateIndexSettingsRequest>, CancellationToken)` method:: deleted
`UpdateIndexSettingsAsync(IUpdateIndexSettingsRequest, CancellationToken)` method:: deleted
`UpdateJob<T>(Id, Func<UpdateJobDescriptor<T>, IUpdateJobRequest>)` method:: deleted
`UpdateJob(IUpdateJobRequest)` method:: deleted
`UpdateJobAsync<T>(Id, Func<UpdateJobDescriptor<T>, IUpdateJobRequest>, CancellationToken)` method:: deleted
`UpdateJobAsync(IUpdateJobRequest, CancellationToken)` method:: deleted
`UpdateModelSnapshot(Id, Id, Func<UpdateModelSnapshotDescriptor, IUpdateModelSnapshotRequest>)` method:: deleted
`UpdateModelSnapshot(IUpdateModelSnapshotRequest)` method:: deleted
`UpdateModelSnapshotAsync(Id, Id, Func<UpdateModelSnapshotDescriptor, IUpdateModelSnapshotRequest>, CancellationToken)` method:: deleted
`UpdateModelSnapshotAsync(IUpdateModelSnapshotRequest, CancellationToken)` method:: deleted
`Upgrade(Indices, Func<UpgradeDescriptor, IUpgradeRequest>)` method:: deleted
`Upgrade(IUpgradeRequest)` method:: deleted
`UpgradeAsync(Indices, Func<UpgradeDescriptor, IUpgradeRequest>, CancellationToken)` method:: deleted
`UpgradeAsync(IUpgradeRequest, CancellationToken)` method:: deleted
`UpgradeStatus(IUpgradeStatusRequest)` method:: deleted
`UpgradeStatus(Func<UpgradeStatusDescriptor, IUpgradeStatusRequest>)` method:: deleted
`UpgradeStatusAsync(IUpgradeStatusRequest, CancellationToken)` method:: deleted
`UpgradeStatusAsync(Func<UpgradeStatusDescriptor, IUpgradeStatusRequest>, CancellationToken)` method:: deleted
`ValidateDetector(IValidateDetectorRequest)` method:: deleted
`ValidateDetector<T>(Func<ValidateDetectorDescriptor<T>, IValidateDetectorRequest>)` method:: deleted
`ValidateDetectorAsync(IValidateDetectorRequest, CancellationToken)` method:: deleted
`ValidateDetectorAsync<T>(Func<ValidateDetectorDescriptor<T>, IValidateDetectorRequest>, CancellationToken)` method:: deleted
`ValidateJob(IValidateJobRequest)` method:: deleted
`ValidateJob<T>(Func<ValidateJobDescriptor<T>, IValidateJobRequest>)` method:: deleted
`ValidateJobAsync(IValidateJobRequest, CancellationToken)` method:: deleted
`ValidateJobAsync<T>(Func<ValidateJobDescriptor<T>, IValidateJobRequest>, CancellationToken)` method:: deleted
`ValidateQuery(IValidateQueryRequest)` method:: deleted
`ValidateQuery<T>(Func<ValidateQueryDescriptor<T>, IValidateQueryRequest>)` method:: deleted
`ValidateQueryAsync(IValidateQueryRequest, CancellationToken)` method:: deleted
`ValidateQueryAsync<T>(Func<ValidateQueryDescriptor<T>, IValidateQueryRequest>, CancellationToken)` method:: deleted
`VerifyRepository(IVerifyRepositoryRequest)` method:: deleted
`VerifyRepository(Name, Func<VerifyRepositoryDescriptor, IVerifyRepositoryRequest>)` method:: deleted
`VerifyRepositoryAsync(IVerifyRepositoryRequest, CancellationToken)` method:: deleted
`VerifyRepositoryAsync(Name, Func<VerifyRepositoryDescriptor, IVerifyRepositoryRequest>, CancellationToken)` method:: deleted
`WatcherStats(IWatcherStatsRequest)` method:: deleted
`WatcherStats(Func<WatcherStatsDescriptor, IWatcherStatsRequest>)` method:: deleted
`WatcherStatsAsync(IWatcherStatsRequest, CancellationToken)` method:: deleted
`WatcherStatsAsync(Func<WatcherStatsDescriptor, IWatcherStatsRequest>, CancellationToken)` method:: deleted
`XPackInfo(IXPackInfoRequest)` method:: deleted
`XPackInfo(Func<XPackInfoDescriptor, IXPackInfoRequest>)` method:: deleted
`XPackInfoAsync(IXPackInfoRequest, CancellationToken)` method:: deleted
`XPackInfoAsync(Func<XPackInfoDescriptor, IXPackInfoRequest>, CancellationToken)` method:: deleted
`XPackUsage(IXPackUsageRequest)` method:: deleted
`XPackUsage(Func<XPackUsageDescriptor, IXPackUsageRequest>)` method:: deleted
`XPackUsageAsync(IXPackUsageRequest, CancellationToken)` method:: deleted
`XPackUsageAsync(Func<XPackUsageDescriptor, IXPackUsageRequest>, CancellationToken)` method:: deleted
`Cat` property:: added
`Cluster` property:: added
`CrossClusterReplication` property:: added
`Graph` property:: added
`IndexLifecycleManagement` property:: added
`Indices` property:: added
`Ingest` property:: added
`License` property:: added
`MachineLearning` property:: added
`Migration` property:: added
`Nodes` property:: added
`Rollup` property:: added
`Security` property:: added
`Snapshot` property:: added
`Sql` property:: added
`Tasks` property:: added
`Watcher` property:: added
`XPack` property:: added






[float]
=== `Nest.IEnableUserResponse`

[horizontal]
type:: deleted





[float]
=== `Nest.IExecuteWatchRequest`

[horizontal]

[float]
=== `Nest.IExecuteWatchResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IExistsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IExplainLifecycleResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IExplainRequest`

[horizontal]
type:: added

[float]
=== `Nest.IExplainRequest<TDocument>`

[horizontal]
`Id` property:: deleted
`Index` property:: deleted
`Query` property:: deleted
`StoredFields` property:: deleted
`Type` property:: deleted

[float]
=== `Nest.IExplainResponse<out TDocument>`

[horizontal]
`Explanation` property:: deleted
`Matched` property:: deleted






[float]
=== `Nest.IFieldCapabilitiesResponse`

[horizontal]
type:: deleted






[float]
=== `Nest.IFieldLookup`

[horizontal]
`Type` property:: deleted









[float]
=== `Nest.IFiltersAggregation`

[horizontal]





[float]
=== `Nest.IFlushJobResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IFlushResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IFollowIndexStatsResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IForceMergeResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IForecastJobResponse`

[horizontal]
type:: deleted





[float]
=== `Nest.IFuzzySuggester`

[horizontal]
type:: deleted

[float]
=== `Nest.IGenericProperty`

[horizontal]
`Indexed` property:: deleted






[float]
=== `Nest.IGeoDistanceSort`

[horizontal]
`GeoUnit` property:: deleted
`Unit` property:: added


[float]
=== `Nest.IGeoIndexedShapeQuery`

[horizontal]
type:: deleted


[float]
=== `Nest.IGeometryCollection`

[horizontal]
`Type` property:: deleted




[float]
=== `Nest.IGeoShape`

[horizontal]
`IgnoreUnmapped` property:: deleted

[float]
=== `Nest.IGeoShapeCircleQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.IGeoShapeEnvelopeQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.IGeoShapeGeometryCollectionQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.IGeoShapeLineStringQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.IGeoShapeMultiLineStringQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.IGeoShapeMultiPointQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.IGeoShapeMultiPolygonQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.IGeoShapePointQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.IGeoShapePolygonQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.IGeoShapeProperty`

[horizontal]
`DistanceErrorPercentage` property:: deleted
`PointsOnly` property:: deleted
`Precision` property:: deleted
`Tree` property:: deleted
`TreeLevels` property:: deleted

[float]
=== `Nest.IGeoShapeQuery`

[horizontal]
`IndexedShape` property:: added
`Shape` property:: added



[float]
=== `Nest.IGetAliasResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetAnomalyRecordsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetApiKeyResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetAutoFollowPatternResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetBasicLicenseStatusResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IGetBucketsRequest`

[horizontal]
`Timestamp` property setter::

[float]
=== `Nest.IGetBucketsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetCalendarEventsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetCalendarsResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IGetCategoriesRequest`

[horizontal]

[float]
=== `Nest.IGetCategoriesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetCertificatesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetDatafeedsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetDatafeedStatsResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IGetFieldMappingRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IGetFieldMappingResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetFiltersResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetIlmStatusResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetIndexSettingsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetIndexTemplateResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetInfluencersResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetJobsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetJobStatsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetLicenseResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IGetLifecycleRequest`

[horizontal]

[float]
=== `Nest.IGetLifecycleResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IGetMappingRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IGetMappingResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetModelSnapshotsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetOverallBucketsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetPipelineResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetPrivilegesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetRepositoryResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IGetRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IGetResponse<out TDocument>`

[horizontal]
`Fields` property:: deleted
`Found` property:: deleted
`Id` property:: deleted
`Index` property:: deleted
`Parent` property:: deleted
`PrimaryTerm` property:: deleted
`Routing` property:: deleted
`SequenceNumber` property:: deleted
`Type` property:: deleted
`Version` property:: deleted


[float]
=== `Nest.IGetRoleMappingResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetRoleResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IGetRollupCapabilitiesRequest`

[horizontal]
`Id` property:: added
`Index` property:: deleted

[float]
=== `Nest.IGetRollupCapabilitiesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetRollupIndexCapabilitiesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetRollupJobResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetScriptResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetSnapshotResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetTaskResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetTrialLicenseStatusResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetUserAccessTokenResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetUserPrivilegesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetUserResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IGetWatchResponse`

[horizontal]
type:: deleted




[float]
=== `Nest.IGraphExploreRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IGraphExploreResponse`

[horizontal]
type:: deleted




[float]
=== `Nest.IGrokProcessorPatternsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IHasChildQuery`

[horizontal]

[float]
=== `Nest.IHasParentQuery`

[horizontal]


[float]
=== `Nest.IHasPrivilegesResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IHighLevelToLowLevelDispatcher`

[horizontal]
type:: deleted



[float]
=== `Nest.IHipChatAction`

[horizontal]
type:: deleted

[float]
=== `Nest.IHipChatMessage`

[horizontal]
type:: deleted




[float]
=== `Nest.IHit<out TDocument>`

[horizontal]
`Highlight` property:: added
`Highlights` property:: deleted
`Nested` property:: added

[float]
=== `Nest.IHitMetadata<out TDocument>`

[horizontal]
`Parent` property:: deleted
`PrimaryTerm` property:: added
`SequenceNumber` property:: added

[float]
=== `Nest.IHitsMetadata<out T>`

[horizontal]
type:: added




















[float]
=== `Nest.IIdsQuery`

[horizontal]
`Types` property:: deleted

[float]
=== `Nest.IIndexAction`

[horizontal]
`DocType` property:: deleted







[float]
=== `Nest.IIndexRequest<TDocument>`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IIndexState`

[horizontal]




[float]
=== `Nest.IIndicesResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IIndicesShardStoresRequest`

[horizontal]
`Types` property:: deleted

[float]
=== `Nest.IIndicesShardStoresResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IIndicesStatsRequest`

[horizontal]
`Types` property:: deleted

[float]
=== `Nest.IIndicesStatsResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IInlineGet<out TDocument>`

[horizontal]
type:: added

[float]
=== `Nest.IInlineScript`

[horizontal]
`Inline` property:: deleted

[float]
=== `Nest.IInlineScriptCondition`

[horizontal]
`Inline` property:: deleted

[float]
=== `Nest.IInlineScriptTransform`

[horizontal]
`Inline` property:: deleted





[float]
=== `Nest.IIntervals`

[horizontal]
type:: added

[float]
=== `Nest.IIntervalsAllOf`

[horizontal]
type:: added

[float]
=== `Nest.IIntervalsAnyOf`

[horizontal]
type:: added

[float]
=== `Nest.IIntervalsContainer`

[horizontal]
type:: added

[float]
=== `Nest.IIntervalsFilter`

[horizontal]
type:: added

[float]
=== `Nest.IIntervalsMatch`

[horizontal]
type:: added

[float]
=== `Nest.IIntervalsQuery`

[horizontal]
type:: added


[float]
=== `Nest.IInvalidateApiKeyResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IInvalidateUserAccessTokenResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IIpRange`

[horizontal]
type:: deleted

[float]
=== `Nest.IIpRangeAggregation`

[horizontal]

[float]
=== `Nest.IIpRangeAggregationRange`

[horizontal]
type:: added



















[float]
=== `Nest.ILazyDocument`

[horizontal]
`AsAsync<T>(CancellationToken)` method:: added
`AsAsync(Type, CancellationToken)` method:: added



[float]
=== `Nest.ILikeDocument`

[horizontal]
`Type` property:: deleted






[float]
=== `Nest.IListTasksResponse`

[horizontal]
type:: deleted









[float]
=== `Nest.IMachineLearningInfoResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IMappings`

[horizontal]
type:: deleted












[float]
=== `Nest.IMigrationAssistanceRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.IMigrationAssistanceResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IMigrationUpgradeRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.IMigrationUpgradeResponse`

[horizontal]
type:: deleted










[float]
=== `Nest.IMoveToStepResponse`

[horizontal]
type:: deleted




[float]
=== `Nest.IMultiGetHit<out TDocument>`

[horizontal]
`Parent` property:: deleted

[float]
=== `Nest.IMultiGetOperation`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IMultiGetRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IMultiGetResponse`

[horizontal]
type:: deleted






[float]
=== `Nest.IMultiSearchRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IMultiSearchResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IMultiSearchTemplateRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IMultiTermVectorOperation`

[horizontal]
`Fields` property:: added
`StoredFields` property:: deleted
`Type` property:: deleted

[float]
=== `Nest.IMultiTermVectorsRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IMultiTermVectorsResponse`

[horizontal]
type:: deleted




[float]
=== `Nest.IncludeExclude`

[horizontal]
type:: added

[float]
=== `Nest.IndexAction`

[horizontal]
`DocType` property:: deleted

[float]
=== `Nest.IndexActionDescriptor`

[horizontal]
`DocType<T>()` method:: deleted
`DocType(TypeName)` method:: deleted
`ExecutionTimeField<T>(Expression<Func<T, Object>>)` method:: deleted
`ExecutionTimeField<T, TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.IndexActionResultIndexResponse`

[horizontal]
`Type` property:: deleted


[float]
=== `Nest.IndexDescriptor<TDocument>`

[horizontal]
`IndexDescriptor()` method:: added
`IndexDescriptor(DocumentPath<TDocument>)` method:: deleted
`IndexDescriptor(Id)` method:: added
`IndexDescriptor(IndexName)` method:: added
`IndexDescriptor(IndexName, Id)` method:: added
`IndexDescriptor(IndexName, TypeName)` method:: deleted
`IndexDescriptor(TDocument, IndexName, Id)` method:: added
`IfPrimaryTerm(Nullable<Int64>)` method::
Parameter name changed from `ifPrimaryTerm` to `ifprimaryterm`.
`IfSeqNo(Nullable<Int64>)` method:: deleted
`IfSequenceNumber(Nullable<Int64>)` method:: added
`OpType(Nullable<OpType>)` method::
Parameter name changed from `opType` to `optype`.
`Parent(String)` method:: deleted
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`VersionType(Nullable<VersionType>)` method::
Parameter name changed from `versionType` to `versiontype`.
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.IndexExistsDescriptor`

[horizontal]
`IndexExistsDescriptor()` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`IncludeDefaults(Nullable<Boolean>)` method::
Parameter name changed from `includeDefaults` to `includedefaults`.

[float]
=== `Nest.IndexExistsRequest`

[horizontal]
`IndexExistsRequest()` method:: added




[float]
=== `Nest.IndexManyExtensions`

[horizontal]
`IndexMany<T>(IElasticClient, IEnumerable<T>, IndexName)` method:: added
`IndexMany<T>(IElasticClient, IEnumerable<T>, IndexName, TypeName)` method:: deleted
`IndexManyAsync<T>(IElasticClient, IEnumerable<T>, IndexName, TypeName, CancellationToken)` method:: deleted
`IndexManyAsync<T>(IElasticClient, IEnumerable<T>, IndexName, CancellationToken)` method:: added

[float]
=== `Nest.IndexMappings`

[horizontal]

[float]
=== `Nest.IndexName`

[horizontal]
`Rebuild(String, Type, String)` method::
Member is less visible.


[float]
=== `Nest.IndexRequest<TDocument>`

[horizontal]
`IndexRequest()` method:: added
`IndexRequest(DocumentPath<TDocument>, IndexName, TypeName, Id)` method:: deleted
`IndexRequest(Id)` method:: added
`IndexRequest(IndexName)` method:: added
`IndexRequest(IndexName, Id)` method:: added
`IndexRequest(IndexName, TypeName)` method:: deleted
`IndexRequest(IndexName, TypeName, Id)` method:: deleted
`IndexRequest(TDocument, IndexName, Id)` method:: added
`DefaultRouting()` method:: deleted
`IfSeqNo` property:: deleted
`IfSequenceNumber` property:: added
`Parent` property:: deleted

[float]
=== `Nest.IndexResponse`

[horizontal]
`Id` property:: deleted
`Index` property:: deleted
`IsValid` property:: added
`PrimaryTerm` property:: deleted
`Result` property:: deleted
`SequenceNumber` property:: deleted
`Shards` property:: deleted
`Type` property:: deleted
`Version` property:: deleted

[float]
=== `Nest.IndexRoutingTable`

[horizontal]
type:: deleted





[float]
=== `Nest.IndexState`

[horizontal]


[float]
=== `Nest.IndexTemplateExistsDescriptor`

[horizontal]
`IndexTemplateExistsDescriptor()` method:: added
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.IndexTemplateExistsRequest`

[horizontal]
`IndexTemplateExistsRequest()` method:: added

[float]
=== `Nest.IndexUpgradeCheck`

[horizontal]
type:: deleted

[float]
=== `Nest.Indices`

[horizontal]
`Index(String)` method:: added



[float]
=== `Nest.IndicesResponseBase`

[horizontal]
`Acknowledged` property:: deleted
`ShardsHit` property getter::
changed to non-virtual.


[float]
=== `Nest.IndicesShardStoresDescriptor`

[horizontal]
`IndicesShardStoresDescriptor(Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`OperationThreading(String)` method:: deleted
`Types(TypeName[])` method:: deleted

[float]
=== `Nest.IndicesShardStoresRequest`

[horizontal]
`OperationThreading` property:: deleted
`Types` property:: deleted

[float]
=== `Nest.IndicesShardStoresResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.


[float]
=== `Nest.IndicesStatsDescriptor`

[horizontal]
`IndicesStatsDescriptor(Indices)` method:: added
`IndicesStatsDescriptor(Indices, Metrics)` method:: added
`IndicesStatsDescriptor(Metrics)` method:: added
`CompletionFields(Fields)` method::
Parameter name changed from `completionFields` to `completionfields`.
`FielddataFields(Fields)` method::
Parameter name changed from `fielddataFields` to `fielddatafields`.
`IncludeSegmentFileSizes(Nullable<Boolean>)` method::
Parameter name changed from `includeSegmentFileSizes` to `includesegmentfilesizes`.
`Metric(IndicesStatsMetric)` method:: deleted
`Metric(Metrics)` method:: added
`Types(TypeName[])` method:: deleted

[float]
=== `Nest.IndicesStatsRequest`

[horizontal]
`IndicesStatsRequest(IndicesStatsMetric)` method:: deleted
`IndicesStatsRequest(Indices, IndicesStatsMetric)` method:: deleted
`IndicesStatsRequest(Indices, Metrics)` method:: added
`IndicesStatsRequest(Metrics)` method:: added
`Types` property:: deleted

[float]
=== `Nest.IndicesStatsResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.
`Shards` property getter::
changed to non-virtual.
`Stats` property getter::
changed to non-virtual.






[float]
=== `Nest.Infer`

[horizontal]
`Field<T>(Expression<Func<T, Object>>, Nullable<Double>)` method:: deleted
`Field<T, TValue>(Expression<Func<T, TValue>>, Nullable<Double>, String)` method:: added
`Field(PropertyInfo, Nullable<Double>)` method:: deleted
`Field(String, Nullable<Double>)` method:: deleted
`Property<T, TValue>(Expression<Func<T, TValue>>)` method:: added
`Type<T>()` method:: deleted
`Type(TypeName)` method:: deleted
`Type(TypeName[])` method:: deleted
`Type(IEnumerable<TypeName>)` method:: deleted

[float]
=== `Nest.Inferrer`

[horizontal]
`TypeName<T>()` method:: deleted
`TypeName(TypeName)` method:: deleted


[float]
=== `Nest.InfoContentDetectorDescriptor<T>`

[horizontal]
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`FieldName(Expression<Func<T, Object>>)` method:: deleted
`FieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`OverFieldName(Expression<Func<T, Object>>)` method:: deleted
`OverFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added





[float]
=== `Nest.InlineGet<TDocument>`

[horizontal]
type:: added

[float]
=== `Nest.InlineScript`

[horizontal]
`Inline` property:: deleted

[float]
=== `Nest.InlineScriptCondition`

[horizontal]
`Inline` property:: deleted

[float]
=== `Nest.InlineScriptConditionDescriptor`

[horizontal]
`InlineScriptConditionDescriptor(String)` method::
Parameter name changed from `script` to `source`.

[float]
=== `Nest.InlineScriptDescriptor`

[horizontal]
`Inline(String)` method:: deleted

[float]
=== `Nest.InlineScriptTransform`

[horizontal]
`InlineScriptTransform(String)` method::
Parameter name changed from `script` to `source`.
`Inline` property:: deleted


[float]
=== `Nest.InnerHitsMetadata`

[horizontal]



[float]
=== `Nest.INodesHotThreadsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.INodesInfoResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.INodesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.INodesStatsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.INodesUsageResponse`

[horizontal]
type:: deleted








[float]
=== `Nest.InstantGet<TDocument>`

[horizontal]
type:: deleted



[float]
=== `Nest.IntervalsAllOf`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsAllOfDescriptor`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsAnyOf`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsAnyOfDescriptor`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsBase`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsContainer`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsDescriptor`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsDescriptorBase<TDescriptor, TInterface>`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsFilter`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsFilterDescriptor`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsListDescriptor`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsMatch`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsMatchDescriptor`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsQuery`

[horizontal]
type:: added

[float]
=== `Nest.IntervalsQueryDescriptor<T>`

[horizontal]
type:: added






[float]
=== `Nest.InvalidateApiKeyResponse`

[horizontal]
`ErrorCount` property getter::
changed to non-virtual.
`ErrorDetails` property getter::
changed to non-virtual.
`InvalidatedApiKeys` property getter::
changed to non-virtual.
`PreviouslyInvalidatedApiKeys` property getter::
changed to non-virtual.


[float]
=== `Nest.InvalidateUserAccessTokenResponse`

[horizontal]
`Created` property:: deleted
`ErrorCount` property:: added
`InvalidatedTokens` property:: added
`PreviouslyInvalidatedTokens` property:: added



[float]
=== `Nest.IOpenIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IOpenJobResponse`

[horizontal]
type:: deleted


















[float]
=== `Nest.IPauseFollowIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPercentileRanksAggregation`

[horizontal]
`Keyed` property:: added

[float]
=== `Nest.IPercentilesAggregation`

[horizontal]
`Keyed` property:: added


[float]
=== `Nest.IPercolateQuery`

[horizontal]
`DocumentType` property:: deleted
`Type` property:: deleted











[float]
=== `Nest.IPingResponse`

[horizontal]
type:: deleted








[float]
=== `Nest.IPostCalendarEventsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPostJobDataResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPostLicenseResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IpRange`

[horizontal]
type:: deleted

[float]
=== `Nest.IpRangeAggregation`

[horizontal]

[float]
=== `Nest.IpRangeAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`Ranges(Func<IpRangeAggregationRangeDescriptor, IIpRangeAggregationRange>[])` method:: added
`Ranges(Func<IpRangeDescriptor, IIpRange>[])` method:: deleted

[float]
=== `Nest.IpRangeAggregationRange`

[horizontal]
type:: added

[float]
=== `Nest.IpRangeAggregationRangeDescriptor`

[horizontal]
type:: added

[float]
=== `Nest.IpRangeBucket`

[horizontal]
type:: added

[float]
=== `Nest.IpRangeDescriptor`

[horizontal]
type:: deleted




[float]
=== `Nest.IPreviewDatafeedResponse<out TDocument>`

[horizontal]






[float]
=== `Nest.IPutAliasResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutCalendarJobResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutCalendarResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IPutDatafeedRequest`

[horizontal]
`Types` property:: deleted

[float]
=== `Nest.IPutDatafeedResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutFilterResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutIndexTemplateResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutJobResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IPutLifecycleRequest`

[horizontal]

[float]
=== `Nest.IPutLifecycleResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IPutMappingRequest`

[horizontal]
`Type` property:: deleted


[float]
=== `Nest.IPutMappingResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutPipelineResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutPrivilegesResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutRoleMappingResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutRoleResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutScriptResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutUserResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IPutWatchResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IQueryContainer`

[horizontal]
`Intervals` property:: added
`Type` property:: deleted


[float]
=== `Nest.IQuerySqlResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IQueryStringQuery`

[horizontal]
`Timezone` property:: deleted
`TimeZone` property:: added

[float]
=== `Nest.IQueryVisitor`

[horizontal]
`Visit(IGeoIndexedShapeQuery)` method:: deleted
`Visit(IGeoShapeCircleQuery)` method:: deleted
`Visit(IGeoShapeEnvelopeQuery)` method:: deleted
`Visit(IGeoShapeGeometryCollectionQuery)` method:: deleted
`Visit(IGeoShapeLineStringQuery)` method:: deleted
`Visit(IGeoShapeMultiLineStringQuery)` method:: deleted
`Visit(IGeoShapeMultiPointQuery)` method:: deleted
`Visit(IGeoShapeMultiPolygonQuery)` method:: deleted
`Visit(IGeoShapePointQuery)` method:: deleted
`Visit(IGeoShapePolygonQuery)` method:: deleted
`Visit(IIntervalsQuery)` method:: added
`Visit(ITypeQuery)` method:: deleted







[float]
=== `Nest.IRecoveryStatusResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IRefreshResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IReindexDestination`

[horizontal]
`Type` property:: deleted


[float]
=== `Nest.IReindexOnServerResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IReindexRethrottleResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IReindexSource`

[horizontal]
`Type` property:: deleted



[float]
=== `Nest.IReloadSecureSettingsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IRemoteInfoResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IRemovePolicyResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IRemoveProcessor`

[horizontal]


[float]
=== `Nest.IRenderSearchTemplateRequest`

[horizontal]
`Inline` property:: deleted

[float]
=== `Nest.IRenderSearchTemplateResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IRequest`

[horizontal]
`GetUrl(IConnectionSettingsValues)` method:: added
`ContentType` property:: added
`RequestParameters` property:: added





[float]
=== `Nest.IRestartWatcherRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.IRestartWatcherResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IRestoreResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IResumeFollowIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IRetryIlmResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IRevertModelSnapshotResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IRolloverIndexResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IRolloverLifecycleAction`

[horizontal]
`MaximumSizeAsString` property:: deleted



[float]
=== `Nest.IRollupSearchRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IRollupSearchResponse<T>`

[horizontal]
type:: deleted


[float]
=== `Nest.IRootNodeInfoResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IS3RepositorySettings`

[horizontal]
`AccessKey` property:: deleted
`ConcurrentStreams` property:: deleted
`SecretKey` property:: deleted













[float]
=== `Nest.IScriptProcessor`

[horizontal]
`Inline` property:: deleted

[float]
=== `Nest.IScriptQuery`

[horizontal]
`Id` property:: deleted
`Inline` property:: deleted
`Lang` property:: deleted
`Params` property:: deleted
`Script` property:: added
`Source` property:: deleted

[float]
=== `Nest.IScriptScoreFunction`

[horizontal]





[float]
=== `Nest.ISearchInputRequest`

[horizontal]
`Types` property:: deleted

[float]
=== `Nest.ISearchRequest`

[horizontal]
`Type` property:: deleted


[float]
=== `Nest.ISearchResponse<out TDocument>`

[horizontal]
`Aggs` property:: deleted


[float]
=== `Nest.ISearchShardsResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.ISearchTemplateRequest`

[horizontal]
`Inline` property:: deleted
`Type` property:: deleted



[float]
=== `Nest.ISegmentsResponse`

[horizontal]
type:: deleted





[float]
=== `Nest.IShardsOperationResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IShrinkIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.ISignificantTermsAggregation`

[horizontal]

[float]
=== `Nest.ISignificantTextAggregation`

[horizontal]






[float]
=== `Nest.ISimulatePipelineDocument`

[horizontal]
`Type` property:: deleted


[float]
=== `Nest.ISimulatePipelineResponse`

[horizontal]
type:: deleted












[float]
=== `Nest.ISnapshotResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.ISnapshotStatusResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.ISort`

[horizontal]
`NestedFilter` property:: deleted
`NestedPath` property:: deleted

[float]
=== `Nest.ISortOrder`

[horizontal]
type:: added


[float]
=== `Nest.ISourceExistsRequest`

[horizontal]
`Type` property:: deleted




[float]
=== `Nest.ISourceRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.ISourceResponse<out TDocument>`

[horizontal]













[float]
=== `Nest.ISplitIndexResponse`

[horizontal]
type:: deleted




[float]
=== `Nest.IStandardTokenFilter`

[horizontal]
type:: deleted



[float]
=== `Nest.IStartBasicLicenseResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IStartDatafeedResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IStartIlmResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IStartRollupJobResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IStartTrialLicenseResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IStartWatcherResponse`

[horizontal]
type:: deleted








[float]
=== `Nest.IStopDatafeedResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IStopIlmResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IStopRollupJobResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IStopWatcherResponse`

[horizontal]
type:: deleted




[float]
=== `Nest.ISuggest<out T>`

[horizontal]
type:: added





[float]
=== `Nest.ISuggestDictionary<out T>`

[horizontal]
type:: added


[float]
=== `Nest.ISuggestFuzziness`

[horizontal]
type:: added

[float]
=== `Nest.ISuggestOption<out TDocument>`

[horizontal]
type:: added




[float]
=== `Nest.ISyncedFlushResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.ISynonymGraphTokenFilter`

[horizontal]
`IgnoreCase` property:: deleted

[float]
=== `Nest.ISynonymTokenFilter`

[horizontal]
`IgnoreCase` property:: deleted


[float]
=== `Nest.ITemplateMapping`

[horizontal]








[float]
=== `Nest.ITermSuggester`

[horizontal]


[float]
=== `Nest.ITermVectors`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.ITermVectorsRequest<TDocument>`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.ITermVectorsResponse`

[horizontal]
type:: deleted
















[float]
=== `Nest.ITranslateSqlResponse`

[horizontal]
type:: deleted






[float]
=== `Nest.ITypedSearchRequest`

[horizontal]
type:: added

[float]
=== `Nest.ITypeExistsRequest`

[horizontal]


[float]
=== `Nest.ITypeQuery`

[horizontal]
type:: deleted



[float]
=== `Nest.IUnfollowIndexResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IUpdateByQueryRequest`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IUpdateByQueryResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IUpdateDatafeedRequest`

[horizontal]
`Types` property:: deleted

[float]
=== `Nest.IUpdateDatafeedResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IUpdateFilterResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IUpdateIndexSettingsResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IUpdateJobResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IUpdateModelSnapshotResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IUpdateRequest<TDocument, TPartialDocument>`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.IUpdateResponse<out TDocument>`

[horizontal]
`Id` property:: deleted
`Index` property:: deleted
`Result` property:: deleted
`ShardsHit` property:: deleted
`Type` property:: deleted
`Version` property:: deleted

[float]
=== `Nest.IUpgradeRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.IUpgradeResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IUpgradeStatusRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.IUpgradeStatusResponse`

[horizontal]
type:: deleted





[float]
=== `Nest.IValidateDetectorResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IValidateJobResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IValidateQueryRequest`

[horizontal]
`Type` property:: deleted


[float]
=== `Nest.IValidateQueryResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.IVerifyRepositoryResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.IWatch`

[horizontal]
type:: added

[float]
=== `Nest.IWatcherStatsRequest`

[horizontal]
`Metric` property:: added
`WatcherStatsMetric` property:: deleted

[float]
=== `Nest.IWatcherStatsResponse`

[horizontal]
type:: deleted











[float]
=== `Nest.IXPackInfoResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.IXPackUsageResponse`

[horizontal]
type:: deleted








[float]
=== `.Child`

[horizontal]
`Parent` property:: deleted
`ParentId` property:: added

[float]
=== `Nest.JoinProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.JsonProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.KeepTypesTokenFilter`

[horizontal]
`Mode` property getter::
changed to virtual.
`Mode` property setter::
changed to virtual.
`Types` property getter::
changed to virtual.
`Types` property setter::
changed to virtual.


[float]
=== `Nest.KeyValueProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added





[float]
=== `Nest.LatLongDetectorDescriptor<T>`

[horizontal]
`LatLongDetectorDescriptor(String)` method:: deleted
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`FieldName(Expression<Func<T, Object>>)` method:: deleted
`FieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`OverFieldName(Expression<Func<T, Object>>)` method:: deleted
`OverFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.LazyDocument`

[horizontal]
`AsAsync<T>(CancellationToken)` method:: added
`AsAsync(Type, CancellationToken)` method:: added





[float]
=== `Nest.LifecycleActions`

[horizontal]
`LifecycleActions(Dictionary<String, ILifecycleAction>)` method:: deleted

[float]
=== `Nest.LifecycleExplain`

[horizontal]




[float]
=== `Nest.LikeDocumentBase`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.LikeDocumentDescriptor<TDocument>`

[horizontal]
`Type(TypeName)` method:: deleted


[float]
=== `Nest.LineStringGeoShape`

[horizontal]
`LineStringGeoShape()` method::
Member is less visible.

[float]
=== `Nest.ListTasksDescriptor`

[horizontal]
`GroupBy(Nullable<GroupBy>)` method::
Parameter name changed from `groupBy` to `groupby`.
`ParentNode(String)` method:: deleted
`ParentTaskId(String)` method::
Parameter name changed from `parentTaskId` to `parenttaskid`.
`WaitForCompletion(Nullable<Boolean>)` method::
Parameter name changed from `waitForCompletion` to `waitforcompletion`.

[float]
=== `Nest.ListTasksRequest`

[horizontal]
`ParentNode` property:: deleted

[float]
=== `Nest.ListTasksResponse`

[horizontal]
`NodeFailures` property getter::
changed to non-virtual.
`Nodes` property getter::
changed to non-virtual.



[float]
=== `Nest.LongId`

[horizontal]
type:: added



[float]
=== `Nest.LowercaseProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.MachineLearningInfoResponse`

[horizontal]
`Defaults` property getter::
changed to non-virtual.
`Limits` property getter::
changed to non-virtual.
`UpgradeMode` property getter::
changed to non-virtual.







[float]
=== `Nest.Mappings`

[horizontal]
`Mappings(Dictionary<TypeName, ITypeMapping>)` method:: deleted
`Mappings(IDictionary<TypeName, ITypeMapping>)` method:: deleted
`Add(TypeName, ITypeMapping)` method:: deleted
`Add(Object, ITypeMapping)` method:: added
`GetEnumerator()` method:: added
`Item` property:: added

[float]
=== `Nest.MappingsDescriptor`

[horizontal]
`AssignMap(IPromise<IMappings>)` method:: deleted
`Map(TypeName, Func<TypeMappingDescriptor<Object>, ITypeMapping>)` method:: deleted
`Map<T>(TypeName, Func<TypeMappingDescriptor<T>, ITypeMapping>)` method:: deleted
`Map(Func<TypeMappingDescriptor<Object>, ITypeMapping>)` method:: added
`Map<T>(Func<TypeMappingDescriptor<T>, ITypeMapping>)` method::
Method changed to non-virtual.
`Map(Object, Func<TypeMappingDescriptor<Object>, ITypeMapping>)` method:: added
`Map<T>(Object, Func<TypeMappingDescriptor<T>, ITypeMapping>)` method:: added

[float]
=== `Nest.MappingWalker`

[horizontal]
`Accept(GetMappingResponse)` method:: added
`Accept(IGetMappingResponse)` method:: deleted



[float]
=== `Nest.MatrixAggregateBase`

[horizontal]
`Meta` property setter::
changed to non-virtual.

[float]
=== `Nest.MatrixStatsAggregate`

[horizontal]




[float]
=== `Nest.MergesStats`

[horizontal]

[float]
=== `Nest.MetadataIndexState`

[horizontal]
type:: deleted

[float]
=== `Nest.MetadataState`

[horizontal]
type:: deleted

[float]
=== `Nest.MetricAggregateBase`

[horizontal]
`Meta` property setter::
changed to non-virtual.

[float]
=== `Nest.MetricAggregationDescriptorBase<TMetricAggregation, TMetricAggregationInterface, T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.MetricDetectorDescriptor<T>`

[horizontal]
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`FieldName(Expression<Func<T, Object>>)` method:: deleted
`FieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`OverFieldName(Expression<Func<T, Object>>)` method:: deleted
`OverFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.MigrationAssistanceDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.MigrationAssistanceRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.MigrationAssistanceResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.MigrationUpgradeDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.MigrationUpgradeRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.MigrationUpgradeResponse`

[horizontal]
type:: deleted



[float]
=== `Nest.MissingAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added





[float]
=== `Nest.MoveToStepDescriptor`

[horizontal]
`MoveToStepDescriptor()` method:: added
`MasterTimeout(Time)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.MoveToStepRequest`

[horizontal]
`MoveToStepRequest()` method:: added
`MasterTimeout` property:: deleted
`Timeout` property:: deleted

[float]
=== `Nest.MultiBucketAggregate<TBucket>`

[horizontal]
`Meta` property setter::
changed to non-virtual.

[float]
=== `Nest.MultiGetDescriptor`

[horizontal]
`MultiGetDescriptor(IndexName)` method:: added
`RequestDefaults(MultiGetRequestParameters)` method:: added
`SourceEnabled(Nullable<Boolean>)` method::
Parameter name changed from `sourceEnabled` to `sourceenabled`.
`SourceExclude(Fields)` method:: deleted
`SourceExclude<T>(Expression<Func<T, Object>>[])` method:: deleted
`SourceExcludes(Fields)` method:: added
`SourceExcludes<T>(Expression<Func<T, Object>>[])` method:: added
`SourceInclude(Fields)` method:: deleted
`SourceInclude<T>(Expression<Func<T, Object>>[])` method:: deleted
`SourceIncludes(Fields)` method:: added
`SourceIncludes<T>(Expression<Func<T, Object>>[])` method:: added
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted

[float]
=== `Nest.MultiGetHit<TDocument>`

[horizontal]
`Parent` property:: deleted

[float]
=== `Nest.MultiGetOperation<T>`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.MultiGetOperationDescriptor<T>`

[horizontal]
`Type(TypeName)` method:: deleted

[float]
=== `Nest.MultiGetRequest`

[horizontal]
`MultiGetRequest(IndexName, TypeName)` method:: deleted
`RequestDefaults(MultiGetRequestParameters)` method:: added
`SourceExclude` property:: deleted
`SourceExcludes` property:: added
`SourceInclude` property:: deleted
`SourceIncludes` property:: added

[float]
=== `Nest.MultiGetResponse`

[horizontal]
`Get<T>(Int64)` method::
Method changed to non-virtual.
`Get<T>(String)` method::
Method changed to non-virtual.
`GetFieldSelection<T>(Int64)` method::
Method changed to non-virtual.
`GetFieldValues<T>(String)` method::
Method changed to non-virtual.
`GetMany<T>(IEnumerable<Int64>)` method::
Method changed to non-virtual.
`GetMany<T>(IEnumerable<String>)` method::
Method changed to non-virtual.
`Source<T>(Int64)` method::
Method changed to non-virtual.
`Source<T>(String)` method::
Method changed to non-virtual.
`SourceMany<T>(IEnumerable<Int64>)` method::
Method changed to non-virtual.
`SourceMany<T>(IEnumerable<String>)` method::
Method changed to non-virtual.
`Hits` property getter::
changed to non-virtual.

[float]
=== `Nest.MultiLineStringGeoShape`

[horizontal]
`MultiLineStringGeoShape()` method::
Member is less visible.


[float]
=== `Nest.MultipleMappingsDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.MultiPointGeoShape`

[horizontal]
`MultiPointGeoShape()` method::
Member is less visible.

[float]
=== `Nest.MultiPolygonGeoShape`

[horizontal]
`MultiPolygonGeoShape()` method::
Member is less visible.

[float]
=== `Nest.MultiSearchDescriptor`

[horizontal]
`MultiSearchDescriptor(Indices)` method:: added
`AllTypes()` method:: deleted
`CcsMinimizeRoundtrips(Nullable<Boolean>)` method:: added
`Initialize()` method:: deleted
`MaxConcurrentSearches(Nullable<Int64>)` method::
Parameter name changed from `maxConcurrentSearches` to `maxconcurrentsearches`.
`MaxConcurrentShardRequests(Nullable<Int64>)` method::
Parameter name changed from `maxConcurrentShardRequests` to `maxconcurrentshardrequests`.
`PreFilterShardSize(Nullable<Int64>)` method::
Parameter name changed from `preFilterShardSize` to `prefiltershardsize`.
`RequestDefaults(MultiSearchRequestParameters)` method:: added
`SearchType(Nullable<SearchType>)` method::
Parameter name changed from `searchType` to `searchtype`.
`TotalHitsAsInteger(Nullable<Boolean>)` method::
Parameter name changed from `totalHitsAsInteger` to `totalhitsasinteger`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted
`TypedKeys(Nullable<Boolean>)` method::
Parameter name changed from `typedKeys` to `typedkeys`.

[float]
=== `Nest.MultiSearchRequest`

[horizontal]
`MultiSearchRequest(Indices, Types)` method:: deleted
`Initialize()` method:: deleted
`RequestDefaults(MultiSearchRequestParameters)` method:: added
`CcsMinimizeRoundtrips` property:: added

[float]
=== `Nest.MultiSearchResponse`

[horizontal]
`GetInvalidResponses()` method::
Method changed to non-virtual.
`GetResponse<T>(String)` method::
Method changed to non-virtual.
`GetResponses<T>()` method::
Method changed to non-virtual.
`AllResponses` property getter::
changed to non-virtual.
`Took` property:: added
`TotalResponses` property getter::
changed to non-virtual.

[float]
=== `Nest.MultiSearchTemplateDescriptor`

[horizontal]
`MultiSearchTemplateDescriptor(Indices)` method:: added
`AllTypes()` method:: deleted
`CcsMinimizeRoundtrips(Nullable<Boolean>)` method:: added
`Initialize()` method:: deleted
`MaxConcurrentSearches(Nullable<Int64>)` method::
Parameter name changed from `maxConcurrentSearches` to `maxconcurrentsearches`.
`RequestDefaults(MultiSearchTemplateRequestParameters)` method:: added
`SearchType(Nullable<SearchType>)` method::
Parameter name changed from `searchType` to `searchtype`.
`TotalHitsAsInteger(Nullable<Boolean>)` method::
Parameter name changed from `totalHitsAsInteger` to `totalhitsasinteger`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted
`TypedKeys(Nullable<Boolean>)` method::
Parameter name changed from `typedKeys` to `typedkeys`.

[float]
=== `Nest.MultiSearchTemplateRequest`

[horizontal]
`MultiSearchTemplateRequest(Indices, Types)` method:: deleted
`Initialize()` method:: deleted
`RequestDefaults(MultiSearchTemplateRequestParameters)` method:: added
`CcsMinimizeRoundtrips` property:: added


[float]
=== `Nest.MultiTermVectorOperation<T>`

[horizontal]
`Fields` property:: added
`StoredFields` property:: deleted
`Type` property:: deleted

[float]
=== `Nest.MultiTermVectorOperationDescriptor<T>`

[horizontal]
`Fields(Fields)` method:: added
`Fields(Func<FieldsDescriptor<T>, IPromise<Fields>>)` method:: added
`StoredFields(Fields)` method:: deleted
`StoredFields(Func<FieldsDescriptor<T>, IPromise<Fields>>)` method:: deleted
`Type(TypeName)` method:: deleted

[float]
=== `Nest.MultiTermVectorsDescriptor`

[horizontal]
`MultiTermVectorsDescriptor(IndexName)` method:: added
`Documents<T>(IEnumerable<Id>, Func<MultiTermVectorOperationDescriptor<T>, Id, IMultiTermVectorOperation>)` method:: added
`Documents<T>(IEnumerable<Int64>, Func<MultiTermVectorOperationDescriptor<T>, Int64, IMultiTermVectorOperation>)` method:: added
`Documents<T>(IEnumerable<String>, Func<MultiTermVectorOperationDescriptor<T>, String, IMultiTermVectorOperation>)` method:: added
`Documents<T>(Func<MultiTermVectorOperationDescriptor<T>, IMultiTermVectorOperation>)` method:: added
`FieldStatistics(Nullable<Boolean>)` method::
Parameter name changed from `fieldStatistics` to `fieldstatistics`.
`Get<T>(Func<MultiTermVectorOperationDescriptor<T>, IMultiTermVectorOperation>)` method:: deleted
`GetMany<T>(IEnumerable<Id>, Func<MultiTermVectorOperationDescriptor<T>, Id, IMultiTermVectorOperation>)` method:: deleted
`GetMany<T>(IEnumerable<Int64>, Func<MultiTermVectorOperationDescriptor<T>, Int64, IMultiTermVectorOperation>)` method:: deleted
`GetMany<T>(IEnumerable<String>, Func<MultiTermVectorOperationDescriptor<T>, String, IMultiTermVectorOperation>)` method:: deleted
`Parent(String)` method:: deleted
`TermStatistics(Nullable<Boolean>)` method::
Parameter name changed from `termStatistics` to `termstatistics`.
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`VersionType(Nullable<VersionType>)` method::
Parameter name changed from `versionType` to `versiontype`.

[float]
=== `Nest.MultiTermVectorsRequest`

[horizontal]
`MultiTermVectorsRequest(IndexName, TypeName)` method:: deleted
`Parent` property:: deleted

[float]
=== `Nest.MultiTermVectorsResponse`

[horizontal]
`Documents` property getter::
changed to non-virtual.


[float]
=== `Nest.NamespacedClientProxy`

[horizontal]
type:: added


[float]
=== `Nest.NestedAggregationDescriptor<T>`

[horizontal]
`Path(Expression<Func<T, Object>>)` method:: deleted
`Path<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.NestedQueryDescriptor<T>`

[horizontal]
`Path(Expression<Func<T, Object>>)` method:: deleted
`Path<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.NestedSortDescriptor<T>`

[horizontal]
`Path(Expression<Func<T, Object>>)` method:: deleted
`Path<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.NodeInfo`

[horizontal]


[float]
=== `Nest.NodeInfoJvmMemory`

[horizontal]
type:: added

[float]
=== `Nest.NodeInfoJVMMemory`

[horizontal]
type:: deleted







[float]
=== `Nest.NodeJvmInfo`

[horizontal]
`GcCollectors` property:: added
`GCCollectors` property:: deleted
`Pid` property:: added
`PID` property:: deleted

[float]
=== `Nest.NodeJvmStats`

[horizontal]


[float]
=== `.GarbageCollectionStats`

[horizontal]


[float]
=== `.MemoryStats`

[horizontal]

[float]
=== `.JvmPool`

[horizontal]
type:: added

[float]
=== `.JVMPool`

[horizontal]
type:: deleted






[float]
=== `Nest.NodesHotThreadsDescriptor`

[horizontal]
`NodesHotThreadsDescriptor(NodeIds)` method:: added
`IgnoreIdleThreads(Nullable<Boolean>)` method::
Parameter name changed from `ignoreIdleThreads` to `ignoreidlethreads`.
`RequestDefaults(NodesHotThreadsRequestParameters)` method:: added
`ThreadType(Nullable<ThreadType>)` method::
Parameter name changed from `threadType` to `threadtype`.
`ContentType` property:: added

[float]
=== `Nest.NodesHotThreadsRequest`

[horizontal]
`NodesHotThreadsRequest(NodeIds)` method::
Parameter name changed from `node_id` to `nodeId`.
`RequestDefaults(NodesHotThreadsRequestParameters)` method:: added
`ContentType` property:: added

[float]
=== `Nest.NodesHotThreadsResponse`

[horizontal]
`HotThreads` property getter::
changed to non-virtual.

[float]
=== `Nest.NodesInfoDescriptor`

[horizontal]
`NodesInfoDescriptor(Metrics)` method:: added
`NodesInfoDescriptor(NodeIds)` method:: added
`NodesInfoDescriptor(NodeIds, Metrics)` method:: added
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`Metric(NodesInfoMetric)` method:: deleted
`Metric(Metrics)` method:: added

[float]
=== `Nest.NodesInfoRequest`

[horizontal]
`NodesInfoRequest(NodesInfoMetric)` method:: deleted
`NodesInfoRequest(Metrics)` method:: added
`NodesInfoRequest(NodeIds)` method::
Parameter name changed from `node_id` to `nodeId`.
`NodesInfoRequest(NodeIds, NodesInfoMetric)` method:: deleted
`NodesInfoRequest(NodeIds, Metrics)` method:: added

[float]
=== `Nest.NodesInfoResponse`

[horizontal]
`ClusterName` property getter::
changed to non-virtual.
`Nodes` property getter::
changed to non-virtual.

[float]
=== `Nest.NodesResponseBase`

[horizontal]
`NodeStatistics` property getter::
changed to non-virtual.

[float]
=== `Nest.NodesStatsDescriptor`

[horizontal]
`NodesStatsDescriptor(Metrics)` method:: added
`NodesStatsDescriptor(Metrics, IndexMetrics)` method:: added
`NodesStatsDescriptor(NodeIds)` method:: added
`NodesStatsDescriptor(NodeIds, Metrics)` method:: added
`NodesStatsDescriptor(NodeIds, Metrics, IndexMetrics)` method:: added
`CompletionFields(Fields)` method::
Parameter name changed from `completionFields` to `completionfields`.
`FielddataFields(Fields)` method::
Parameter name changed from `fielddataFields` to `fielddatafields`.
`IncludeSegmentFileSizes(Nullable<Boolean>)` method::
Parameter name changed from `includeSegmentFileSizes` to `includesegmentfilesizes`.
`IndexMetric(NodesStatsIndexMetric)` method:: deleted
`IndexMetric(IndexMetrics)` method:: added
`Metric(NodesStatsMetric)` method:: deleted
`Metric(Metrics)` method:: added

[float]
=== `Nest.NodesStatsRequest`

[horizontal]
`NodesStatsRequest(NodesStatsMetric)` method:: deleted
`NodesStatsRequest(NodesStatsMetric, NodesStatsIndexMetric)` method:: deleted
`NodesStatsRequest(Metrics)` method:: added
`NodesStatsRequest(Metrics, IndexMetrics)` method:: added
`NodesStatsRequest(NodeIds)` method::
Parameter name changed from `node_id` to `nodeId`.
`NodesStatsRequest(NodeIds, NodesStatsMetric)` method:: deleted
`NodesStatsRequest(NodeIds, NodesStatsMetric, NodesStatsIndexMetric)` method:: deleted
`NodesStatsRequest(NodeIds, Metrics)` method:: added
`NodesStatsRequest(NodeIds, Metrics, IndexMetrics)` method:: added

[float]
=== `Nest.NodesStatsResponse`

[horizontal]
`ClusterName` property getter::
changed to non-virtual.
`Nodes` property getter::
changed to non-virtual.

[float]
=== `Nest.NodeState`

[horizontal]
type:: deleted


[float]
=== `Nest.NodeStats`

[horizontal]

[float]
=== `Nest.NodesUsageDescriptor`

[horizontal]
`NodesUsageDescriptor(Metrics)` method:: added
`NodesUsageDescriptor(NodeIds)` method:: added
`NodesUsageDescriptor(NodeIds, Metrics)` method:: added
`Metric(NodesUsageMetric)` method:: deleted
`Metric(Metrics)` method:: added

[float]
=== `Nest.NodesUsageRequest`

[horizontal]
`NodesUsageRequest(NodesUsageMetric)` method:: deleted
`NodesUsageRequest(Metrics)` method:: added
`NodesUsageRequest(NodeIds)` method::
Parameter name changed from `node_id` to `nodeId`.
`NodesUsageRequest(NodeIds, NodesUsageMetric)` method:: deleted
`NodesUsageRequest(NodeIds, Metrics)` method:: added

[float]
=== `Nest.NodesUsageResponse`

[horizontal]
`ClusterName` property getter::
changed to non-virtual.
`Nodes` property getter::
changed to non-virtual.

[float]
=== `Nest.NodeThreadPoolInfo`

[horizontal]
`Core` property:: added
`Min` property:: deleted
`Size` property:: added


[float]
=== `Nest.NonNullSumDetectorDescriptor<T>`

[horizontal]
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`FieldName(Expression<Func<T, Object>>)` method:: deleted
`FieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.NonZeroCountDetectorDescriptor<T>`

[horizontal]
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added






[float]
=== `Nest.ObjectPropertyDescriptorBase<TDescriptor, TInterface, TParent, TChild>`

[horizontal]
`ObjectPropertyDescriptorBase(FieldType)` method::
Parameter name changed from `type` to `fieldType`.

[float]
=== `Nest.ObsoleteMappingsBase`

[horizontal]
type:: added

[float]
=== `Nest.OpenIndexDescriptor`

[horizontal]
`OpenIndexDescriptor()` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.OpenIndexRequest`

[horizontal]
`OpenIndexRequest()` method:: added

[float]
=== `Nest.OpenJobDescriptor`

[horizontal]
`OpenJobDescriptor()` method:: added
`OpenJobDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.OpenJobRequest`

[horizontal]
`OpenJobRequest()` method:: added
`OpenJobRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.OpenJobResponse`

[horizontal]
`Opened` property getter::
changed to non-virtual.
















[float]
=== `Nest.PauseFollowIndexDescriptor`

[horizontal]
`PauseFollowIndexDescriptor()` method:: added

[float]
=== `Nest.PauseFollowIndexRequest`

[horizontal]
`PauseFollowIndexRequest()` method:: added


[float]
=== `Nest.PercentileItem`

[horizontal]

[float]
=== `Nest.PercentileRanksAggregation`

[horizontal]
`Keyed` property:: added

[float]
=== `Nest.PercentileRanksAggregationDescriptor<T>`

[horizontal]
`Keyed(Nullable<Boolean>)` method:: added

[float]
=== `Nest.PercentilesAggregation`

[horizontal]
`Keyed` property:: added

[float]
=== `Nest.PercentilesAggregationDescriptor<T>`

[horizontal]
`Keyed(Nullable<Boolean>)` method:: added

[float]
=== `Nest.PercolateQuery`

[horizontal]
`DocumentType` property:: deleted
`Type` property:: deleted

[float]
=== `Nest.PercolateQueryDescriptor<T>`

[horizontal]
`DocumentType<TDocument>()` method:: deleted
`DocumentType(TypeName)` method:: deleted
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`Type<TDocument>()` method:: deleted
`Type(TypeName)` method:: deleted

[float]
=== `Nest.PerFieldAnalyzer<T>`

[horizontal]
`Add(Expression<Func<T, Object>>, String)` method:: deleted
`Add<TValue>(Expression<Func<T, TValue>>, String)` method:: added

[float]
=== `Nest.PerFieldAnalyzerDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>, String)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>, String)` method:: added

[float]
=== `Nest.PhaseExecution`

[horizontal]








[float]
=== `Nest.PlainRequestBase<TParameters>`

[horizontal]
`SourceQueryString` property:: added

[float]
=== `Nest.PluginStats`

[horizontal]
`ExtendedPlugins` property:: added
`Isolated` property:: deleted
`Jvm` property:: deleted
`Site` property:: deleted

[float]
=== `Nest.PointGeoShape`

[horizontal]
`PointGeoShape()` method::
Member is less visible.

[float]
=== `Nest.PolicyId`

[horizontal]
type:: deleted

[float]
=== `Nest.PolygonGeoShape`

[horizontal]
`PolygonGeoShape()` method::
Member is less visible.

[float]
=== `Nest.PostCalendarEventsDescriptor`

[horizontal]
`PostCalendarEventsDescriptor()` method:: added
`PostCalendarEventsDescriptor(Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.PostCalendarEventsRequest`

[horizontal]
`PostCalendarEventsRequest()` method:: added
`PostCalendarEventsRequest(Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.PostCalendarEventsResponse`

[horizontal]
`Events` property getter::
changed to non-virtual.

[float]
=== `Nest.PostJobDataDescriptor`

[horizontal]
`PostJobDataDescriptor()` method:: added
`PostJobDataDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`ResetEnd(Nullable<DateTimeOffset>)` method::
Parameter name changed from `resetEnd` to `resetend`.
`ResetStart(Nullable<DateTimeOffset>)` method::
Parameter name changed from `resetStart` to `resetstart`.

[float]
=== `Nest.PostJobDataRequest`

[horizontal]
`PostJobDataRequest()` method:: added
`PostJobDataRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.PostJobDataResponse`

[horizontal]
`BucketCount` property getter::
changed to non-virtual.
`EarliestRecordTimestamp` property getter::
changed to non-virtual.
`EmptyBucketCount` property getter::
changed to non-virtual.
`InputBytes` property getter::
changed to non-virtual.
`InputFieldCount` property getter::
changed to non-virtual.
`InputRecordCount` property getter::
changed to non-virtual.
`InvalidDateCount` property getter::
changed to non-virtual.
`JobId` property getter::
changed to non-virtual.
`LastDataTime` property getter::
changed to non-virtual.
`LatestRecordTimestamp` property getter::
changed to non-virtual.
`MissingFieldCount` property getter::
changed to non-virtual.
`OutOfOrderTimestampCount` property getter::
changed to non-virtual.
`ProcessedFieldCount` property getter::
changed to non-virtual.
`ProcessedRecordCount` property getter::
changed to non-virtual.
`SparseBucketCount` property getter::
changed to non-virtual.


[float]
=== `Nest.PostLicenseResponse`

[horizontal]
`Acknowledge` property getter::
changed to non-virtual.
`Acknowledged` property getter::
changed to non-virtual.
`LicenseStatus` property getter::
changed to non-virtual.


[float]
=== `Nest.PreventMappingMultipleTypesDescriptor`

[horizontal]
type:: added

[float]
=== `Nest.PreviewDatafeedDescriptor`

[horizontal]
`PreviewDatafeedDescriptor()` method:: added
`PreviewDatafeedDescriptor(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.

[float]
=== `Nest.PreviewDatafeedRequest`

[horizontal]
`PreviewDatafeedRequest()` method:: added
`PreviewDatafeedRequest(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.

[float]
=== `Nest.PreviewDatafeedResponse<TDocument>`

[horizontal]

[float]
=== `Nest.ProcessorsDescriptor`

[horizontal]
`KeyValue<T>(Func<UserAgentProcessorDescriptor<T>, IUserAgentProcessor>)` method:: deleted






[float]
=== `Nest.Properties<T>`

[horizontal]
`Add(Expression<Func<T, Object>>, IProperty)` method:: deleted
`Add<TValue>(Expression<Func<T, TValue>>, IProperty)` method:: added

[float]
=== `Nest.PropertyDescriptorBase<TDescriptor, TInterface, T>`

[horizontal]
`Name(Expression<Func<T, Object>>)` method:: deleted
`Name<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.PropertyNameAttribute`

[horizontal]
`AllowPrivate` property:: added
`Ignore` property:: added
`Name` property getter::
changed to virtual.
`Name` property setter::
changed to virtual.
`Order` property:: added

[float]
=== `Nest.PutAliasDescriptor`

[horizontal]
`PutAliasDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.PutAliasRequest`

[horizontal]
`PutAliasRequest()` method:: added

[float]
=== `Nest.PutCalendarDescriptor`

[horizontal]
`PutCalendarDescriptor()` method:: added
`PutCalendarDescriptor(Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.PutCalendarJobDescriptor`

[horizontal]
`PutCalendarJobDescriptor()` method:: added
`PutCalendarJobDescriptor(Id, Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.PutCalendarJobRequest`

[horizontal]
`PutCalendarJobRequest()` method:: added
`PutCalendarJobRequest(Id, Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.PutCalendarJobResponse`

[horizontal]
`CalendarId` property getter::
changed to non-virtual.
`Description` property getter::
changed to non-virtual.
`JobIds` property getter::
changed to non-virtual.

[float]
=== `Nest.PutCalendarRequest`

[horizontal]
`PutCalendarRequest()` method:: added
`PutCalendarRequest(Id)` method::
Parameter name changed from `calendar_id` to `calendarId`.

[float]
=== `Nest.PutCalendarResponse`

[horizontal]
`CalendarId` property getter::
changed to non-virtual.
`Description` property getter::
changed to non-virtual.
`JobIds` property getter::
changed to non-virtual.

[float]
=== `Nest.PutDatafeedDescriptor<TDocument>`

[horizontal]
`PutDatafeedDescriptor()` method:: added
`PutDatafeedDescriptor(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.
`Aggregations(Func<AggregationContainerDescriptor<T>, IAggregationContainer>)` method:: deleted
`Aggregations(Func<AggregationContainerDescriptor<TDocument>, IAggregationContainer>)` method:: added
`AllIndices()` method::
Member type changed from `PutDatafeedDescriptor<T>` to `PutDatafeedDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`ChunkingConfig(Func<ChunkingConfigDescriptor, IChunkingConfig>)` method::
Member type changed from `PutDatafeedDescriptor<T>` to `PutDatafeedDescriptor<TDocument>`.
`Frequency(Time)` method::
Member type changed from `PutDatafeedDescriptor<T>` to `PutDatafeedDescriptor<TDocument>`.
`Indices<TOther>()` method::
Member type changed from `PutDatafeedDescriptor<T>` to `PutDatafeedDescriptor<TDocument>`.
`Indices(Indices)` method::
Member type changed from `PutDatafeedDescriptor<T>` to `PutDatafeedDescriptor<TDocument>`.
`JobId(Id)` method::
Member type changed from `PutDatafeedDescriptor<T>` to `PutDatafeedDescriptor<TDocument>`.
`Query(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`Query(Func<QueryContainerDescriptor<TDocument>, QueryContainer>)` method:: added
`QueryDelay(Time)` method::
Member type changed from `PutDatafeedDescriptor<T>` to `PutDatafeedDescriptor<TDocument>`.
`ScriptFields(Func<ScriptFieldsDescriptor, IPromise<IScriptFields>>)` method::
Member type changed from `PutDatafeedDescriptor<T>` to `PutDatafeedDescriptor<TDocument>`.
`ScrollSize(Nullable<Int32>)` method::
Member type changed from `PutDatafeedDescriptor<T>` to `PutDatafeedDescriptor<TDocument>`.
`Types<TOther>()` method:: deleted
`Types(Types)` method:: deleted

[float]
=== `Nest.PutDatafeedRequest`

[horizontal]
`PutDatafeedRequest()` method:: added
`PutDatafeedRequest(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.
`Types` property:: deleted

[float]
=== `Nest.PutDatafeedResponse`

[horizontal]
`Aggregations` property getter::
changed to non-virtual.
`ChunkingConfig` property getter::
changed to non-virtual.
`DatafeedId` property getter::
changed to non-virtual.
`Frequency` property getter::
changed to non-virtual.
`Indices` property getter::
changed to non-virtual.
`JobId` property getter::
changed to non-virtual.
`Query` property getter::
changed to non-virtual.
`QueryDelay` property getter::
changed to non-virtual.
`ScriptFields` property getter::
changed to non-virtual.
`ScrollSize` property getter::
changed to non-virtual.
`Types` property:: deleted

[float]
=== `Nest.PutFilterDescriptor`

[horizontal]
`PutFilterDescriptor()` method:: added
`PutFilterDescriptor(Id)` method::
Parameter name changed from `filter_id` to `filterId`.

[float]
=== `Nest.PutFilterRequest`

[horizontal]
`PutFilterRequest()` method:: added
`PutFilterRequest(Id)` method::
Parameter name changed from `filter_id` to `filterId`.

[float]
=== `Nest.PutFilterResponse`

[horizontal]
`Description` property getter::
changed to non-virtual.
`FilterId` property getter::
changed to non-virtual.
`Items` property getter::
changed to non-virtual.

[float]
=== `Nest.PutIndexTemplateDescriptor`

[horizontal]
`PutIndexTemplateDescriptor()` method:: added
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`IncludeTypeName(Nullable<Boolean>)` method::
Parameter name changed from `includeTypeName` to `includetypename`.
`Map(Func<TypeMappingDescriptor<Object>, ITypeMapping>)` method:: added
`Map<T>(Func<TypeMappingDescriptor<T>, ITypeMapping>)` method:: added
`Mappings(Func<MappingsDescriptor, IPromise<IMappings>>)` method:: deleted
`Mappings(Func<MappingsDescriptor, ITypeMapping>)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.PutIndexTemplateRequest`

[horizontal]
`PutIndexTemplateRequest()` method:: added

[float]
=== `Nest.PutJobDescriptor<TDocument>`

[horizontal]
`PutJobDescriptor()` method:: added
`PutJobDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`AnalysisConfig(Func<AnalysisConfigDescriptor<T>, IAnalysisConfig>)` method:: deleted
`AnalysisConfig(Func<AnalysisConfigDescriptor<TDocument>, IAnalysisConfig>)` method:: added
`AnalysisLimits(Func<AnalysisLimitsDescriptor, IAnalysisLimits>)` method::
Member type changed from `PutJobDescriptor<T>` to `PutJobDescriptor<TDocument>`.
`DataDescription(Func<DataDescriptionDescriptor<T>, IDataDescription>)` method:: deleted
`DataDescription(Func<DataDescriptionDescriptor<TDocument>, IDataDescription>)` method:: added
`Description(String)` method::
Member type changed from `PutJobDescriptor<T>` to `PutJobDescriptor<TDocument>`.
`ModelPlot(Func<ModelPlotConfigDescriptor<T>, IModelPlotConfig>)` method:: deleted
`ModelPlot(Func<ModelPlotConfigDescriptor<TDocument>, IModelPlotConfig>)` method:: added
`ModelSnapshotRetentionDays(Nullable<Int64>)` method::
Member type changed from `PutJobDescriptor<T>` to `PutJobDescriptor<TDocument>`.
`ResultsIndexName<TIndex>()` method::
Member type changed from `PutJobDescriptor<T>` to `PutJobDescriptor<TDocument>`.
`ResultsIndexName(IndexName)` method::
Member type changed from `PutJobDescriptor<T>` to `PutJobDescriptor<TDocument>`.

[float]
=== `Nest.PutJobRequest`

[horizontal]
`PutJobRequest()` method:: added
`PutJobRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.PutJobResponse`

[horizontal]
`AnalysisConfig` property getter::
changed to non-virtual.
`AnalysisLimits` property getter::
changed to non-virtual.
`BackgroundPersistInterval` property getter::
changed to non-virtual.
`CreateTime` property getter::
changed to non-virtual.
`DataDescription` property getter::
changed to non-virtual.
`Description` property getter::
changed to non-virtual.
`JobId` property getter::
changed to non-virtual.
`JobType` property getter::
changed to non-virtual.
`ModelPlotConfig` property getter::
changed to non-virtual.
`ModelSnapshotId` property getter::
changed to non-virtual.
`ModelSnapshotRetentionDays` property getter::
changed to non-virtual.
`RenormalizationWindowDays` property getter::
changed to non-virtual.
`ResultsIndexName` property getter::
changed to non-virtual.
`ResultsRetentionDays` property getter::
changed to non-virtual.

[float]
=== `Nest.PutLifecycleDescriptor`

[horizontal]
`PutLifecycleDescriptor()` method:: added
`PutLifecycleDescriptor(Id)` method:: added
`PutLifecycleDescriptor(PolicyId)` method:: deleted
`MasterTimeout(Time)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.PutLifecycleRequest`

[horizontal]
`PutLifecycleRequest()` method:: added
`PutLifecycleRequest(Id)` method:: added
`PutLifecycleRequest(PolicyId)` method:: deleted
`MasterTimeout` property:: deleted
`Timeout` property:: deleted

[float]
=== `Nest.PutMappingDescriptor<TDocument>`

[horizontal]
`PutMappingDescriptor(IndexName, TypeName)` method:: deleted
`PutMappingDescriptor(Indices)` method:: added
`PutMappingDescriptor(TypeName)` method:: deleted
`AllField(Func<AllFieldDescriptor, IAllField>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`AllIndices()` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Assign(Action<ITypeMapping>)` method:: deleted
`Assign<TValue>(TValue, Action<ITypeMapping, TValue>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`AutoMap(IPropertyVisitor, Int32)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`AutoMap(Int32)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`DateDetection(Nullable<Boolean>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`DisableIndexField(Nullable<Boolean>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`DisableSizeField(Nullable<Boolean>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Dynamic(Union<Boolean, DynamicMapping>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Dynamic(Nullable<Boolean>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`DynamicDateFormats(IEnumerable<String>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`DynamicTemplates(Func<DynamicTemplateContainerDescriptor<T>, IPromise<IDynamicTemplateContainer>>)` method:: deleted
`DynamicTemplates(Func<DynamicTemplateContainerDescriptor<TDocument>, IPromise<IDynamicTemplateContainer>>)` method:: added
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`FieldNamesField(Func<FieldNamesFieldDescriptor<T>, IFieldNamesField>)` method:: deleted
`FieldNamesField(Func<FieldNamesFieldDescriptor<TDocument>, IFieldNamesField>)` method:: added
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`IncludeTypeName(Nullable<Boolean>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`IndexField(Func<IndexFieldDescriptor, IIndexField>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`MasterTimeout(Time)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Meta(Dictionary<String, Object>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Meta(Func<FluentDictionary<String, Object>, FluentDictionary<String, Object>>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`NumericDetection(Nullable<Boolean>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Properties(Func<PropertiesDescriptor<T>, IPromise<IProperties>>)` method:: deleted
`Properties(Func<PropertiesDescriptor<TDocument>, IPromise<IProperties>>)` method:: added
`RoutingField(Func<RoutingFieldDescriptor<T>, IRoutingField>)` method:: deleted
`RoutingField(Func<RoutingFieldDescriptor<TDocument>, IRoutingField>)` method:: added
`SizeField(Func<SizeFieldDescriptor, ISizeField>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`SourceField(Func<SourceFieldDescriptor, ISourceField>)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Timeout(Time)` method::
Member type changed from `PutMappingDescriptor<T>` to `PutMappingDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`UpdateAllTypes(Nullable<Boolean>)` method:: deleted

[float]
=== `Nest.PutMappingRequest`

[horizontal]
`PutMappingRequest()` method::
Member is more visible.
`PutMappingRequest(Indices, TypeName)` method:: deleted
`PutMappingRequest(TypeName)` method:: deleted
`UpdateAllTypes` property:: deleted

[float]
=== `Nest.PutMappingRequest<TDocument>`

[horizontal]
`PutMappingRequest(Indices, TypeName)` method:: deleted
`PutMappingRequest(TypeName)` method:: deleted
`AllField` property:: deleted
`AllowNoIndices` property:: deleted
`DateDetection` property:: deleted
`Dynamic` property:: deleted
`DynamicDateFormats` property:: deleted
`DynamicTemplates` property:: deleted
`ExpandWildcards` property:: deleted
`FieldNamesField` property:: deleted
`IgnoreUnavailable` property:: deleted
`IncludeTypeName` property:: deleted
`IndexField` property:: deleted
`MasterTimeout` property:: deleted
`Meta` property:: deleted
`NumericDetection` property:: deleted
`Properties` property:: deleted
`RoutingField` property:: deleted
`Self` property:: deleted
`SizeField` property:: deleted
`SourceField` property:: deleted
`Timeout` property:: deleted
`TypedSelf` property:: added
`UpdateAllTypes` property:: deleted

[float]
=== `Nest.PutPipelineDescriptor`

[horizontal]
`PutPipelineDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.PutPipelineRequest`

[horizontal]
`PutPipelineRequest()` method:: added

[float]
=== `Nest.PutPrivilegesResponse`

[horizontal]
`Applications` property getter::
changed to non-virtual.


[float]
=== `Nest.PutRoleDescriptor`

[horizontal]
`PutRoleDescriptor()` method:: added
`Applications(Func<ApplicationPrivilegesDescriptor, IPromise<IList<IApplicationPrivileges>>>)` method:: deleted
`Applications(Func<ApplicationPrivilegesListDescriptor, IPromise<IList<IApplicationPrivileges>>>)` method:: added

[float]
=== `Nest.PutRoleMappingDescriptor`

[horizontal]
`PutRoleMappingDescriptor()` method:: added

[float]
=== `Nest.PutRoleMappingRequest`

[horizontal]
`PutRoleMappingRequest()` method:: added

[float]
=== `Nest.PutRoleMappingResponse`

[horizontal]
`RoleMapping` property getter::
changed to non-virtual.


[float]
=== `Nest.PutRoleRequest`

[horizontal]
`PutRoleRequest()` method:: added

[float]
=== `Nest.PutRoleResponse`

[horizontal]
`Role` property getter::
changed to non-virtual.


[float]
=== `Nest.PutScriptDescriptor`

[horizontal]
`PutScriptDescriptor()` method:: added
`PutScriptDescriptor(Id, Name)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.PutScriptRequest`

[horizontal]
`PutScriptRequest()` method:: added

[float]
=== `Nest.PutUserDescriptor`

[horizontal]
`PutUserDescriptor()` method:: added

[float]
=== `Nest.PutUserRequest`

[horizontal]
`PutUserRequest()` method:: added

[float]
=== `Nest.PutUserResponse`

[horizontal]
`Created` property:: added
`User` property:: deleted

[float]
=== `Nest.PutUserStatus`

[horizontal]
type:: deleted

[float]
=== `Nest.PutWatchDescriptor`

[horizontal]
`PutWatchDescriptor()` method::
Member is less visible.
`IfPrimaryTerm(Nullable<Int64>)` method::
Parameter name changed from `ifPrimaryTerm` to `ifprimaryterm`.
`IfSeqNo(Nullable<Int64>)` method:: deleted
`IfSequenceNumber(Nullable<Int64>)` method:: added
`MasterTimeout(Time)` method:: deleted

[float]
=== `Nest.PutWatchRequest`

[horizontal]
`PutWatchRequest()` method::
Member is less visible.
`IfSeqNo` property:: deleted
`IfSequenceNumber` property:: added
`MasterTimeout` property:: deleted

[float]
=== `Nest.PutWatchResponse`

[horizontal]
`Created` property getter::
changed to non-virtual.
`Id` property getter::
changed to non-virtual.
`PrimaryTerm` property:: added
`SequenceNumber` property:: added
`Version` property getter::
changed to non-virtual.


[float]
=== `Nest.Query<T>`

[horizontal]
`GeoShape(Func<GeoShapeQueryDescriptor<T>, IGeoShapeQuery>)` method:: added
`GeoShapeCircle(Func<GeoShapeCircleQueryDescriptor<T>, IGeoShapeCircleQuery>)` method:: deleted
`GeoShapeEnvelope(Func<GeoShapeEnvelopeQueryDescriptor<T>, IGeoShapeEnvelopeQuery>)` method:: deleted
`GeoShapeGeometryCollection(Func<GeoShapeGeometryCollectionQueryDescriptor<T>, IGeoShapeGeometryCollectionQuery>)` method:: deleted
`GeoShapeLineString(Func<GeoShapeLineStringQueryDescriptor<T>, IGeoShapeLineStringQuery>)` method:: deleted
`GeoShapeMultiLineString(Func<GeoShapeMultiLineStringQueryDescriptor<T>, IGeoShapeMultiLineStringQuery>)` method:: deleted
`GeoShapeMultiPoint(Func<GeoShapeMultiPointQueryDescriptor<T>, IGeoShapeMultiPointQuery>)` method:: deleted
`GeoShapeMultiPolygon(Func<GeoShapeMultiPolygonQueryDescriptor<T>, IGeoShapeMultiPolygonQuery>)` method:: deleted
`GeoShapePoint(Func<GeoShapePointQueryDescriptor<T>, IGeoShapePointQuery>)` method:: deleted
`GeoShapePolygon(Func<GeoShapePolygonQueryDescriptor<T>, IGeoShapePolygonQuery>)` method:: deleted
`Intervals(Func<IntervalsQueryDescriptor<T>, IIntervalsQuery>)` method:: added
`Prefix(Expression<Func<T, Object>>, String, Nullable<Double>, MultiTermQueryRewrite, String)` method:: deleted
`Prefix<TValue>(Expression<Func<T, TValue>>, String, Nullable<Double>, MultiTermQueryRewrite, String)` method:: added
`Term(Expression<Func<T, Object>>, Object, Nullable<Double>, String)` method:: deleted
`Term<TValue>(Expression<Func<T, TValue>>, Object, Nullable<Double>, String)` method:: added
`Type<TOther>()` method:: deleted
`Type(Func<TypeQueryDescriptor, ITypeQuery>)` method:: deleted
`Wildcard(Expression<Func<T, Object>>, String, Nullable<Double>, MultiTermQueryRewrite, String)` method:: deleted
`Wildcard<TValue>(Expression<Func<T, TValue>>, String, Nullable<Double>, MultiTermQueryRewrite, String)` method:: added


[float]
=== `Nest.QueryCacheStats`

[horizontal]
`MemorySize` property:: deleted


[float]
=== `Nest.QueryContainerDescriptor<T>`

[horizontal]
`GeoIndexedShape(Func<GeoIndexedShapeQueryDescriptor<T>, IGeoIndexedShapeQuery>)` method:: deleted
`GeoShape(Func<GeoShapeQueryDescriptor<T>, IGeoShapeQuery>)` method:: added
`GeoShapeCircle(Func<GeoShapeCircleQueryDescriptor<T>, IGeoShapeCircleQuery>)` method:: deleted
`GeoShapeEnvelope(Func<GeoShapeEnvelopeQueryDescriptor<T>, IGeoShapeEnvelopeQuery>)` method:: deleted
`GeoShapeGeometryCollection(Func<GeoShapeGeometryCollectionQueryDescriptor<T>, IGeoShapeGeometryCollectionQuery>)` method:: deleted
`GeoShapeLineString(Func<GeoShapeLineStringQueryDescriptor<T>, IGeoShapeLineStringQuery>)` method:: deleted
`GeoShapeMultiLineString(Func<GeoShapeMultiLineStringQueryDescriptor<T>, IGeoShapeMultiLineStringQuery>)` method:: deleted
`GeoShapeMultiPoint(Func<GeoShapeMultiPointQueryDescriptor<T>, IGeoShapeMultiPointQuery>)` method:: deleted
`GeoShapeMultiPolygon(Func<GeoShapeMultiPolygonQueryDescriptor<T>, IGeoShapeMultiPolygonQuery>)` method:: deleted
`GeoShapePoint(Func<GeoShapePointQueryDescriptor<T>, IGeoShapePointQuery>)` method:: deleted
`GeoShapePolygon(Func<GeoShapePolygonQueryDescriptor<T>, IGeoShapePolygonQuery>)` method:: deleted
`Intervals(Func<IntervalsQueryDescriptor<T>, IIntervalsQuery>)` method:: added
`Prefix(Expression<Func<T, Object>>, String, Nullable<Double>, MultiTermQueryRewrite, String)` method:: deleted
`Prefix<TValue>(Expression<Func<T, TValue>>, String, Nullable<Double>, MultiTermQueryRewrite, String)` method:: added
`Term(Expression<Func<T, Object>>, Object, Nullable<Double>, String)` method:: deleted
`Term<TValue>(Expression<Func<T, TValue>>, Object, Nullable<Double>, String)` method:: added
`Type<TOther>()` method:: deleted
`Type(Func<TypeQueryDescriptor, ITypeQuery>)` method:: deleted
`Wildcard(Expression<Func<T, Object>>, String, Nullable<Double>, MultiTermQueryRewrite, String)` method:: deleted
`Wildcard<TValue>(Expression<Func<T, TValue>>, String, Nullable<Double>, MultiTermQueryRewrite, String)` method:: added


[float]
=== `Nest.QuerySqlResponse`

[horizontal]
`Columns` property getter::
changed to non-virtual.
`Cursor` property getter::
changed to non-virtual.
`Rows` property getter::
changed to non-virtual.

[float]
=== `Nest.QueryStringQuery`

[horizontal]
`Timezone` property:: deleted
`TimeZone` property:: added

[float]
=== `Nest.QueryStringQueryDescriptor<T>`

[horizontal]
`DefaultField(Expression<Func<T, Object>>)` method:: deleted
`DefaultField<TValue>(Expression<Func<T, TValue>>)` method:: added
`Timezone(String)` method:: deleted
`TimeZone(String)` method:: added



[float]
=== `Nest.QueryVisitor`

[horizontal]
`Visit(IGeoIndexedShapeQuery)` method:: deleted
`Visit(IGeoShapeCircleQuery)` method:: deleted
`Visit(IGeoShapeEnvelopeQuery)` method:: deleted
`Visit(IGeoShapeGeometryCollectionQuery)` method:: deleted
`Visit(IGeoShapeLineStringQuery)` method:: deleted
`Visit(IGeoShapeMultiLineStringQuery)` method:: deleted
`Visit(IGeoShapeMultiPointQuery)` method:: deleted
`Visit(IGeoShapeMultiPolygonQuery)` method:: deleted
`Visit(IGeoShapePointQuery)` method:: deleted
`Visit(IGeoShapePolygonQuery)` method:: deleted
`Visit(IIntervalsQuery)` method:: added
`Visit(ITypeQuery)` method:: deleted

[float]
=== `Nest.RandomScoreFunctionDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.RangeAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added



[float]
=== `Nest.RareDetectorDescriptor<T>`

[horizontal]
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`OverFieldName(Expression<Func<T, Object>>)` method:: deleted
`OverFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added












[float]
=== `Nest.RecoveryStatusDescriptor`

[horizontal]
`RecoveryStatusDescriptor(Indices)` method:: added
`ActiveOnly(Nullable<Boolean>)` method::
Parameter name changed from `activeOnly` to `activeonly`.

[float]
=== `Nest.RecoveryStatusResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.


[float]
=== `Nest.RefreshDescriptor`

[horizontal]
`RefreshDescriptor(Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.


[float]
=== `Nest.ReindexDestination`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.ReindexDestinationDescriptor`

[horizontal]
`Type(TypeName)` method:: deleted


[float]
=== `Nest.ReindexObservable<TSource, TTarget>`

[horizontal]
`Subscribe(IObserver<BulkAllResponse>)` method:: added
`Subscribe(IObserver<IBulkAllResponse>)` method:: deleted

[float]
=== `Nest.ReindexObserver`

[horizontal]
`ReindexObserver(Action<BulkAllResponse>, Action<Exception>, Action)` method:: added
`ReindexObserver(Action<IBulkAllResponse>, Action<Exception>, Action)` method:: deleted

[float]
=== `Nest.ReindexOnServerDescriptor`

[horizontal]
`RequestsPerSecond(Nullable<Int64>)` method::
Parameter name changed from `requestsPerSecond` to `requestspersecond`.
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.
`WaitForCompletion(Nullable<Boolean>)` method::
Parameter name changed from `waitForCompletion` to `waitforcompletion`.

[float]
=== `Nest.ReindexOnServerResponse`

[horizontal]
`Batches` property getter::
changed to non-virtual.
`Created` property getter::
changed to non-virtual.
`Failures` property getter::
changed to non-virtual.
`Noops` property getter::
changed to non-virtual.
`Retries` property getter::
changed to non-virtual.
`SliceId` property getter::
changed to non-virtual.
`Task` property getter::
changed to non-virtual.
`TimedOut` property getter::
changed to non-virtual.
`Took` property getter::
changed to non-virtual.
`Total` property getter::
changed to non-virtual.
`Updated` property getter::
changed to non-virtual.
`VersionConflicts` property getter::
changed to non-virtual.

[float]
=== `Nest.ReindexRethrottleDescriptor`

[horizontal]
`ReindexRethrottleDescriptor()` method::
Member is less visible.
`ReindexRethrottleDescriptor(TaskId)` method::
Parameter name changed from `task_id` to `taskId`.
`RequestsPerSecond(Nullable<Int64>)` method::
Parameter name changed from `requestsPerSecond` to `requestspersecond`.
`TaskId(TaskId)` method:: deleted

[float]
=== `Nest.ReindexRethrottleRequest`

[horizontal]
`ReindexRethrottleRequest()` method:: added
`ReindexRethrottleRequest(TaskId)` method::
Parameter name changed from `task_id` to `taskId`.

[float]
=== `Nest.ReindexRethrottleResponse`

[horizontal]
`Nodes` property getter::
changed to non-virtual.


[float]
=== `Nest.ReindexSource`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.ReindexSourceDescriptor`

[horizontal]
`Type(Types)` method:: deleted



[float]
=== `Nest.RelationName`

[horizontal]
`EqualsString(String)` method::
Member is less visible.

[float]
=== `Nest.ReloadSecureSettingsDescriptor`

[horizontal]
`ReloadSecureSettingsDescriptor(NodeIds)` method:: added

[float]
=== `Nest.ReloadSecureSettingsRequest`

[horizontal]
`ReloadSecureSettingsRequest(NodeIds)` method::
Parameter name changed from `node_id` to `nodeId`.

[float]
=== `Nest.ReloadSecureSettingsResponse`

[horizontal]
`ClusterName` property getter::
changed to non-virtual.
`Nodes` property getter::
changed to non-virtual.

[float]
=== `Nest.RemoteClusterConfiguration`

[horizontal]
`Add(String, Dictionary<String, Object>)` method:: added

[float]
=== `Nest.RemoteInfo`

[horizontal]
`HttpAddresses` property:: deleted
`SkipUnavailable` property:: added


[float]
=== `Nest.RemoteInfoResponse`

[horizontal]
`Remotes` property getter::
changed to non-virtual.

[float]
=== `Nest.RemovePolicyDescriptor`

[horizontal]
`RemovePolicyDescriptor()` method:: added
`MasterTimeout(Time)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.RemovePolicyRequest`

[horizontal]
`RemovePolicyRequest()` method:: added
`MasterTimeout` property:: deleted
`Timeout` property:: deleted

[float]
=== `Nest.RemovePolicyResponse`

[horizontal]
`FailedIndexes` property getter::
changed to non-virtual.
`HasFailures` property getter::
changed to non-virtual.

[float]
=== `Nest.RemoveProcessor`

[horizontal]

[float]
=== `Nest.RemoveProcessorDescriptor<T>`

[horizontal]
`Field(Field)` method:: deleted
`Field(Fields)` method:: added
`Field(Func<FieldsDescriptor<T>, IPromise<Fields>>)` method:: added
`Field(Expression<Func<T, Object>>)` method:: deleted

[float]
=== `Nest.RenameProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.RenderSearchTemplateDescriptor`

[horizontal]
`RenderSearchTemplateDescriptor(Id)` method:: added
`Inline(String)` method:: deleted

[float]
=== `Nest.RenderSearchTemplateRequest`

[horizontal]
`Inline` property:: deleted

[float]
=== `Nest.RenderSearchTemplateResponse`

[horizontal]
`TemplateOutput` property getter::
changed to non-virtual.
`TemplateOutput` property setter::
changed to non-virtual.

[float]
=== `Nest.RequestBase<TParameters>`

[horizontal]
`Initialize()` method:: deleted
`RequestDefaults(TParameters)` method:: added
`ContentType` property:: added


[float]
=== `Nest.RequestDescriptorBase<TDescriptor, TParameters, TInterface>`

[horizontal]
`Assign(Action<TInterface>)` method:: deleted
`AssignParam(Action<TParameters>)` method:: deleted
`ErrorTrace(Nullable<Boolean>)` method::
Parameter name changed from `errorTrace` to `errortrace`.
`FilterPath(String[])` method::
Parameter name changed from `filterPath` to `filterpath`.
`Qs(Action<TParameters>)` method:: deleted
`SourceQueryString(String)` method:: added
`RequestConfig` property:: deleted


[float]
=== `Nest.RestartWatcherDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.RestartWatcherRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.RestoreCompletedEventArgs`

[horizontal]
`RestoreCompletedEventArgs(IRecoveryStatusResponse)` method:: deleted
`RestoreCompletedEventArgs(RecoveryStatusResponse)` method:: added

[float]
=== `Nest.RestoreDescriptor`

[horizontal]
`RestoreDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`WaitForCompletion(Nullable<Boolean>)` method::
Parameter name changed from `waitForCompletion` to `waitforcompletion`.

[float]
=== `Nest.RestoreNextEventArgs`

[horizontal]
`RestoreNextEventArgs(IRecoveryStatusResponse)` method:: deleted
`RestoreNextEventArgs(RecoveryStatusResponse)` method:: added

[float]
=== `Nest.RestoreObservable`

[horizontal]
`Subscribe(IObserver<IRecoveryStatusResponse>)` method:: deleted
`Subscribe(IObserver<RecoveryStatusResponse>)` method:: added

[float]
=== `Nest.RestoreObserver`

[horizontal]
`RestoreObserver(Action<IRecoveryStatusResponse>, Action<Exception>, Action)` method:: deleted
`RestoreObserver(Action<RecoveryStatusResponse>, Action<Exception>, Action)` method:: added

[float]
=== `Nest.RestoreRequest`

[horizontal]
`RestoreRequest()` method:: added

[float]
=== `Nest.RestoreResponse`

[horizontal]
`Snapshot` property getter::
changed to non-virtual.
`Snapshot` property setter::
changed to non-virtual.


[float]
=== `Nest.ResumeFollowIndexDescriptor`

[horizontal]
`ResumeFollowIndexDescriptor()` method:: added

[float]
=== `Nest.ResumeFollowIndexRequest`

[horizontal]
`ResumeFollowIndexRequest()` method:: added


[float]
=== `Nest.RetryIlmDescriptor`

[horizontal]
`RetryIlmDescriptor()` method:: added
`MasterTimeout(Time)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.RetryIlmRequest`

[horizontal]
`RetryIlmRequest()` method:: added
`MasterTimeout` property:: deleted
`Timeout` property:: deleted


[float]
=== `Nest.ReverseNestedAggregationDescriptor<T>`

[horizontal]
`Path(Expression<Func<T, Object>>)` method:: deleted
`Path<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.RevertModelSnapshotDescriptor`

[horizontal]
`RevertModelSnapshotDescriptor()` method:: added
`RevertModelSnapshotDescriptor(Id, Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.RevertModelSnapshotRequest`

[horizontal]
`RevertModelSnapshotRequest()` method:: added
`RevertModelSnapshotRequest(Id, Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.RevertModelSnapshotResponse`

[horizontal]
`Model` property getter::
changed to non-virtual.





[float]
=== `Nest.RolloverIndexDescriptor`

[horizontal]
`RolloverIndexDescriptor()` method:: added
`RolloverIndexDescriptor(Name, IndexName)` method:: added
`DryRun(Nullable<Boolean>)` method::
Parameter name changed from `dryRun` to `dryrun`.
`IncludeTypeName(Nullable<Boolean>)` method::
Parameter name changed from `includeTypeName` to `includetypename`.
`Map(Func<TypeMappingDescriptor<Object>, ITypeMapping>)` method:: added
`Map<T>(Func<TypeMappingDescriptor<T>, ITypeMapping>)` method:: added
`Mappings(Func<MappingsDescriptor, IPromise<IMappings>>)` method:: deleted
`Mappings(Func<MappingsDescriptor, ITypeMapping>)` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.RolloverIndexRequest`

[horizontal]
`RolloverIndexRequest()` method:: added
`RolloverIndexRequest(Name, IndexName)` method::
Parameter name changed from `new_index` to `newIndex`.

[float]
=== `Nest.RolloverIndexResponse`

[horizontal]
`Conditions` property getter::
changed to non-virtual.
`DryRun` property getter::
changed to non-virtual.
`NewIndex` property getter::
changed to non-virtual.
`OldIndex` property getter::
changed to non-virtual.
`RolledOver` property getter::
changed to non-virtual.
`ShardsAcknowledged` property getter::
changed to non-virtual.

[float]
=== `Nest.RolloverLifecycleAction`

[horizontal]
`MaximumSize` property getter::
`MaximumSize` property setter::
`MaximumSizeAsString` property:: deleted

[float]
=== `Nest.RolloverLifecycleActionDescriptor`

[horizontal]
`MaximumSize(Nullable<Int64>)` method:: deleted
`MaximumSize(String)` method:: added
`MaximumSizeAsString(String)` method:: deleted



[float]
=== `Nest.RollupFieldMetricsDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>, RollupMetric[])` method:: deleted
`Field(Expression<Func<T, Object>>, IEnumerable<RollupMetric>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>, RollupMetric[])` method:: added
`Field<TValue>(Expression<Func<T, TValue>>, IEnumerable<RollupMetric>)` method:: added

[float]
=== `Nest.RollupFieldsCapabilitiesDictionary`

[horizontal]
`Field<T, TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.RollupFieldsIndexCapabilitiesDictionary`

[horizontal]
`Field<T, TValue>(Expression<Func<T, TValue>>)` method:: added








[float]
=== `Nest.RollupSearchDescriptor<TDocument>`

[horizontal]
`RollupSearchDescriptor()` method:: added
`Aggregations(AggregationDictionary)` method::
Member type changed from `RollupSearchDescriptor<T>` to `RollupSearchDescriptor<TDocument>`.
`Aggregations(Func<AggregationContainerDescriptor<T>, IAggregationContainer>)` method:: deleted
`Aggregations(Func<AggregationContainerDescriptor<TDocument>, IAggregationContainer>)` method:: added
`AllIndices()` method::
Member type changed from `RollupSearchDescriptor<T>` to `RollupSearchDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `RollupSearchDescriptor<T>` to `RollupSearchDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `RollupSearchDescriptor<T>` to `RollupSearchDescriptor<TDocument>`.
`Query(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`Query(Func<QueryContainerDescriptor<TDocument>, QueryContainer>)` method:: added
`Size(Nullable<Int32>)` method::
Member type changed from `RollupSearchDescriptor<T>` to `RollupSearchDescriptor<TDocument>`.
`TotalHitsAsInteger(Nullable<Boolean>)` method:: added
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`TypedKeys(Nullable<Boolean>)` method::
Member type changed from `RollupSearchDescriptor<T>` to `RollupSearchDescriptor<TDocument>`.

[float]
=== `Nest.RollupSearchRequest`

[horizontal]
`RollupSearchRequest()` method:: added
`RollupSearchRequest(Indices, TypeName)` method:: deleted
`TotalHitsAsInteger` property:: added


[float]
=== `Nest.RootNodeInfoResponse`

[horizontal]
`ClusterName` property:: added
`ClusterUUID` property:: added
`Name` property getter::
changed to non-virtual.
`Tagline` property getter::
changed to non-virtual.
`Version` property getter::
changed to non-virtual.

[float]
=== `Nest.RouteValues`

[horizontal]
`Remove(String)` method:: deleted
`Resolve(IConnectionSettingsValues)` method::
Member is less visible.
`ActionId` property:: deleted
`Alias` property:: deleted
`Application` property:: deleted
`CalendarId` property:: deleted
`CategoryId` property:: deleted
`Context` property:: deleted
`DatafeedId` property:: deleted
`EventId` property:: deleted
`Feature` property:: deleted
`Field` property:: deleted
`Fields` property:: deleted
`FilterId` property:: deleted
`ForecastId` property:: deleted
`Id` property:: deleted
`Index` property:: deleted
`IndexMetric` property:: deleted
`JobId` property:: deleted
`Lang` property:: deleted
`Metric` property:: deleted
`Name` property:: deleted
`NewIndex` property:: deleted
`NodeId` property:: deleted
`PolicyId` property:: deleted
`Realms` property:: deleted
`Repository` property:: deleted
`ScrollId` property:: deleted
`Snapshot` property:: deleted
`SnapshotId` property:: deleted
`Target` property:: deleted
`TaskId` property:: deleted
`ThreadPoolPatterns` property:: deleted
`Timestamp` property:: deleted
`Type` property:: deleted
`User` property:: deleted
`Username` property:: deleted
`WatcherStatsMetric` property:: deleted
`WatchId` property:: deleted


[float]
=== `Nest.RoutingNodesState`

[horizontal]
type:: deleted

[float]
=== `Nest.RoutingShard`

[horizontal]
type:: deleted

[float]
=== `Nest.RoutingTableState`

[horizontal]
type:: deleted



[float]
=== `Nest.S3Repository`

[horizontal]
`S3Repository(IS3RepositorySettings)` method:: added
`S3Repository(S3RepositorySettings)` method:: deleted

[float]
=== `Nest.S3RepositorySettings`

[horizontal]
`AccessKey` property:: deleted
`ConcurrentStreams` property:: deleted
`SecretKey` property:: deleted

[float]
=== `Nest.S3RepositorySettingsDescriptor`

[horizontal]
`S3RepositorySettingsDescriptor()` method:: deleted
`AccessKey(String)` method:: deleted
`ConcurrentStreams(Nullable<Int32>)` method:: deleted
`SecretKey(String)` method:: deleted




[float]
=== `Nest.ScoreFunctionsDescriptor<T>`

[horizontal]
`RandomScore(Int64)` method:: deleted
`RandomScore(String)` method:: deleted


[float]
=== `Nest.ScriptConditionDescriptor`

[horizontal]
`Indexed(String)` method:: deleted
`Inline(String)` method:: deleted

[float]
=== `Nest.ScriptDescriptor`

[horizontal]
`Indexed(String)` method:: deleted
`Inline(String)` method:: deleted


[float]
=== `Nest.ScriptProcessor`

[horizontal]
`Inline` property:: deleted

[float]
=== `Nest.ScriptProcessorDescriptor`

[horizontal]
`Inline(String)` method:: deleted

[float]
=== `Nest.ScriptQuery`

[horizontal]
`Id` property:: deleted
`Inline` property:: deleted
`Lang` property:: deleted
`Params` property:: deleted
`Script` property:: added
`Source` property:: deleted

[float]
=== `Nest.ScriptQueryDescriptor<T>`

[horizontal]
`Id(String)` method:: deleted
`Inline(String)` method:: deleted
`Lang(ScriptLang)` method:: deleted
`Lang(String)` method:: deleted
`Params(Func<FluentDictionary<String, Object>, FluentDictionary<String, Object>>)` method:: deleted
`Script(Func<ScriptDescriptor, IScript>)` method:: added
`Source(String)` method:: deleted

[float]
=== `Nest.ScriptScoreFunction`

[horizontal]

[float]
=== `Nest.ScriptScoreFunctionDescriptor<T>`

[horizontal]
`Script(Func<ScriptDescriptor, IScript>)` method:: added
`Script(Func<ScriptQueryDescriptor<T>, IScriptQuery>)` method:: deleted

[float]
=== `Nest.ScriptSortDescriptor<T>`

[horizontal]
type:: added


[float]
=== `Nest.ScriptTransformDescriptor`

[horizontal]
`Indexed(String)` method:: deleted
`Inline(String)` method:: deleted

[float]
=== `Nest.ScrollAllDescriptor<T>`

[horizontal]
`RoutingField(Expression<Func<T, Object>>)` method:: deleted
`RoutingField<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.ScrollAllObservable<T>`

[horizontal]
`Subscribe(IObserver<IScrollAllResponse<T>>)` method:: deleted
`Subscribe(IObserver<ScrollAllResponse<T>>)` method:: added


[float]
=== `Nest.ScrollDescriptor<TInferDocument>`

[horizontal]
`ScrollDescriptor()` method:: deleted
`ScrollDescriptor(Time, String)` method:: added
`Scroll(Time)` method::
Member type changed from `ScrollDescriptor<T>` to `ScrollDescriptor<TInferDocument>`.
`ScrollId(String)` method::
Member type changed from `ScrollDescriptor<T>` to `ScrollDescriptor<TInferDocument>`.
`TotalHitsAsInteger(Nullable<Boolean>)` method::
Member type changed from `ScrollDescriptor<T>` to `ScrollDescriptor<TInferDocument>`.

[float]
=== `Nest.ScrollRequest`

[horizontal]
`TypeSelector` property:: deleted

[float]
=== `Nest.SearchDescriptor<TInferDocument>`

[horizontal]
`SearchDescriptor(Indices)` method:: added
`Aggregations(AggregationDictionary)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Aggregations(Func<AggregationContainerDescriptor<T>, IAggregationContainer>)` method:: deleted
`Aggregations(Func<AggregationContainerDescriptor<TInferDocument>, IAggregationContainer>)` method:: added
`AllIndices()` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`AllowPartialSearchResults(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`AllTypes()` method:: deleted
`Analyzer(String)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`AnalyzeWildcard(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`BatchedReduceSize(Nullable<Int64>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`CcsMinimizeRoundtrips(Nullable<Boolean>)` method:: added
`Collapse(Func<FieldCollapseDescriptor<T>, IFieldCollapse>)` method:: deleted
`Collapse(Func<FieldCollapseDescriptor<TInferDocument>, IFieldCollapse>)` method:: added
`DefaultOperator(Nullable<DefaultOperator>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Df(String)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`DocValueFields(Fields)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`DocValueFields(Func<FieldsDescriptor<T>, IPromise<Fields>>)` method:: deleted
`DocValueFields(Func<FieldsDescriptor<TInferDocument>, IPromise<Fields>>)` method:: added
`ExecuteOnLocalShard()` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`ExecuteOnNode(String)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`ExecuteOnPreferredNode(String)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`ExecuteOnPrimary()` method:: deleted
`ExecuteOnPrimaryFirst()` method:: deleted
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Explain(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`From(Nullable<Int32>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Highlight(Func<HighlightDescriptor<T>, IHighlight>)` method:: deleted
`Highlight(Func<HighlightDescriptor<TInferDocument>, IHighlight>)` method:: added
`IgnoreThrottled(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Index<TOther>()` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Index(Indices)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`IndicesBoost(Func<FluentDictionary<IndexName, Double>, FluentDictionary<IndexName, Double>>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Initialize()` method:: deleted
`Lenient(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`MatchAll(Func<MatchAllQueryDescriptor, IMatchAllQuery>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`MaxConcurrentShardRequests(Nullable<Int64>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`MinScore(Nullable<Double>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`PostFilter(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`PostFilter(Func<QueryContainerDescriptor<TInferDocument>, QueryContainer>)` method:: added
`Preference(String)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`PreFilterShardSize(Nullable<Int64>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Profile(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Query(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`Query(Func<QueryContainerDescriptor<TInferDocument>, QueryContainer>)` method:: added
`RequestCache(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`RequestDefaults(SearchRequestParameters)` method:: added
`Rescore(Func<RescoringDescriptor<T>, IPromise<IList<IRescore>>>)` method:: deleted
`Rescore(Func<RescoringDescriptor<TInferDocument>, IPromise<IList<IRescore>>>)` method:: added
`Routing(Routing)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`ScriptFields(Func<ScriptFieldsDescriptor, IPromise<IScriptFields>>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Scroll(Time)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`SearchAfter(IList<Object>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`SearchAfter(Object[])` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`SearchType(Nullable<SearchType>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`SeqNoPrimaryTerm(Nullable<Boolean>)` method:: deleted
`SequenceNumberPrimaryTerm(Nullable<Boolean>)` method:: added
`Size(Nullable<Int32>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Skip(Nullable<Int32>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Slice(Func<SlicedScrollDescriptor<T>, ISlicedScroll>)` method:: deleted
`Slice(Func<SlicedScrollDescriptor<TInferDocument>, ISlicedScroll>)` method:: added
`Sort(Func<SortDescriptor<T>, IPromise<IList<ISort>>>)` method:: deleted
`Sort(Func<SortDescriptor<TInferDocument>, IPromise<IList<ISort>>>)` method:: added
`Source(Boolean)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Source(Func<SourceFilterDescriptor<T>, ISourceFilter>)` method:: deleted
`Source(Func<SourceFilterDescriptor<TInferDocument>, ISourceFilter>)` method:: added
`Stats(String[])` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`StoredFields(Fields)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`StoredFields(Func<FieldsDescriptor<T>, IPromise<Fields>>)` method:: deleted
`StoredFields(Func<FieldsDescriptor<TInferDocument>, IPromise<Fields>>)` method:: added
`Suggest(Func<SuggestContainerDescriptor<T>, IPromise<ISuggestContainer>>)` method:: deleted
`Suggest(Func<SuggestContainerDescriptor<TInferDocument>, IPromise<ISuggestContainer>>)` method:: added
`SuggestField(Field)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`SuggestField(Expression<Func<T, Object>>)` method:: deleted
`SuggestField(Expression<Func<TInferDocument, Object>>)` method:: added
`SuggestMode(Nullable<SuggestMode>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`SuggestSize(Nullable<Int64>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`SuggestText(String)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Take(Nullable<Int32>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`TerminateAfter(Nullable<Int64>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Timeout(String)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`TotalHitsAsInteger(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`TrackScores(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`TrackTotalHits(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted
`TypedKeys(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.
`Version(Nullable<Boolean>)` method::
Member type changed from `SearchDescriptor<T>` to `SearchDescriptor<TInferDocument>`.

[float]
=== `Nest.SearchInputRequest`

[horizontal]
`Types` property:: deleted

[float]
=== `Nest.SearchInputRequestDescriptor`

[horizontal]
`Types<T>()` method:: deleted
`Types(TypeName[])` method:: deleted
`Types(IEnumerable<TypeName>)` method:: deleted



[float]
=== `Nest.SearchRequest`

[horizontal]
`SearchRequest(Indices, Types)` method:: deleted
`Initialize()` method:: deleted
`RequestDefaults(SearchRequestParameters)` method:: added
`CcsMinimizeRoundtrips` property:: added
`SeqNoPrimaryTerm` property:: deleted
`SequenceNumberPrimaryTerm` property:: added
`TypeSelector` property:: deleted

[float]
=== `Nest.SearchRequest<TInferDocument>`

[horizontal]
`SearchRequest(Indices, Types)` method:: deleted
`Initialize()` method:: deleted
`Aggregations` property:: deleted
`AllowNoIndices` property:: deleted
`AllowPartialSearchResults` property:: deleted
`Analyzer` property:: deleted
`AnalyzeWildcard` property:: deleted
`BatchedReduceSize` property:: deleted
`Collapse` property:: deleted
`DefaultOperator` property:: deleted
`Df` property:: deleted
`DocValueFields` property:: deleted
`ExpandWildcards` property:: deleted
`Explain` property:: deleted
`From` property:: deleted
`Highlight` property:: deleted
`HttpMethod` property:: deleted
`IgnoreThrottled` property:: deleted
`IgnoreUnavailable` property:: deleted
`IndicesBoost` property:: deleted
`Lenient` property:: deleted
`MaxConcurrentShardRequests` property:: deleted
`MinScore` property:: deleted
`PostFilter` property:: deleted
`Preference` property:: deleted
`PreFilterShardSize` property:: deleted
`Profile` property:: deleted
`Query` property:: deleted
`RequestCache` property:: deleted
`Rescore` property:: deleted
`Routing` property:: deleted
`ScriptFields` property:: deleted
`Scroll` property:: deleted
`SearchAfter` property:: deleted
`SearchType` property:: deleted
`Self` property:: deleted
`SeqNoPrimaryTerm` property:: deleted
`Size` property:: deleted
`Slice` property:: deleted
`Sort` property:: deleted
`Source` property:: deleted
`Stats` property:: deleted
`StoredFields` property:: deleted
`Suggest` property:: deleted
`SuggestField` property:: deleted
`SuggestMode` property:: deleted
`SuggestSize` property:: deleted
`SuggestText` property:: deleted
`TerminateAfter` property:: deleted
`Timeout` property:: deleted
`TotalHitsAsInteger` property:: deleted
`TrackScores` property:: deleted
`TrackTotalHits` property:: deleted
`TypedKeys` property:: deleted
`TypedSelf` property:: added
`TypeSelector` property:: deleted
`Version` property:: deleted

[float]
=== `Nest.SearchResponse<TDocument>`

[horizontal]
`Aggs` property:: deleted


[float]
=== `Nest.SearchShardsDescriptor<TDocument>`

[horizontal]
`SearchShardsDescriptor(Indices)` method:: added
`AllIndices()` method::
Member type changed from `SearchShardsDescriptor<T>` to `SearchShardsDescriptor<TDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `SearchShardsDescriptor<T>` to `SearchShardsDescriptor<TDocument>`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `SearchShardsDescriptor<T>` to `SearchShardsDescriptor<TDocument>`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `SearchShardsDescriptor<T>` to `SearchShardsDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `SearchShardsDescriptor<T>` to `SearchShardsDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `SearchShardsDescriptor<T>` to `SearchShardsDescriptor<TDocument>`.
`Local(Nullable<Boolean>)` method::
Member type changed from `SearchShardsDescriptor<T>` to `SearchShardsDescriptor<TDocument>`.
`Preference(String)` method::
Member type changed from `SearchShardsDescriptor<T>` to `SearchShardsDescriptor<TDocument>`.
`Routing(Routing)` method::
Member type changed from `SearchShardsDescriptor<T>` to `SearchShardsDescriptor<TDocument>`.

[float]
=== `Nest.SearchShardsRequest<TDocument>`

[horizontal]
`AllowNoIndices` property:: deleted
`ExpandWildcards` property:: deleted
`IgnoreUnavailable` property:: deleted
`Local` property:: deleted
`Preference` property:: deleted
`Routing` property:: deleted
`Self` property:: deleted
`TypedSelf` property:: added

[float]
=== `Nest.SearchShardsResponse`

[horizontal]
`Nodes` property getter::
changed to non-virtual.
`Shards` property getter::
changed to non-virtual.


[float]
=== `Nest.SearchTemplateDescriptor<TDocument>`

[horizontal]
`SearchTemplateDescriptor(Indices)` method:: added
`AllIndices()` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`CcsMinimizeRoundtrips(Nullable<Boolean>)` method:: added
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Explain(Nullable<Boolean>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Id(String)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`IgnoreThrottled(Nullable<Boolean>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Initialize()` method:: deleted
`Inline(String)` method:: deleted
`Params(Dictionary<String, Object>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Params(Func<FluentDictionary<String, Object>, FluentDictionary<String, Object>>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Preference(String)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Profile(Nullable<Boolean>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`RequestDefaults(SearchTemplateRequestParameters)` method:: added
`Routing(Routing)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Scroll(Time)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`SearchType(Nullable<SearchType>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Source(String)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`TotalHitsAsInteger(Nullable<Boolean>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted
`TypedKeys(Nullable<Boolean>)` method::
Member type changed from `SearchTemplateDescriptor<T>` to `SearchTemplateDescriptor<TDocument>`.

[float]
=== `Nest.SearchTemplateRequest`

[horizontal]
`SearchTemplateRequest(Indices, Types)` method:: deleted
`Initialize()` method:: deleted
`RequestDefaults(SearchTemplateRequestParameters)` method:: added
`CcsMinimizeRoundtrips` property:: added
`Inline` property:: deleted
`TypeSelector` property:: deleted

[float]
=== `Nest.SearchTemplateRequest<T>`

[horizontal]
`SearchTemplateRequest(Indices, Types)` method:: deleted










[float]
=== `Nest.Segment`

[horizontal]
`Size` property:: deleted

[float]
=== `Nest.SegmentsDescriptor`

[horizontal]
`SegmentsDescriptor(Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`OperationThreading(String)` method:: deleted

[float]
=== `Nest.SegmentsRequest`

[horizontal]
`OperationThreading` property:: deleted

[float]
=== `Nest.SegmentsResponse`

[horizontal]
`Indices` property getter::
changed to non-virtual.
`Shards` property getter::
changed to non-virtual.

[float]
=== `Nest.SegmentsStats`

[horizontal]
`DocValuesMemory` property:: deleted
`FileSizes` property:: added
`FixedBitSetMemory` property:: deleted
`IndexWriterMaxMemory` property:: deleted
`IndexWriterMemory` property:: deleted
`Memory` property:: deleted
`NormsMemory` property:: deleted
`PointsMemory` property:: deleted
`StoredFieldsMemory` property:: deleted
`TermsMemory` property:: deleted
`TermVectorsMemory` property:: deleted
`VersionMapMemory` property:: deleted

[float]
=== `Nest.SelectorBase`

[horizontal]
type:: added

[float]
=== `Nest.SelectorBase<TInterface>`

[horizontal]
type:: deleted

[float]
=== `Nest.SetProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.SetSecurityUserProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added





[float]
=== `Nest.ShardFielddata`

[horizontal]
type:: added

[float]
=== `Nest.ShardFieldData`

[horizontal]
type:: deleted



















[float]
=== `Nest.ShardsOperationResponseBase`

[horizontal]
`Shards` property getter::
changed to non-virtual.



[float]
=== `Nest.ShardStats`

[horizontal]
`Fielddata` property:: added
`FieldData` property:: deleted









[float]
=== `Nest.ShrinkIndexDescriptor`

[horizontal]
`ShrinkIndexDescriptor()` method:: added
`CopySettings(Nullable<Boolean>)` method:: deleted
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.ShrinkIndexRequest`

[horizontal]
`ShrinkIndexRequest()` method::
Member is more visible.
`CopySettings` property:: deleted

[float]
=== `Nest.ShrinkIndexResponse`

[horizontal]
`ShardsAcknowledged` property getter::
changed to non-virtual.

[float]
=== `Nest.SignificantTermsAggregate`

[horizontal]
type:: deleted

[float]
=== `Nest.SignificantTermsAggregate<TKey>`

[horizontal]
type:: added

[float]
=== `Nest.SignificantTermsAggregation`

[horizontal]

[float]
=== `Nest.SignificantTermsAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.SignificantTermsBucket`

[horizontal]
type:: deleted

[float]
=== `Nest.SignificantTermsBucket<TKey>`

[horizontal]
type:: added

[float]
=== `Nest.SignificantTermsIncludeExclude`

[horizontal]
type:: deleted

[float]
=== `Nest.SignificantTextAggregation`

[horizontal]

[float]
=== `Nest.SignificantTextAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.SimilaritiesDescriptor`

[horizontal]
`Classic(String, Func<ClassicSimilarityDescriptor, IClassicSimilarity>)` method:: deleted

[float]
=== `Nest.SimilarityOption`

[horizontal]
type:: deleted



[float]
=== `Nest.SimulatePipelineDescriptor`

[horizontal]
`SimulatePipelineDescriptor(Id)` method:: added

[float]
=== `Nest.SimulatePipelineDocument`

[horizontal]
`Type` property:: deleted

[float]
=== `Nest.SimulatePipelineDocumentDescriptor`

[horizontal]
`Type(TypeName)` method:: deleted

[float]
=== `Nest.SimulatePipelineResponse`

[horizontal]
`Documents` property getter::
changed to non-virtual.

[float]
=== `Nest.SingleBucketAggregate`

[horizontal]
`Aggregations` property:: deleted



[float]
=== `Nest.SlicedScrollDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added



[float]
=== `Nest.SnapshotCompletedEventArgs`

[horizontal]
`SnapshotCompletedEventArgs(ISnapshotStatusResponse)` method:: deleted
`SnapshotCompletedEventArgs(SnapshotStatusResponse)` method:: added

[float]
=== `Nest.SnapshotDescriptor`

[horizontal]
`SnapshotDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`WaitForCompletion(Nullable<Boolean>)` method::
Parameter name changed from `waitForCompletion` to `waitforcompletion`.



[float]
=== `Nest.SnapshotNextEventArgs`

[horizontal]
`SnapshotNextEventArgs(ISnapshotStatusResponse)` method:: deleted
`SnapshotNextEventArgs(SnapshotStatusResponse)` method:: added

[float]
=== `Nest.SnapshotObservable`

[horizontal]
`Subscribe(IObserver<ISnapshotStatusResponse>)` method:: deleted
`Subscribe(IObserver<SnapshotStatusResponse>)` method:: added

[float]
=== `Nest.SnapshotObserver`

[horizontal]
`SnapshotObserver(Action<ISnapshotStatusResponse>, Action<Exception>, Action)` method:: deleted
`SnapshotObserver(Action<SnapshotStatusResponse>, Action<Exception>, Action)` method:: added

[float]
=== `Nest.SnapshotRequest`

[horizontal]
`SnapshotRequest()` method:: added

[float]
=== `Nest.SnapshotResponse`

[horizontal]
`Accepted` property getter::
changed to non-virtual.
`Snapshot` property getter::
changed to non-virtual.
`Snapshot` property setter::
changed to non-virtual.




[float]
=== `Nest.SnapshotStats`

[horizontal]
`NumberOfFiles` property:: deleted
`ProcessedFiles` property:: deleted
`ProcessedSizeInBytes` property:: deleted
`TotalSizeInBytes` property:: deleted


[float]
=== `Nest.SnapshotStatusDescriptor`

[horizontal]
`SnapshotStatusDescriptor(Name)` method:: added
`SnapshotStatusDescriptor(Name, Names)` method:: added
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.SnapshotStatusResponse`

[horizontal]
`Snapshots` property getter::
changed to non-virtual.



[float]
=== `Nest.SortBase`

[horizontal]
`NestedFilter` property:: deleted
`NestedPath` property:: deleted

[float]
=== `Nest.SortDescriptor<T>`

[horizontal]
`Ascending(Expression<Func<T, Object>>)` method:: deleted
`Ascending<TValue>(Expression<Func<T, TValue>>)` method:: added
`Descending(Expression<Func<T, Object>>)` method:: deleted
`Descending<TValue>(Expression<Func<T, TValue>>)` method:: added
`Field(Func<FieldSortDescriptor<T>, IFieldSort>)` method:: added
`Field(Func<SortFieldDescriptor<T>, IFieldSort>)` method:: deleted
`Field(Expression<Func<T, Object>>, SortOrder)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>, SortOrder)` method:: added
`GeoDistance(Func<GeoDistanceSortDescriptor<T>, IGeoDistanceSort>)` method:: added
`GeoDistance(Func<SortGeoDistanceDescriptor<T>, IGeoDistanceSort>)` method:: deleted
`Script(Func<ScriptSortDescriptor<T>, IScriptSort>)` method:: added
`Script(Func<SortScriptDescriptor<T>, IScriptSort>)` method:: deleted

[float]
=== `Nest.SortDescriptorBase<TDescriptor, TInterface, T>`

[horizontal]
`NestedFilter(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`NestedPath(Field)` method:: deleted
`NestedPath(Expression<Func<T, Object>>)` method:: deleted

[float]
=== `Nest.SortField`

[horizontal]
type:: deleted

[float]
=== `Nest.SortFieldDescriptor<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.SortGeoDistanceDescriptor<T>`

[horizontal]
type:: deleted



[float]
=== `Nest.SortProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.SortScriptDescriptor<T>`

[horizontal]
type:: deleted


[float]
=== `Nest.SourceDescriptor<TDocument>`

[horizontal]
`SourceDescriptor()` method:: added
`SourceDescriptor(DocumentPath<T>)` method:: deleted
`SourceDescriptor(Id)` method:: added
`SourceDescriptor(IndexName, Id)` method:: added
`SourceDescriptor(IndexName, TypeName, Id)` method:: deleted
`SourceDescriptor(TDocument, IndexName, Id)` method:: added
`ExecuteOnLocalShard()` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.
`ExecuteOnPrimary()` method:: deleted
`Index<TOther>()` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.
`Index(IndexName)` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.
`Parent(String)` method:: deleted
`Preference(String)` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.
`Realtime(Nullable<Boolean>)` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.
`Refresh(Nullable<Boolean>)` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.
`Routing(Routing)` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.
`SourceEnabled(Nullable<Boolean>)` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.
`SourceExclude(Fields)` method:: deleted
`SourceExclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceExcludes(Fields)` method:: added
`SourceExcludes(Expression<Func<TDocument, Object>>[])` method:: added
`SourceInclude(Fields)` method:: deleted
`SourceInclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceIncludes(Fields)` method:: added
`SourceIncludes(Expression<Func<TDocument, Object>>[])` method:: added
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`Version(Nullable<Int64>)` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.
`VersionType(Nullable<VersionType>)` method::
Member type changed from `SourceDescriptor<T>` to `SourceDescriptor<TDocument>`.

[float]
=== `Nest.SourceExistsDescriptor<TDocument>`

[horizontal]
`SourceExistsDescriptor()` method:: added
`SourceExistsDescriptor(DocumentPath<T>)` method:: deleted
`SourceExistsDescriptor(Id)` method:: added
`SourceExistsDescriptor(IndexName, Id)` method:: added
`SourceExistsDescriptor(IndexName, TypeName, Id)` method:: deleted
`SourceExistsDescriptor(TDocument, IndexName, Id)` method:: added
`Index<TOther>()` method::
Member type changed from `SourceExistsDescriptor<T>` to `SourceExistsDescriptor<TDocument>`.
`Index(IndexName)` method::
Member type changed from `SourceExistsDescriptor<T>` to `SourceExistsDescriptor<TDocument>`.
`Parent(String)` method:: deleted
`Preference(String)` method::
Member type changed from `SourceExistsDescriptor<T>` to `SourceExistsDescriptor<TDocument>`.
`Realtime(Nullable<Boolean>)` method::
Member type changed from `SourceExistsDescriptor<T>` to `SourceExistsDescriptor<TDocument>`.
`Refresh(Nullable<Boolean>)` method::
Member type changed from `SourceExistsDescriptor<T>` to `SourceExistsDescriptor<TDocument>`.
`Routing(Routing)` method::
Member type changed from `SourceExistsDescriptor<T>` to `SourceExistsDescriptor<TDocument>`.
`SourceEnabled(Nullable<Boolean>)` method::
Member type changed from `SourceExistsDescriptor<T>` to `SourceExistsDescriptor<TDocument>`.
`SourceExclude(Fields)` method:: deleted
`SourceExclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceExcludes(Fields)` method:: added
`SourceExcludes(Expression<Func<TDocument, Object>>[])` method:: added
`SourceInclude(Fields)` method:: deleted
`SourceInclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceIncludes(Fields)` method:: added
`SourceIncludes(Expression<Func<TDocument, Object>>[])` method:: added
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`Version(Nullable<Int64>)` method::
Member type changed from `SourceExistsDescriptor<T>` to `SourceExistsDescriptor<TDocument>`.
`VersionType(Nullable<VersionType>)` method::
Member type changed from `SourceExistsDescriptor<T>` to `SourceExistsDescriptor<TDocument>`.

[float]
=== `Nest.SourceExistsRequest`

[horizontal]
`SourceExistsRequest()` method:: added
`SourceExistsRequest(IndexName, Id)` method:: added
`SourceExistsRequest(IndexName, TypeName, Id)` method:: deleted
`Parent` property:: deleted
`SourceExclude` property:: deleted
`SourceExcludes` property:: added
`SourceInclude` property:: deleted
`SourceIncludes` property:: added

[float]
=== `Nest.SourceExistsRequest<TDocument>`

[horizontal]
`SourceExistsRequest()` method:: added
`SourceExistsRequest(DocumentPath<T>, IndexName, TypeName, Id)` method:: deleted
`SourceExistsRequest(Id)` method:: added
`SourceExistsRequest(IndexName, Id)` method:: added
`SourceExistsRequest(IndexName, TypeName, Id)` method:: deleted
`SourceExistsRequest(TDocument, IndexName, Id)` method:: added
`Parent` property:: deleted
`Preference` property:: deleted
`Realtime` property:: deleted
`Refresh` property:: deleted
`Routing` property:: deleted
`Self` property:: deleted
`SourceEnabled` property:: deleted
`SourceExclude` property:: deleted
`SourceInclude` property:: deleted
`TypedSelf` property:: added
`Version` property:: deleted
`VersionType` property:: deleted

[float]
=== `Nest.SourceManyExtensions`

[horizontal]
`SourceMany<T>(IElasticClient, IEnumerable<Int64>, String)` method:: added
`SourceMany<T>(IElasticClient, IEnumerable<Int64>, String, String)` method:: deleted
`SourceMany<T>(IElasticClient, IEnumerable<String>, String)` method:: added
`SourceMany<T>(IElasticClient, IEnumerable<String>, String, String)` method:: deleted
`SourceManyAsync<T>(IElasticClient, IEnumerable<Int64>, String, String, CancellationToken)` method:: deleted
`SourceManyAsync<T>(IElasticClient, IEnumerable<Int64>, String, CancellationToken)` method:: added
`SourceManyAsync<T>(IElasticClient, IEnumerable<String>, String, String, CancellationToken)` method:: deleted
`SourceManyAsync<T>(IElasticClient, IEnumerable<String>, String, CancellationToken)` method:: added

[float]
=== `Nest.SourceRequest`

[horizontal]
`SourceRequest()` method:: added
`SourceRequest(IndexName, Id)` method:: added
`SourceRequest(IndexName, TypeName, Id)` method:: deleted
`Parent` property:: deleted
`SourceExclude` property:: deleted
`SourceExcludes` property:: added
`SourceInclude` property:: deleted
`SourceIncludes` property:: added

[float]
=== `Nest.SourceRequest<TDocument>`

[horizontal]
`SourceRequest()` method:: added
`SourceRequest(DocumentPath<T>, IndexName, TypeName, Id)` method:: deleted
`SourceRequest(Id)` method:: added
`SourceRequest(IndexName, Id)` method:: added
`SourceRequest(IndexName, TypeName, Id)` method:: deleted
`SourceRequest(TDocument, IndexName, Id)` method:: added
`Parent` property:: deleted
`Preference` property:: deleted
`Realtime` property:: deleted
`Refresh` property:: deleted
`Routing` property:: deleted
`Self` property:: deleted
`SourceEnabled` property:: deleted
`SourceExclude` property:: deleted
`SourceInclude` property:: deleted
`TypedSelf` property:: added
`Version` property:: deleted
`VersionType` property:: deleted

[float]
=== `Nest.SourceRequestResponseBuilder<TDocument>`

[horizontal]
type:: added

[float]
=== `Nest.SourceResponse<TDocument>`

[horizontal]

[float]
=== `Nest.SpanFieldMaskingQueryDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.SpanGapQueryDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added



[float]
=== `Nest.Specification.CatApi.CatNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.ClusterApi.ClusterNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.GraphApi.GraphNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.IndicesApi.IndicesNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.IngestApi.IngestNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.LicenseApi.LicenseNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.MachineLearningApi.MachineLearningNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.MigrationApi.MigrationNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.NodesApi.NodesNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.RollupApi.RollupNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.SecurityApi.SecurityNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.SnapshotApi.SnapshotNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.SqlApi.SqlNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.TasksApi.TasksNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.WatcherApi.WatcherNamespace`

[horizontal]
type:: added

[float]
=== `Nest.Specification.XPackApi.XPackNamespace`

[horizontal]
type:: added

[float]
=== `Nest.SplitIndexDescriptor`

[horizontal]
`SplitIndexDescriptor()` method:: added
`CopySettings(Nullable<Boolean>)` method:: deleted
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.SplitIndexRequest`

[horizontal]
`SplitIndexRequest()` method::
Member is more visible.
`CopySettings` property:: deleted

[float]
=== `Nest.SplitIndexResponse`

[horizontal]
`ShardsAcknowledged` property getter::
changed to non-virtual.

[float]
=== `Nest.SplitProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added





[float]
=== `Nest.StandardTokenFilter`

[horizontal]
type:: deleted

[float]
=== `Nest.StandardTokenFilterDescriptor`

[horizontal]
type:: deleted


[float]
=== `Nest.StartBasicLicenseResponse`

[horizontal]
`Acknowledge` property getter::
changed to non-virtual.
`BasicWasStarted` property getter::
changed to non-virtual.
`ErrorMessage` property getter::
changed to non-virtual.
`IsValid` property:: deleted

[float]
=== `Nest.StartDatafeedDescriptor`

[horizontal]
`StartDatafeedDescriptor()` method:: added
`StartDatafeedDescriptor(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.

[float]
=== `Nest.StartDatafeedRequest`

[horizontal]
`StartDatafeedRequest()` method:: added
`StartDatafeedRequest(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.

[float]
=== `Nest.StartDatafeedResponse`

[horizontal]
`Started` property getter::
changed to non-virtual.

[float]
=== `Nest.StartIlmDescriptor`

[horizontal]
`MasterTimeout(Time)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.StartIlmRequest`

[horizontal]
`MasterTimeout` property:: deleted
`Timeout` property:: deleted

[float]
=== `Nest.StartRollupJobDescriptor`

[horizontal]
`StartRollupJobDescriptor()` method:: added

[float]
=== `Nest.StartRollupJobRequest`

[horizontal]
`StartRollupJobRequest()` method:: added

[float]
=== `Nest.StartRollupJobResponse`

[horizontal]
`Started` property getter::
changed to non-virtual.
`Started` property setter::
changed to non-virtual.

[float]
=== `Nest.StartTrialLicenseDescriptor`

[horizontal]
`TypeQueryString(String)` method::
Parameter name changed from `typeQueryString` to `typequerystring`.

[float]
=== `Nest.StartTrialLicenseResponse`

[horizontal]
`ErrorMessage` property getter::
changed to non-virtual.
`TrialWasStarted` property getter::
changed to non-virtual.


[float]
=== `Nest.StatsAggregate`

[horizontal]


[float]
=== `Nest.StopDatafeedDescriptor`

[horizontal]
`StopDatafeedDescriptor()` method:: added
`StopDatafeedDescriptor(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.
`AllowNoDatafeeds(Nullable<Boolean>)` method::
Parameter name changed from `allowNoDatafeeds` to `allownodatafeeds`.

[float]
=== `Nest.StopDatafeedRequest`

[horizontal]
`StopDatafeedRequest()` method:: added
`StopDatafeedRequest(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.

[float]
=== `Nest.StopDatafeedResponse`

[horizontal]
`Stopped` property getter::
changed to non-virtual.

[float]
=== `Nest.StopIlmDescriptor`

[horizontal]
`MasterTimeout(Time)` method:: deleted
`Timeout(Time)` method:: deleted

[float]
=== `Nest.StopIlmRequest`

[horizontal]
`MasterTimeout` property:: deleted
`Timeout` property:: deleted

[float]
=== `Nest.StopRollupJobDescriptor`

[horizontal]
`StopRollupJobDescriptor()` method:: added
`WaitForCompletion(Nullable<Boolean>)` method::
Parameter name changed from `waitForCompletion` to `waitforcompletion`.

[float]
=== `Nest.StopRollupJobRequest`

[horizontal]
`StopRollupJobRequest()` method:: added

[float]
=== `Nest.StopRollupJobResponse`

[horizontal]
`Stopped` property getter::
changed to non-virtual.
`Stopped` property setter::
changed to non-virtual.




[float]
=== `Nest.StoredScriptMapping`

[horizontal]
type:: deleted



[float]
=== `Nest.StringEnumAttribute`

[horizontal]
type:: deleted


[float]
=== `Nest.Suggest<T>`

[horizontal]
`Length` property getter::
changed to virtual.
`Offset` property getter::
changed to virtual.
`Options` property getter::
changed to virtual.
`Text` property getter::
changed to virtual.


[float]
=== `Nest.SuggestContextDescriptorBase<TDescriptor, TInterface, T>`

[horizontal]
`Path(Expression<Func<T, Object>>)` method:: deleted
`Path<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.SuggestDescriptorBase<TDescriptor, TInterface, T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.SuggestDictionary<T>`

[horizontal]
`SuggestDictionary(IReadOnlyDictionary<String, ISuggest<T>[]>)` method:: added
`SuggestDictionary(IReadOnlyDictionary<String, Suggest<T>[]>)` method:: deleted

[float]
=== `Nest.SuggestFuzziness`

[horizontal]
type:: added

[float]
=== `Nest.SuggestFuzzinessDescriptor<T>`

[horizontal]
type:: added

[float]
=== `Nest.SuggestOption<TDocument>`

[horizontal]
`CollateMatch` property getter::
changed to virtual.
`Contexts` property getter::
changed to virtual.
`DocumentScore` property getter::
Member is more visible.
`Frequency` property getter::
changed to virtual.
`Frequency` property setter::
changed to virtual.
`Highlighted` property getter::
changed to virtual.
`Id` property getter::
changed to virtual.
`Index` property getter::
changed to virtual.
`Score` property getter::
changed to virtual.
`Source` property getter::
changed to virtual.
`SuggestScore` property getter::
Member is more visible.
`Text` property getter::
changed to virtual.
`Type` property:: deleted


[float]
=== `Nest.SumDetectorDescriptor<T>`

[horizontal]
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`FieldName(Expression<Func<T, Object>>)` method:: deleted
`FieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`OverFieldName(Expression<Func<T, Object>>)` method:: deleted
`OverFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.SyncedFlushDescriptor`

[horizontal]
`SyncedFlushDescriptor(Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.


[float]
=== `Nest.SynonymGraphTokenFilter`

[horizontal]
`IgnoreCase` property:: deleted

[float]
=== `Nest.SynonymGraphTokenFilterDescriptor`

[horizontal]
`IgnoreCase(Nullable<Boolean>)` method:: deleted

[float]
=== `Nest.SynonymTokenFilter`

[horizontal]
`IgnoreCase` property:: deleted

[float]
=== `Nest.SynonymTokenFilterDescriptor`

[horizontal]
`IgnoreCase(Nullable<Boolean>)` method:: deleted






[float]
=== `Nest.TaskStatus`

[horizontal]

[float]
=== `Nest.TemplateMapping`

[horizontal]




[float]
=== `Nest.TermsAggregationDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added




[float]
=== `Nest.TermsOrder`

[horizontal]
`Key` property getter::
changed to virtual.
`Key` property setter::
changed to virtual.
`Order` property getter::
changed to virtual.
`Order` property setter::
changed to virtual.
`TermAscending` property:: deleted
`TermDescending` property:: deleted



[float]
=== `Nest.TermsSetQueryDescriptor<T>`

[horizontal]
`MinimumShouldMatchField(Expression<Func<T, Object>>)` method:: deleted
`MinimumShouldMatchField<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.TermSuggester`

[horizontal]

[float]
=== `Nest.TermSuggesterDescriptor<T>`

[horizontal]
`MaxTermFrequency(Nullable<Decimal>)` method:: deleted
`MaxTermFrequency(Nullable<Single>)` method:: added
`MinDocFrequency(Nullable<Decimal>)` method:: deleted
`MinDocFrequency(Nullable<Single>)` method:: added




[float]
=== `Nest.TermVectorsDescriptor<TDocument>`

[horizontal]
`TermVectorsDescriptor()` method:: added
`TermVectorsDescriptor(DocumentPath<TDocument>)` method:: deleted
`TermVectorsDescriptor(Id)` method:: added
`TermVectorsDescriptor(IndexName)` method:: added
`TermVectorsDescriptor(IndexName, Id)` method:: added
`TermVectorsDescriptor(IndexName, TypeName)` method:: deleted
`TermVectorsDescriptor(TDocument, IndexName, Id)` method:: added
`FieldStatistics(Nullable<Boolean>)` method::
Parameter name changed from `fieldStatistics` to `fieldstatistics`.
`Parent(String)` method:: deleted
`TermStatistics(Nullable<Boolean>)` method::
Parameter name changed from `termStatistics` to `termstatistics`.
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`VersionType(Nullable<VersionType>)` method::
Parameter name changed from `versionType` to `versiontype`.

[float]
=== `Nest.TermVectorsRequest<TDocument>`

[horizontal]
`TermVectorsRequest()` method:: added
`TermVectorsRequest(DocumentPath<TDocument>, IndexName, TypeName, Id)` method:: deleted
`TermVectorsRequest(Id)` method:: added
`TermVectorsRequest(IndexName)` method:: added
`TermVectorsRequest(IndexName, Id)` method:: added
`TermVectorsRequest(IndexName, TypeName)` method:: deleted
`TermVectorsRequest(IndexName, TypeName, Id)` method:: deleted
`TermVectorsRequest(TDocument, IndexName, Id)` method:: added
`Parent` property:: deleted

[float]
=== `Nest.TermVectorsResponse`

[horizontal]
`Found` property getter::
changed to non-virtual.
`Id` property getter::
changed to non-virtual.
`Index` property getter::
changed to non-virtual.
`IsValid` property:: added
`TermVectors` property getter::
changed to non-virtual.
`Took` property getter::
changed to non-virtual.
`Type` property getter::
changed to non-virtual.
`Version` property getter::
changed to non-virtual.

[float]
=== `Nest.TermVectorsResult`

[horizontal]
`Type` property:: deleted






[float]
=== `Nest.TimeDetectorDescriptor<T>`

[horizontal]
`ByFieldName(Expression<Func<T, Object>>)` method:: deleted
`ByFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`OverFieldName(Expression<Func<T, Object>>)` method:: deleted
`OverFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added
`PartitionFieldName(Expression<Func<T, Object>>)` method:: deleted
`PartitionFieldName<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.Timestamp`

[horizontal]
type:: added






[float]
=== `Nest.TokenFiltersDescriptor`

[horizontal]
`Standard(String, Func<StandardTokenFilterDescriptor, IStandardTokenFilter>)` method:: deleted

[float]
=== `Nest.TopHitsAggregate`

[horizontal]
`Hits<TDocument>()` method::
Member type changed from `IReadOnlyCollection<Hit<TDocument>>` to `IReadOnlyCollection<IHit<TDocument>>`.

[float]
=== `Nest.TotalHits`

[horizontal]
type:: added

[float]
=== `Nest.TotalHitsRelation`

[horizontal]
type:: added


[float]
=== `Nest.TranslateSqlDescriptor`

[horizontal]
`RequestDefaults(TranslateSqlRequestParameters)` method:: added

[float]
=== `Nest.TranslateSqlRequest`

[horizontal]
`RequestDefaults(TranslateSqlRequestParameters)` method:: added

[float]
=== `Nest.TranslateSqlResponse`

[horizontal]
`Result` property getter::
changed to non-virtual.



[float]
=== `Nest.TransportStats`

[horizontal]
`RxCount` property:: added
`RXCount` property:: deleted
`RxSize` property:: added
`RXSize` property:: deleted
`RxSizeInBytes` property:: added
`RXSizeInBytes` property:: deleted
`TxCount` property:: added
`TXCount` property:: deleted
`TxSize` property:: added
`TXSize` property:: deleted
`TxSizeInBytes` property:: added
`TXSizeInBytes` property:: deleted




[float]
=== `Nest.TrimProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.TypeExistsDescriptor`

[horizontal]
`TypeExistsDescriptor()` method:: added
`TypeExistsDescriptor(Indices, Names)` method:: added
`TypeExistsDescriptor(Indices, Types)` method:: deleted
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`AllTypes()` method:: deleted
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted

[float]
=== `Nest.TypeExistsRequest`

[horizontal]
`TypeExistsRequest()` method:: added
`TypeExistsRequest(Indices, Names)` method:: added
`TypeExistsRequest(Indices, Types)` method:: deleted

[float]
=== `Nest.TypeFieldMappings`

[horizontal]

[float]
=== `Nest.TypeMappings`

[horizontal]
type:: deleted

[float]
=== `Nest.TypeName`

[horizontal]
type:: deleted

[float]
=== `Nest.TypeNameResolver`

[horizontal]
type:: deleted

[float]
=== `Nest.TypeQuery`

[horizontal]
type:: deleted

[float]
=== `Nest.TypeQueryDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.Types`

[horizontal]
type:: deleted



[float]
=== `Nest.UnfollowIndexDescriptor`

[horizontal]
`UnfollowIndexDescriptor()` method:: added

[float]
=== `Nest.UnfollowIndexRequest`

[horizontal]
`UnfollowIndexRequest()` method:: added



[float]
=== `Nest.UpdateByQueryDescriptor<TDocument>`

[horizontal]
`UpdateByQueryDescriptor()` method:: added
`AllIndices()` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`Analyzer(String)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`AnalyzeWildcard(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Conflicts(Nullable<Conflicts>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`DefaultOperator(Nullable<DefaultOperator>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Df(String)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`From(Nullable<Int64>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Lenient(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`MatchAll()` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Pipeline(String)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Preference(String)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Query(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`Query(Func<QueryContainerDescriptor<TDocument>, QueryContainer>)` method:: added
`QueryOnQueryString(String)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Refresh(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`RequestCache(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`RequestsPerSecond(Nullable<Int64>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Routing(Routing)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Script(Func<ScriptDescriptor, IScript>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Script(String)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Scroll(Time)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`ScrollSize(Nullable<Int64>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`SearchTimeout(Time)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`SearchType(Nullable<SearchType>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Size(Nullable<Int64>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Slices(Nullable<Int64>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Sort(String[])` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`SourceEnabled(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`SourceExclude(Fields)` method:: deleted
`SourceExclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceExcludes(Fields)` method:: added
`SourceExcludes(Expression<Func<TDocument, Object>>[])` method:: added
`SourceInclude(Fields)` method:: deleted
`SourceInclude(Expression<Func<T, Object>>[])` method:: deleted
`SourceIncludes(Fields)` method:: added
`SourceIncludes(Expression<Func<TDocument, Object>>[])` method:: added
`Stats(String[])` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`TerminateAfter(Nullable<Int64>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Timeout(Time)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted
`Version(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`VersionType(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`WaitForActiveShards(String)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.
`WaitForCompletion(Nullable<Boolean>)` method::
Member type changed from `UpdateByQueryDescriptor<T>` to `UpdateByQueryDescriptor<TDocument>`.

[float]
=== `Nest.UpdateByQueryRequest`

[horizontal]
`UpdateByQueryRequest()` method:: added
`UpdateByQueryRequest(Indices, Types)` method:: deleted
`SourceExclude` property:: deleted
`SourceExcludes` property:: added
`SourceInclude` property:: deleted
`SourceIncludes` property:: added

[float]
=== `Nest.UpdateByQueryRequest<TDocument>`

[horizontal]
`UpdateByQueryRequest()` method:: added
`UpdateByQueryRequest(Indices, Types)` method:: deleted
`AllowNoIndices` property:: deleted
`Analyzer` property:: deleted
`AnalyzeWildcard` property:: deleted
`Conflicts` property:: deleted
`DefaultOperator` property:: deleted
`Df` property:: deleted
`ExpandWildcards` property:: deleted
`From` property:: deleted
`IgnoreUnavailable` property:: deleted
`Lenient` property:: deleted
`Pipeline` property:: deleted
`Preference` property:: deleted
`Query` property:: deleted
`QueryOnQueryString` property:: deleted
`Refresh` property:: deleted
`RequestCache` property:: deleted
`RequestsPerSecond` property:: deleted
`Routing` property:: deleted
`Script` property:: deleted
`Scroll` property:: deleted
`ScrollSize` property:: deleted
`SearchTimeout` property:: deleted
`SearchType` property:: deleted
`Self` property:: deleted
`Size` property:: deleted
`Slices` property:: deleted
`Sort` property:: deleted
`SourceEnabled` property:: deleted
`SourceExclude` property:: deleted
`SourceInclude` property:: deleted
`Stats` property:: deleted
`TerminateAfter` property:: deleted
`Timeout` property:: deleted
`TypedSelf` property:: added
`Version` property:: deleted
`VersionType` property:: deleted
`WaitForActiveShards` property:: deleted
`WaitForCompletion` property:: deleted

[float]
=== `Nest.UpdateByQueryResponse`

[horizontal]
`Batches` property getter::
changed to non-virtual.
`Failures` property getter::
changed to non-virtual.
`Noops` property getter::
changed to non-virtual.
`RequestsPerSecond` property getter::
changed to non-virtual.
`Retries` property getter::
changed to non-virtual.
`Task` property getter::
changed to non-virtual.
`TimedOut` property getter::
changed to non-virtual.
`Took` property getter::
changed to non-virtual.
`Total` property getter::
changed to non-virtual.
`Updated` property getter::
changed to non-virtual.
`VersionConflicts` property getter::
changed to non-virtual.

[float]
=== `Nest.UpdateByQueryRethrottleDescriptor`

[horizontal]
`UpdateByQueryRethrottleDescriptor()` method:: added
`UpdateByQueryRethrottleDescriptor(TaskId)` method::
Parameter name changed from `task_id` to `taskId`.
`RequestsPerSecond(Nullable<Int64>)` method::
Parameter name changed from `requestsPerSecond` to `requestspersecond`.

[float]
=== `Nest.UpdateByQueryRethrottleRequest`

[horizontal]
`UpdateByQueryRethrottleRequest()` method:: added
`UpdateByQueryRethrottleRequest(TaskId)` method::
Parameter name changed from `task_id` to `taskId`.

[float]
=== `Nest.UpdateDatafeedDescriptor<TDocument>`

[horizontal]
`UpdateDatafeedDescriptor()` method:: added
`UpdateDatafeedDescriptor(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.
`Aggregations(Func<AggregationContainerDescriptor<T>, IAggregationContainer>)` method:: deleted
`Aggregations(Func<AggregationContainerDescriptor<TDocument>, IAggregationContainer>)` method:: added
`AllIndices()` method::
Member type changed from `UpdateDatafeedDescriptor<T>` to `UpdateDatafeedDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`ChunkingConfig(Func<ChunkingConfigDescriptor, IChunkingConfig>)` method::
Member type changed from `UpdateDatafeedDescriptor<T>` to `UpdateDatafeedDescriptor<TDocument>`.
`Frequency(Time)` method::
Member type changed from `UpdateDatafeedDescriptor<T>` to `UpdateDatafeedDescriptor<TDocument>`.
`Indices<TOther>()` method::
Member type changed from `UpdateDatafeedDescriptor<T>` to `UpdateDatafeedDescriptor<TDocument>`.
`Indices(Indices)` method::
Member type changed from `UpdateDatafeedDescriptor<T>` to `UpdateDatafeedDescriptor<TDocument>`.
`JobId(Id)` method::
Member type changed from `UpdateDatafeedDescriptor<T>` to `UpdateDatafeedDescriptor<TDocument>`.
`Query(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`Query(Func<QueryContainerDescriptor<TDocument>, QueryContainer>)` method:: added
`QueryDelay(Time)` method::
Member type changed from `UpdateDatafeedDescriptor<T>` to `UpdateDatafeedDescriptor<TDocument>`.
`ScriptFields(Func<ScriptFieldsDescriptor, IPromise<IScriptFields>>)` method::
Member type changed from `UpdateDatafeedDescriptor<T>` to `UpdateDatafeedDescriptor<TDocument>`.
`ScrollSize(Nullable<Int32>)` method::
Member type changed from `UpdateDatafeedDescriptor<T>` to `UpdateDatafeedDescriptor<TDocument>`.
`Types<TOther>()` method:: deleted
`Types(Types)` method:: deleted

[float]
=== `Nest.UpdateDatafeedRequest`

[horizontal]
`UpdateDatafeedRequest()` method:: added
`UpdateDatafeedRequest(Id)` method::
Parameter name changed from `datafeed_id` to `datafeedId`.
`Types` property:: deleted

[float]
=== `Nest.UpdateDatafeedResponse`

[horizontal]
`Aggregations` property getter::
changed to non-virtual.
`ChunkingConfig` property getter::
changed to non-virtual.
`DatafeedId` property getter::
changed to non-virtual.
`Frequency` property getter::
changed to non-virtual.
`Indices` property getter::
changed to non-virtual.
`JobId` property getter::
changed to non-virtual.
`Query` property getter::
changed to non-virtual.
`QueryDelay` property getter::
changed to non-virtual.
`ScriptFields` property getter::
changed to non-virtual.
`ScrollSize` property getter::
changed to non-virtual.
`Types` property:: deleted

[float]
=== `Nest.UpdateDescriptor<TDocument, TPartialDocument>`

[horizontal]
`UpdateDescriptor()` method:: added
`UpdateDescriptor(DocumentPath<TDocument>)` method:: deleted
`UpdateDescriptor(Id)` method:: added
`UpdateDescriptor(IndexName, Id)` method:: added
`UpdateDescriptor(IndexName, TypeName, Id)` method:: deleted
`UpdateDescriptor(TDocument, IndexName, Id)` method:: added
`Fields(Fields)` method:: deleted
`Fields(Expression<Func<TPartialDocument, Object>>[])` method:: deleted
`Fields(String[])` method:: deleted
`IfPrimaryTerm(Nullable<Int64>)` method::
Parameter name changed from `ifPrimaryTerm` to `ifprimaryterm`.
`IfSeqNo(Nullable<Int64>)` method:: deleted
`IfSequenceNumber(Nullable<Int64>)` method:: added
`Parent(String)` method:: deleted
`RetryOnConflict(Nullable<Int64>)` method::
Parameter name changed from `retryOnConflict` to `retryonconflict`.
`SourceEnabled(Nullable<Boolean>)` method::
Parameter name changed from `sourceEnabled` to `sourceenabled`.
`Type<TOther>()` method:: deleted
`Type(TypeName)` method:: deleted
`Version(Nullable<Int64>)` method:: deleted
`VersionType(Nullable<VersionType>)` method:: deleted
`WaitForActiveShards(String)` method::
Parameter name changed from `waitForActiveShards` to `waitforactiveshards`.

[float]
=== `Nest.UpdateFilterDescriptor`

[horizontal]
`UpdateFilterDescriptor()` method:: added
`UpdateFilterDescriptor(Id)` method::
Parameter name changed from `filter_id` to `filterId`.

[float]
=== `Nest.UpdateFilterRequest`

[horizontal]
`UpdateFilterRequest()` method:: added
`UpdateFilterRequest(Id)` method::
Parameter name changed from `filter_id` to `filterId`.

[float]
=== `Nest.UpdateFilterResponse`

[horizontal]
`Description` property getter::
changed to non-virtual.
`FilterId` property getter::
changed to non-virtual.
`Items` property getter::
changed to non-virtual.

[float]
=== `Nest.UpdateIndexSettingsDescriptor`

[horizontal]
`UpdateIndexSettingsDescriptor(Indices)` method:: added
`AllowNoIndices(Nullable<Boolean>)` method::
Parameter name changed from `allowNoIndices` to `allownoindices`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Parameter name changed from `expandWildcards` to `expandwildcards`.
`FlatSettings(Nullable<Boolean>)` method::
Parameter name changed from `flatSettings` to `flatsettings`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Parameter name changed from `ignoreUnavailable` to `ignoreunavailable`.
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.
`PreserveExisting(Nullable<Boolean>)` method::
Parameter name changed from `preserveExisting` to `preserveexisting`.

[float]
=== `Nest.UpdateJobDescriptor<TDocument>`

[horizontal]
`UpdateJobDescriptor()` method:: added
`UpdateJobDescriptor(Id)` method::
Parameter name changed from `job_id` to `jobId`.
`AnalysisLimits(Func<AnalysisMemoryLimitDescriptor, IAnalysisMemoryLimit>)` method::
Member type changed from `UpdateJobDescriptor<T>` to `UpdateJobDescriptor<TDocument>`.
`BackgroundPersistInterval(Time)` method::
Member type changed from `UpdateJobDescriptor<T>` to `UpdateJobDescriptor<TDocument>`.
`CustomSettings(Func<FluentDictionary<String, Object>, FluentDictionary<String, Object>>)` method::
Member type changed from `UpdateJobDescriptor<T>` to `UpdateJobDescriptor<TDocument>`.
`Description(String)` method::
Member type changed from `UpdateJobDescriptor<T>` to `UpdateJobDescriptor<TDocument>`.
`ModelPlot(Func<ModelPlotConfigEnabledDescriptor<T>, IModelPlotConfigEnabled>)` method:: deleted
`ModelPlot(Func<ModelPlotConfigEnabledDescriptor<TDocument>, IModelPlotConfigEnabled>)` method:: added
`ModelSnapshotRetentionDays(Nullable<Int64>)` method::
Member type changed from `UpdateJobDescriptor<T>` to `UpdateJobDescriptor<TDocument>`.
`RenormalizationWindowDays(Nullable<Int64>)` method::
Member type changed from `UpdateJobDescriptor<T>` to `UpdateJobDescriptor<TDocument>`.
`ResultsRetentionDays(Nullable<Int64>)` method::
Member type changed from `UpdateJobDescriptor<T>` to `UpdateJobDescriptor<TDocument>`.

[float]
=== `Nest.UpdateJobRequest`

[horizontal]
`UpdateJobRequest()` method:: added
`UpdateJobRequest(Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.UpdateModelSnapshotDescriptor`

[horizontal]
`UpdateModelSnapshotDescriptor()` method:: added
`UpdateModelSnapshotDescriptor(Id, Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.UpdateModelSnapshotRequest`

[horizontal]
`UpdateModelSnapshotRequest()` method:: added
`UpdateModelSnapshotRequest(Id, Id)` method::
Parameter name changed from `job_id` to `jobId`.

[float]
=== `Nest.UpdateModelSnapshotResponse`

[horizontal]
`Model` property getter::
changed to non-virtual.

[float]
=== `Nest.UpdateRequest<TDocument, TPartialDocument>`

[horizontal]
`UpdateRequest()` method:: added
`UpdateRequest(DocumentPath<TDocument>, IndexName, TypeName, Id)` method:: deleted
`UpdateRequest(Id)` method:: added
`UpdateRequest(IndexName, Id)` method:: added
`UpdateRequest(IndexName, TypeName, Id)` method:: deleted
`UpdateRequest(TDocument, IndexName, Id)` method:: added
`Fields` property:: deleted
`IfSeqNo` property:: deleted
`IfSequenceNumber` property:: added
`Parent` property:: deleted
`Version` property:: deleted
`VersionType` property:: deleted

[float]
=== `Nest.UpdateResponse<TDocument>`

[horizontal]
`Id` property:: deleted
`Index` property:: deleted
`IsValid` property:: added
`Result` property:: deleted
`ShardsHit` property:: deleted
`Type` property:: deleted
`Version` property:: deleted

[float]
=== `Nest.UpgradeActionRequired`

[horizontal]
type:: deleted

[float]
=== `Nest.UpgradeDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.UpgradeRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.UpgradeResponse`

[horizontal]
type:: deleted

[float]
=== `Nest.UpgradeStatus`

[horizontal]
type:: deleted

[float]
=== `Nest.UpgradeStatusDescriptor`

[horizontal]
type:: deleted

[float]
=== `Nest.UpgradeStatusRequest`

[horizontal]
type:: deleted

[float]
=== `Nest.UpgradeStatusResponse`

[horizontal]
type:: deleted


[float]
=== `Nest.UppercaseProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added


[float]
=== `Nest.UrlDecodeProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.UserAgentProcessorDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added
`TargetField(Expression<Func<T, Object>>)` method:: deleted
`TargetField<TValue>(Expression<Func<T, TValue>>)` method:: added



[float]
=== `Nest.ValidateDetectorDescriptor<TDocument>`

[horizontal]
`Count(Func<CountDetectorDescriptor<T>, ICountDetector>)` method:: deleted
`Count(Func<CountDetectorDescriptor<TDocument>, ICountDetector>)` method:: added
`DistinctCount(Func<DistinctCountDetectorDescriptor<T>, IDistinctCountDetector>)` method:: deleted
`DistinctCount(Func<DistinctCountDetectorDescriptor<TDocument>, IDistinctCountDetector>)` method:: added
`FreqRare(Func<RareDetectorDescriptor<T>, IRareDetector>)` method:: deleted
`FreqRare(Func<RareDetectorDescriptor<TDocument>, IRareDetector>)` method:: added
`HighCount(Func<CountDetectorDescriptor<T>, ICountDetector>)` method:: deleted
`HighCount(Func<CountDetectorDescriptor<TDocument>, ICountDetector>)` method:: added
`HighDistinctCount(Func<DistinctCountDetectorDescriptor<T>, IDistinctCountDetector>)` method:: deleted
`HighDistinctCount(Func<DistinctCountDetectorDescriptor<TDocument>, IDistinctCountDetector>)` method:: added
`HighInfoContent(Func<InfoContentDetectorDescriptor<T>, IInfoContentDetector>)` method:: deleted
`HighInfoContent(Func<InfoContentDetectorDescriptor<TDocument>, IInfoContentDetector>)` method:: added
`HighMean(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`HighMean(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`HighMedian(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`HighMedian(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`HighNonNullSum(Func<NonNullSumDetectorDescriptor<T>, INonNullSumDetector>)` method:: deleted
`HighNonNullSum(Func<NonNullSumDetectorDescriptor<TDocument>, INonNullSumDetector>)` method:: added
`HighNonZeroCount(Func<NonZeroCountDetectorDescriptor<T>, INonZeroCountDetector>)` method:: deleted
`HighNonZeroCount(Func<NonZeroCountDetectorDescriptor<TDocument>, INonZeroCountDetector>)` method:: added
`HighSum(Func<SumDetectorDescriptor<T>, ISumDetector>)` method:: deleted
`HighSum(Func<SumDetectorDescriptor<TDocument>, ISumDetector>)` method:: added
`HighVarp(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`HighVarp(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`InfoContent(Func<InfoContentDetectorDescriptor<T>, IInfoContentDetector>)` method:: deleted
`InfoContent(Func<InfoContentDetectorDescriptor<TDocument>, IInfoContentDetector>)` method:: added
`LowCount(Func<CountDetectorDescriptor<T>, ICountDetector>)` method:: deleted
`LowCount(Func<CountDetectorDescriptor<TDocument>, ICountDetector>)` method:: added
`LowDistinctCount(Func<DistinctCountDetectorDescriptor<T>, IDistinctCountDetector>)` method:: deleted
`LowDistinctCount(Func<DistinctCountDetectorDescriptor<TDocument>, IDistinctCountDetector>)` method:: added
`LowInfoContent(Func<InfoContentDetectorDescriptor<T>, IInfoContentDetector>)` method:: deleted
`LowInfoContent(Func<InfoContentDetectorDescriptor<TDocument>, IInfoContentDetector>)` method:: added
`LowMean(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`LowMean(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`LowMedian(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`LowMedian(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`LowNonNullSum(Func<NonNullSumDetectorDescriptor<T>, INonNullSumDetector>)` method:: deleted
`LowNonNullSum(Func<NonNullSumDetectorDescriptor<TDocument>, INonNullSumDetector>)` method:: added
`LowNonZeroCount(Func<NonZeroCountDetectorDescriptor<T>, INonZeroCountDetector>)` method:: deleted
`LowNonZeroCount(Func<NonZeroCountDetectorDescriptor<TDocument>, INonZeroCountDetector>)` method:: added
`LowSum(Func<SumDetectorDescriptor<T>, ISumDetector>)` method:: deleted
`LowSum(Func<SumDetectorDescriptor<TDocument>, ISumDetector>)` method:: added
`LowVarp(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`LowVarp(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`Max(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`Max(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`Mean(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`Mean(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`Median(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`Median(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`Metric(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`Metric(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`Min(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`Min(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added
`NonNullSum(Func<NonNullSumDetectorDescriptor<T>, INonNullSumDetector>)` method:: deleted
`NonNullSum(Func<NonNullSumDetectorDescriptor<TDocument>, INonNullSumDetector>)` method:: added
`NonZeroCount(Func<NonZeroCountDetectorDescriptor<T>, INonZeroCountDetector>)` method:: deleted
`NonZeroCount(Func<NonZeroCountDetectorDescriptor<TDocument>, INonZeroCountDetector>)` method:: added
`Rare(Func<RareDetectorDescriptor<T>, IRareDetector>)` method:: deleted
`Rare(Func<RareDetectorDescriptor<TDocument>, IRareDetector>)` method:: added
`Sum(Func<SumDetectorDescriptor<T>, ISumDetector>)` method:: deleted
`Sum(Func<SumDetectorDescriptor<TDocument>, ISumDetector>)` method:: added
`TimeOfDay(Func<TimeDetectorDescriptor<T>, ITimeDetector>)` method:: deleted
`TimeOfDay(Func<TimeDetectorDescriptor<TDocument>, ITimeDetector>)` method:: added
`TimeOfWeek(Func<TimeDetectorDescriptor<T>, ITimeDetector>)` method:: deleted
`TimeOfWeek(Func<TimeDetectorDescriptor<TDocument>, ITimeDetector>)` method:: added
`Varp(Func<MetricDetectorDescriptor<T>, IMetricDetector>)` method:: deleted
`Varp(Func<MetricDetectorDescriptor<TDocument>, IMetricDetector>)` method:: added

[float]
=== `Nest.ValidateJobDescriptor<TDocument>`

[horizontal]
`AnalysisConfig(Func<AnalysisConfigDescriptor<T>, IAnalysisConfig>)` method:: deleted
`AnalysisConfig(Func<AnalysisConfigDescriptor<TDocument>, IAnalysisConfig>)` method:: added
`AnalysisLimits(Func<AnalysisLimitsDescriptor, IAnalysisLimits>)` method::
Member type changed from `ValidateJobDescriptor<T>` to `ValidateJobDescriptor<TDocument>`.
`DataDescription(Func<DataDescriptionDescriptor<T>, IDataDescription>)` method:: deleted
`DataDescription(Func<DataDescriptionDescriptor<TDocument>, IDataDescription>)` method:: added
`Description(String)` method::
Member type changed from `ValidateJobDescriptor<T>` to `ValidateJobDescriptor<TDocument>`.
`ModelPlot(Func<ModelPlotConfigDescriptor<T>, IModelPlotConfig>)` method:: deleted
`ModelPlot(Func<ModelPlotConfigDescriptor<TDocument>, IModelPlotConfig>)` method:: added
`ModelSnapshotRetentionDays(Nullable<Int64>)` method::
Member type changed from `ValidateJobDescriptor<T>` to `ValidateJobDescriptor<TDocument>`.
`ResultsIndexName<TIndex>()` method::
Member type changed from `ValidateJobDescriptor<T>` to `ValidateJobDescriptor<TDocument>`.
`ResultsIndexName(IndexName)` method::
Member type changed from `ValidateJobDescriptor<T>` to `ValidateJobDescriptor<TDocument>`.

[float]
=== `Nest.ValidateQueryDescriptor<TDocument>`

[horizontal]
`ValidateQueryDescriptor(Indices)` method:: added
`AllIndices()` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`AllowNoIndices(Nullable<Boolean>)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`AllShards(Nullable<Boolean>)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`AllTypes()` method:: deleted
`Analyzer(String)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`AnalyzeWildcard(Nullable<Boolean>)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`DefaultOperator(Nullable<DefaultOperator>)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`Df(String)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`ExpandWildcards(Nullable<ExpandWildcards>)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`Explain(Nullable<Boolean>)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`IgnoreUnavailable(Nullable<Boolean>)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`Index<TOther>()` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`Index(Indices)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`Lenient(Nullable<Boolean>)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`OperationThreading(String)` method:: deleted
`Query(Func<QueryContainerDescriptor<T>, QueryContainer>)` method:: deleted
`Query(Func<QueryContainerDescriptor<TDocument>, QueryContainer>)` method:: added
`QueryOnQueryString(String)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`Rewrite(Nullable<Boolean>)` method::
Member type changed from `ValidateQueryDescriptor<T>` to `ValidateQueryDescriptor<TDocument>`.
`Type<TOther>()` method:: deleted
`Type(Types)` method:: deleted

[float]
=== `Nest.ValidateQueryRequest`

[horizontal]
`ValidateQueryRequest(Indices, Types)` method:: deleted
`OperationThreading` property:: deleted

[float]
=== `Nest.ValidateQueryRequest<TDocument>`

[horizontal]
`ValidateQueryRequest(Indices, Types)` method:: deleted
`AllowNoIndices` property:: deleted
`AllShards` property:: deleted
`Analyzer` property:: deleted
`AnalyzeWildcard` property:: deleted
`DefaultOperator` property:: deleted
`Df` property:: deleted
`ExpandWildcards` property:: deleted
`Explain` property:: deleted
`IgnoreUnavailable` property:: deleted
`Lenient` property:: deleted
`OperationThreading` property:: deleted
`Query` property:: deleted
`QueryOnQueryString` property:: deleted
`Rewrite` property:: deleted
`Self` property:: deleted
`TypedSelf` property:: added

[float]
=== `Nest.ValidateQueryResponse`

[horizontal]
`Explanations` property getter::
changed to non-virtual.
`Shards` property getter::
changed to non-virtual.
`Valid` property getter::
changed to non-virtual.



[float]
=== `Nest.VerifyRepositoryDescriptor`

[horizontal]
`VerifyRepositoryDescriptor()` method:: added
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.VerifyRepositoryRequest`

[horizontal]
`VerifyRepositoryRequest()` method:: added

[float]
=== `Nest.VerifyRepositoryResponse`

[horizontal]
`Nodes` property getter::
changed to non-virtual.


[float]
=== `Nest.Watch`

[horizontal]
`Actions` property getter::
changed to virtual.
`Actions` property setter::
Member is more visible.
`Condition` property getter::
changed to virtual.
`Condition` property setter::
Member is more visible.
`Input` property getter::
changed to virtual.
`Input` property setter::
Member is more visible.
`Meta` property:: deleted
`Metadata` property:: added
`Status` property setter::
Member is more visible.
`ThrottlePeriod` property getter::
changed to virtual.
`ThrottlePeriod` property setter::
Member is more visible.
`Transform` property getter::
changed to virtual.
`Transform` property setter::
Member is more visible.
`Trigger` property getter::
changed to virtual.
`Trigger` property setter::
Member is more visible.

[float]
=== `Nest.WatchDescriptor`

[horizontal]
type:: added



[float]
=== `Nest.WatcherStatsDescriptor`

[horizontal]
`WatcherStatsDescriptor(Metrics)` method:: added
`EmitStacktraces(Nullable<Boolean>)` method::
Parameter name changed from `emitStacktraces` to `emitstacktraces`.
`Metric(Metrics)` method:: added
`WatcherStatsMetric(WatcherStatsMetric)` method:: deleted

[float]
=== `Nest.WatcherStatsRequest`

[horizontal]
`WatcherStatsRequest(WatcherStatsMetric)` method:: deleted
`WatcherStatsRequest(Metrics)` method:: added

[float]
=== `Nest.WatcherStatsResponse`

[horizontal]
`ClusterName` property getter::
changed to non-virtual.
`ManuallyStopped` property getter::
changed to non-virtual.
`Stats` property getter::
changed to non-virtual.

[float]
=== `Nest.WatchRecord`

[horizontal]
`Node` property:: added





[float]
=== `Nest.WeightedAverageValueDescriptor<T>`

[horizontal]
`Field(Expression<Func<T, Object>>)` method:: deleted
`Field<TValue>(Expression<Func<T, TValue>>)` method:: added

[float]
=== `Nest.WildcardQuery<T>`

[horizontal]
type:: deleted

[float]
=== `Nest.WildcardQuery<T, TValue>`

[horizontal]
type:: added

[float]
=== `Nest.WriteResponseBase`

[horizontal]
type:: added





[float]
=== `Nest.XPackInfoResponse`

[horizontal]
`Build` property getter::
changed to non-virtual.
`Features` property getter::
changed to non-virtual.
`License` property getter::
changed to non-virtual.
`Tagline` property getter::
changed to non-virtual.




[float]
=== `Nest.XPackUsageDescriptor`

[horizontal]
`MasterTimeout(Time)` method::
Parameter name changed from `masterTimeout` to `mastertimeout`.

[float]
=== `Nest.XPackUsageResponse`

[horizontal]
`Alerting` property getter::
changed to non-virtual.
`Ccr` property getter::
changed to non-virtual.
`Graph` property getter::
changed to non-virtual.
`Logstash` property getter::
changed to non-virtual.
`MachineLearning` property getter::
changed to non-virtual.
`Monitoring` property getter::
changed to non-virtual.
`Rollup` property getter::
changed to non-virtual.
`Security` property getter::
changed to non-virtual.
`Sql` property getter::
changed to non-virtual.



[float]
=== `System.Collections.Generic.SynchronizedCollection<T>`

[horizontal]
type:: deleted
