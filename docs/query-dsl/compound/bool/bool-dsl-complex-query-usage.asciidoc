:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/7.0

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Tests/QueryDsl/Compound/Bool/BoolDslComplexQueryUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[bool-dsl-complex-query-usage]]
=== Bool Dsl Complex Query Usage

==== Fluent DSL example

[source,csharp]
----
q.Query() && q.Query()
//second bool
|| (+q.Query() || +q.Query() || !q.Query() && (!q.Query() && !q.ConditionlessQuery()))
// simple nested or
&& (q.Query() || q.Query() || q.Query())
//all conditionless bool
&& (q.NullQuery() || +q.ConditionlessQuery() || !q.ConditionlessQuery())
// actual bool query
&& base.QueryFluent(q)
----

==== Object Initializer syntax example

[source,csharp]
----
Query && Query
//second bool
|| (+Query || +Query || !Query && (!Query && !ConditionlessQuery))
// simple nested or
&& (Query || Query || Query)
//all conditionless bool
&& (NullQuery || +ConditionlessQuery || !ConditionlessQuery)
// actual bool query
&& base.QueryInitializer
----

