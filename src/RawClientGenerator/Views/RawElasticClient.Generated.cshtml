@using System.Linq
@using RawClientGenerator
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

///Generated File Please Do Not Edit Manually
@{
	RawClientGenerator.RestApiSpec model = Model;
	<text>
namespace Nest
{
	///<summary>
	///Raw operations with elasticsearch
	///</summary>
	public partial class RawElasticClient : IRawElasticClient
	{
	</text>
	foreach (var kv in model.Endpoints)
	{
		var identifier = kv.Key;
		var endpoint = kv.Value;
		var methods = endpoint.GetCsharpMethods().ToList();
		foreach (var method in methods)
		{
		<text>
		///<summary>@method.HttpMethod @method.Path
	    ///<pre>@method.Documentation</pre>	
	    ///</summary></text>
			foreach (var part in method.Parts)
			{
		<text>@Raw("///<param name=\"" + part.Name + "\">")@part.Description@Raw("</param>")</text>
			}
		<text>public @Raw(method.ReturnType) @(method.FullName)(@Raw(method.Arguments))
		{
		@foreach (RawClientGenerator.ApiUrlPart part in method.Parts.Where(p=>p.Name != "body").ToList())
		{
			<text>@(part.Name).ThrowIfNull("@part.Name");</text>
		}
		@if (method.Parts.Any())
		{
	<text>var url = "@(method.Path.Split(new []{'/'},2).Last())".Inject(new { @string.Join(", ", method.Parts.Where(p=>p.Name != "body").Select(p=> p.Name + " = Stringify(" + p.Name +")" )) });</text>
		}
		else
		{
	<text>var url = "@(method.Path.Split(new []{'/'},2).Last())";</text>
		}
			NameValueCollection nv = null;
			if (queryString != null)
			{
				var qs = queryString(new @(method.QueryStringParamName)());
				if (qs != null) nv = qs.NameValueCollection;
			}
		@{
			string requestMethod = method.ReturnType.StartsWith("Task<") ? "DoRequestAsync" : "DoRequest";
		}
			return this.@(requestMethod)("@method.HttpMethod", url@(method.Parts.Any(pp=>pp.Name == "body") ? ", body" : ", data: null"), queryString: nv);
		}</text>

		}
	}
	<text>
	  }
	  }
	</text>
}