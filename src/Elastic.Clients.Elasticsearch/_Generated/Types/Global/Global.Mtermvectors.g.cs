// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Global.Mtermvectors
{
	[ConvertAs(typeof(Operation))]
	public partial interface IOperation
	{
		object? Doc { get; set; }

		Elastic.Clients.Elasticsearch.Fields? Fields { get; set; }

		bool? FieldStatistics { get; set; }

		Elastic.Clients.Elasticsearch.Global.Termvectors.IFilter? Filter { get; set; }

		Elastic.Clients.Elasticsearch.Id Id { get; set; }

		Elastic.Clients.Elasticsearch.IndexName? Index { get; set; }

		bool? Offsets { get; set; }

		bool? Payloads { get; set; }

		bool? Positions { get; set; }

		Elastic.Clients.Elasticsearch.Routing? Routing { get; set; }

		bool? TermStatistics { get; set; }

		Elastic.Clients.Elasticsearch.VersionNumber? Version { get; set; }

		Elastic.Clients.Elasticsearch.VersionType? VersionType { get; set; }
	}

	public partial class OperationDescriptor : DescriptorBase<OperationDescriptor, IOperation>, IOperation
	{
		Elastic.Clients.Elasticsearch.Id IOperation.Id { get; set; }

		Elastic.Clients.Elasticsearch.IndexName? IOperation.Index { get; set; }

		object? IOperation.Doc { get; set; }

		Elastic.Clients.Elasticsearch.Fields? IOperation.Fields { get; set; }

		bool? IOperation.FieldStatistics { get; set; }

		Elastic.Clients.Elasticsearch.Global.Termvectors.IFilter? IOperation.Filter { get; set; }

		bool? IOperation.Offsets { get; set; }

		bool? IOperation.Payloads { get; set; }

		bool? IOperation.Positions { get; set; }

		Elastic.Clients.Elasticsearch.Routing? IOperation.Routing { get; set; }

		bool? IOperation.TermStatistics { get; set; }

		Elastic.Clients.Elasticsearch.VersionNumber? IOperation.Version { get; set; }

		Elastic.Clients.Elasticsearch.VersionType? IOperation.VersionType { get; set; }
	}

	public partial class Operation : IOperation
	{
		[JsonInclude]
		[JsonPropertyName("doc")]
		public object? Doc { get; set; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Elastic.Clients.Elasticsearch.Fields? Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("field_statistics")]
		public bool? FieldStatistics { get; set; }

		[JsonInclude]
		[JsonPropertyName("filter")]
		public Elastic.Clients.Elasticsearch.Global.Termvectors.IFilter? Filter { get; set; }

		[JsonInclude]
		[JsonPropertyName("_id")]
		public Elastic.Clients.Elasticsearch.Id Id { get; set; }

		[JsonInclude]
		[JsonPropertyName("_index")]
		public Elastic.Clients.Elasticsearch.IndexName? Index { get; set; }

		[JsonInclude]
		[JsonPropertyName("offsets")]
		public bool? Offsets { get; set; }

		[JsonInclude]
		[JsonPropertyName("payloads")]
		public bool? Payloads { get; set; }

		[JsonInclude]
		[JsonPropertyName("positions")]
		public bool? Positions { get; set; }

		[JsonInclude]
		[JsonPropertyName("routing")]
		public Elastic.Clients.Elasticsearch.Routing? Routing { get; set; }

		[JsonInclude]
		[JsonPropertyName("term_statistics")]
		public bool? TermStatistics { get; set; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public Elastic.Clients.Elasticsearch.VersionNumber? Version { get; set; }

		[JsonInclude]
		[JsonPropertyName("version_type")]
		public Elastic.Clients.Elasticsearch.VersionType? VersionType { get; set; }
	}

	public partial class TermVectorsResult
	{
		[JsonInclude]
		[JsonPropertyName("error")]
		public Elastic.Clients.Elasticsearch.ErrorCause? Error
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("found")]
		public bool? Found
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_id")]
		public Elastic.Clients.Elasticsearch.Id Id
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_index")]
		public Elastic.Clients.Elasticsearch.IndexName Index
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("term_vectors")]
		public Dictionary<Elastic.Clients.Elasticsearch.Field, Elastic.Clients.Elasticsearch.Global.Termvectors.TermVector>? TermVectors
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("took")]
		public long? Took
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_version")]
		public Elastic.Clients.Elasticsearch.VersionNumber? Version
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}
}