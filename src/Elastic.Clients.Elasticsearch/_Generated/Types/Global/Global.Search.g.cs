// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Global.Search
{
	public partial class AggregationBreakdown
	{
		[JsonInclude]
		[JsonPropertyName("build_aggregation")]
		public long BuildAggregation
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("build_aggregation_count")]
		public long BuildAggregationCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("build_leaf_collector")]
		public long BuildLeafCollector
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("build_leaf_collector_count")]
		public long BuildLeafCollectorCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("collect")]
		public long Collect
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("collect_count")]
		public long CollectCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("initialize")]
		public long Initialize
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("initialize_count")]
		public long InitializeCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("post_collection")]
		public long? PostCollection
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("post_collection_count")]
		public long? PostCollectionCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("reduce")]
		public long Reduce
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("reduce_count")]
		public long ReduceCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class AggregationProfile
	{
		[JsonInclude]
		[JsonPropertyName("breakdown")]
		public Elastic.Clients.Elasticsearch.Global.Search.AggregationBreakdown Breakdown
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("children")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.AggregationProfileDebug>? Children
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("debug")]
		public Elastic.Clients.Elasticsearch.Global.Search.AggregationProfileDebug? Debug
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("description")]
		public string Description
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("time_in_nanos")]
		public long TimeInNanos
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class AggregationProfileDebug
	{
	}

	public partial class Collector
	{
		[JsonInclude]
		[JsonPropertyName("children")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.Collector>? Children
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("name")]
		public string Name
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("reason")]
		public string Reason
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("time_in_nanos")]
		public long TimeInNanos
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class CompletionSuggestOption<TDocument>
	{
		[JsonInclude]
		[JsonPropertyName("collate_match")]
		public bool? CollateMatch
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("contexts")]
		public Dictionary<string, IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.Context>>? Contexts
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, object>? Fields
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_id")]
		public string Id
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_index")]
		public Elastic.Clients.Elasticsearch.IndexName Index
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_routing")]
		public Elastic.Clients.Elasticsearch.Routing? Routing
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_score")]
		public double Score
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_source")]
		public TDocument Source
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("text")]
		public string Text
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_type")]
		public Elastic.Clients.Elasticsearch.DocType? Type
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(CompletionSuggester))]
	public partial interface ICompletionSuggester
	{
		Elastic.Clients.Elasticsearch.Global.Search.ISuggestFuzziness? Fuzzy { get; set; }

		string? Prefix { get; set; }

		string? Regex { get; set; }

		bool? SkipDuplicates { get; set; }
	}

	public partial class CompletionSuggesterDescriptor : DescriptorBase<CompletionSuggesterDescriptor, ICompletionSuggester>, ICompletionSuggester
	{
		Elastic.Clients.Elasticsearch.Global.Search.ISuggestFuzziness? ICompletionSuggester.Fuzzy { get; set; }

		string? ICompletionSuggester.Prefix { get; set; }

		string? ICompletionSuggester.Regex { get; set; }

		bool? ICompletionSuggester.SkipDuplicates { get; set; }
	}

	public partial class CompletionSuggester : Global.Search.SuggesterBase, ICompletionSuggester
	{
		[JsonInclude]
		[JsonPropertyName("contexts")]
		public Dictionary<string, OneOf<string, IReadOnlyCollection<string>, QueryDsl.GeoLocation, IReadOnlyCollection<Global.Search.SuggestContextQuery>>>? Contexts { get; set; }

		[JsonInclude]
		[JsonPropertyName("fuzzy")]
		public Elastic.Clients.Elasticsearch.Global.Search.ISuggestFuzziness? Fuzzy { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix")]
		public string? Prefix { get; set; }

		[JsonInclude]
		[JsonPropertyName("regex")]
		public string? Regex { get; set; }

		[JsonInclude]
		[JsonPropertyName("skip_duplicates")]
		public bool? SkipDuplicates { get; set; }
	}

	[ConvertAs(typeof(DirectGenerator))]
	public partial interface IDirectGenerator
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		int? MaxEdits { get; set; }

		float? MaxInspections { get; set; }

		float? MaxTermFreq { get; set; }

		float? MinDocFreq { get; set; }

		int? MinWordLength { get; set; }

		string? PostFilter { get; set; }

		string? PreFilter { get; set; }

		int? PrefixLength { get; set; }

		int? Size { get; set; }

		Elastic.Clients.Elasticsearch.SuggestMode? SuggestMode { get; set; }
	}

	public partial class DirectGeneratorDescriptor : DescriptorBase<DirectGeneratorDescriptor, IDirectGenerator>, IDirectGenerator
	{
		Elastic.Clients.Elasticsearch.Field IDirectGenerator.Field { get; set; }

		int? IDirectGenerator.MaxEdits { get; set; }

		float? IDirectGenerator.MaxInspections { get; set; }

		float? IDirectGenerator.MaxTermFreq { get; set; }

		float? IDirectGenerator.MinDocFreq { get; set; }

		int? IDirectGenerator.MinWordLength { get; set; }

		string? IDirectGenerator.PostFilter { get; set; }

		string? IDirectGenerator.PreFilter { get; set; }

		int? IDirectGenerator.PrefixLength { get; set; }

		int? IDirectGenerator.Size { get; set; }

		Elastic.Clients.Elasticsearch.SuggestMode? IDirectGenerator.SuggestMode { get; set; }
	}

	public partial class DirectGenerator : IDirectGenerator
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_edits")]
		public int? MaxEdits { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_inspections")]
		public float? MaxInspections { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_term_freq")]
		public float? MaxTermFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_freq")]
		public float? MinDocFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_word_length")]
		public int? MinWordLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("post_filter")]
		public string? PostFilter { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_filter")]
		public string? PreFilter { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix_length")]
		public int? PrefixLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("suggest_mode")]
		public Elastic.Clients.Elasticsearch.SuggestMode? SuggestMode { get; set; }
	}

	[ConvertAs(typeof(FieldAndFormat))]
	public partial interface IFieldAndFormat
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		string? Format { get; set; }

		bool? IncludeUnmapped { get; set; }
	}

	public partial class FieldAndFormatDescriptor : DescriptorBase<FieldAndFormatDescriptor, IFieldAndFormat>, IFieldAndFormat
	{
		Elastic.Clients.Elasticsearch.Field IFieldAndFormat.Field { get; set; }

		string? IFieldAndFormat.Format { get; set; }

		bool? IFieldAndFormat.IncludeUnmapped { get; set; }
	}

	public partial class FieldAndFormat : IFieldAndFormat
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public string? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("include_unmapped")]
		public bool? IncludeUnmapped { get; set; }
	}

	[ConvertAs(typeof(FieldCollapse))]
	public partial interface IFieldCollapse
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.IInnerHits>? InnerHits { get; set; }

		int? MaxConcurrentGroupSearches { get; set; }
	}

	public partial class FieldCollapseDescriptor : DescriptorBase<FieldCollapseDescriptor, IFieldCollapse>, IFieldCollapse
	{
		Elastic.Clients.Elasticsearch.Field IFieldCollapse.Field { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.IInnerHits>? IFieldCollapse.InnerHits { get; set; }

		int? IFieldCollapse.MaxConcurrentGroupSearches { get; set; }
	}

	public partial class FieldCollapse : IFieldCollapse
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("inner_hits")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.IInnerHits>? InnerHits { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_concurrent_group_searches")]
		public int? MaxConcurrentGroupSearches { get; set; }
	}

	public partial class GeoDistanceSort
	{
		[JsonInclude]
		[JsonPropertyName("distance_type")]
		public Elastic.Clients.Elasticsearch.GeoDistanceType? DistanceType
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortMode? Mode
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortOrder? Order
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("unit")]
		public Elastic.Clients.Elasticsearch.DistanceUnit? Unit
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(Highlight))]
	public partial interface IHighlight
	{
		string? BoundaryChars { get; set; }

		int? BoundaryMaxScan { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.BoundaryScanner? BoundaryScanner { get; set; }

		string? BoundaryScannerLocale { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterEncoder? Encoder { get; set; }

		Dictionary<Elastic.Clients.Elasticsearch.Field, Elastic.Clients.Elasticsearch.Global.Search.IHighlightField> Fields { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterFragmenter? Fragmenter { get; set; }

		int? FragmentOffset { get; set; }

		int? FragmentSize { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? HighlightQuery { get; set; }

		Union<string, int>? MaxAnalyzedOffset { get; set; }

		int? MaxFragmentLength { get; set; }

		int? NoMatchSize { get; set; }

		int? NumberOfFragments { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterOrder? Order { get; set; }

		IEnumerable<string>? PostTags { get; set; }

		IEnumerable<string>? PreTags { get; set; }

		bool? RequireFieldMatch { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterTagsSchema? TagsSchema { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterType? Type { get; set; }
	}

	public partial class HighlightDescriptor : DescriptorBase<HighlightDescriptor, IHighlight>, IHighlight
	{
		Dictionary<Elastic.Clients.Elasticsearch.Field, Elastic.Clients.Elasticsearch.Global.Search.IHighlightField> IHighlight.Fields { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterType? IHighlight.Type { get; set; }

		string? IHighlight.BoundaryChars { get; set; }

		int? IHighlight.BoundaryMaxScan { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.BoundaryScanner? IHighlight.BoundaryScanner { get; set; }

		string? IHighlight.BoundaryScannerLocale { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterEncoder? IHighlight.Encoder { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterFragmenter? IHighlight.Fragmenter { get; set; }

		int? IHighlight.FragmentOffset { get; set; }

		int? IHighlight.FragmentSize { get; set; }

		int? IHighlight.MaxFragmentLength { get; set; }

		int? IHighlight.NoMatchSize { get; set; }

		int? IHighlight.NumberOfFragments { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterOrder? IHighlight.Order { get; set; }

		IEnumerable<string>? IHighlight.PostTags { get; set; }

		IEnumerable<string>? IHighlight.PreTags { get; set; }

		bool? IHighlight.RequireFieldMatch { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterTagsSchema? IHighlight.TagsSchema { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? IHighlight.HighlightQuery { get; set; }

		Union<string, int>? IHighlight.MaxAnalyzedOffset { get; set; }
	}

	public partial class Highlight : IHighlight
	{
		[JsonInclude]
		[JsonPropertyName("boundary_chars")]
		public string? BoundaryChars { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_max_scan")]
		public int? BoundaryMaxScan { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner")]
		public Elastic.Clients.Elasticsearch.Global.Search.BoundaryScanner? BoundaryScanner { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner_locale")]
		public string? BoundaryScannerLocale { get; set; }

		[JsonInclude]
		[JsonPropertyName("encoder")]
		public Elastic.Clients.Elasticsearch.Global.Search.HighlighterEncoder? Encoder { get; set; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<Elastic.Clients.Elasticsearch.Field, Elastic.Clients.Elasticsearch.Global.Search.IHighlightField> Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragmenter")]
		public Elastic.Clients.Elasticsearch.Global.Search.HighlighterFragmenter? Fragmenter { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_offset")]
		public int? FragmentOffset { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_size")]
		public int? FragmentSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight_query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? HighlightQuery { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_analyzed_offset")]
		public Union<string, int>? MaxAnalyzedOffset { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_fragment_length")]
		public int? MaxFragmentLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("no_match_size")]
		public int? NoMatchSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("number_of_fragments")]
		public int? NumberOfFragments { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Global.Search.HighlighterOrder? Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("post_tags")]
		public IEnumerable<string>? PostTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_tags")]
		public IEnumerable<string>? PreTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("require_field_match")]
		public bool? RequireFieldMatch { get; set; }

		[JsonInclude]
		[JsonPropertyName("tags_schema")]
		public Elastic.Clients.Elasticsearch.Global.Search.HighlighterTagsSchema? TagsSchema { get; set; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.Global.Search.HighlighterType? Type { get; set; }
	}

	[ConvertAs(typeof(HighlightField))]
	public partial interface IHighlightField
	{
		string? BoundaryChars { get; set; }

		int? BoundaryMaxScan { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.BoundaryScanner? BoundaryScanner { get; set; }

		string? BoundaryScannerLocale { get; set; }

		Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		bool? ForceSource { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterFragmenter? Fragmenter { get; set; }

		int? FragmentOffset { get; set; }

		int? FragmentSize { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? HighlightQuery { get; set; }

		Elastic.Clients.Elasticsearch.Fields? MatchedFields { get; set; }

		int? MaxFragmentLength { get; set; }

		int? NoMatchSize { get; set; }

		int? NumberOfFragments { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterOrder? Order { get; set; }

		int? PhraseLimit { get; set; }

		IEnumerable<string>? PostTags { get; set; }

		IEnumerable<string>? PreTags { get; set; }

		bool? RequireFieldMatch { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterTagsSchema? TagsSchema { get; set; }

		Union<Elastic.Clients.Elasticsearch.Global.Search.HighlighterType, string>? Type { get; set; }
	}

	public partial class HighlightFieldDescriptor : DescriptorBase<HighlightFieldDescriptor, IHighlightField>, IHighlightField
	{
		string? IHighlightField.BoundaryChars { get; set; }

		int? IHighlightField.BoundaryMaxScan { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.BoundaryScanner? IHighlightField.BoundaryScanner { get; set; }

		string? IHighlightField.BoundaryScannerLocale { get; set; }

		Elastic.Clients.Elasticsearch.Field? IHighlightField.Field { get; set; }

		bool? IHighlightField.ForceSource { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterFragmenter? IHighlightField.Fragmenter { get; set; }

		int? IHighlightField.FragmentOffset { get; set; }

		int? IHighlightField.FragmentSize { get; set; }

		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? IHighlightField.HighlightQuery { get; set; }

		Elastic.Clients.Elasticsearch.Fields? IHighlightField.MatchedFields { get; set; }

		int? IHighlightField.MaxFragmentLength { get; set; }

		int? IHighlightField.NoMatchSize { get; set; }

		int? IHighlightField.NumberOfFragments { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterOrder? IHighlightField.Order { get; set; }

		int? IHighlightField.PhraseLimit { get; set; }

		IEnumerable<string>? IHighlightField.PostTags { get; set; }

		IEnumerable<string>? IHighlightField.PreTags { get; set; }

		bool? IHighlightField.RequireFieldMatch { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.HighlighterTagsSchema? IHighlightField.TagsSchema { get; set; }

		Union<Elastic.Clients.Elasticsearch.Global.Search.HighlighterType, string>? IHighlightField.Type { get; set; }
	}

	public partial class HighlightField : IHighlightField
	{
		[JsonInclude]
		[JsonPropertyName("boundary_chars")]
		public string? BoundaryChars { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_max_scan")]
		public int? BoundaryMaxScan { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner")]
		public Elastic.Clients.Elasticsearch.Global.Search.BoundaryScanner? BoundaryScanner { get; set; }

		[JsonInclude]
		[JsonPropertyName("boundary_scanner_locale")]
		public string? BoundaryScannerLocale { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field? Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("force_source")]
		public bool? ForceSource { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragmenter")]
		public Elastic.Clients.Elasticsearch.Global.Search.HighlighterFragmenter? Fragmenter { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_offset")]
		public int? FragmentOffset { get; set; }

		[JsonInclude]
		[JsonPropertyName("fragment_size")]
		public int? FragmentSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight_query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? HighlightQuery { get; set; }

		[JsonInclude]
		[JsonPropertyName("matched_fields")]
		public Elastic.Clients.Elasticsearch.Fields? MatchedFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_fragment_length")]
		public int? MaxFragmentLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("no_match_size")]
		public int? NoMatchSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("number_of_fragments")]
		public int? NumberOfFragments { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Global.Search.HighlighterOrder? Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("phrase_limit")]
		public int? PhraseLimit { get; set; }

		[JsonInclude]
		[JsonPropertyName("post_tags")]
		public IEnumerable<string>? PostTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_tags")]
		public IEnumerable<string>? PreTags { get; set; }

		[JsonInclude]
		[JsonPropertyName("require_field_match")]
		public bool? RequireFieldMatch { get; set; }

		[JsonInclude]
		[JsonPropertyName("tags_schema")]
		public Elastic.Clients.Elasticsearch.Global.Search.HighlighterTagsSchema? TagsSchema { get; set; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public Union<Elastic.Clients.Elasticsearch.Global.Search.HighlighterType, string>? Type { get; set; }
	}

	public partial class Hit<TDocument>
	{
		[JsonInclude]
		[JsonPropertyName("_explanation")]
		public Elastic.Clients.Elasticsearch.Global.Explain.Explanation? Explanation
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Dictionary<string, object>? Fields
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("highlight")]
		public Dictionary<string, IReadOnlyCollection<string>>? Highlight
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_id")]
		public Elastic.Clients.Elasticsearch.Id Id
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_ignored")]
		public IReadOnlyCollection<string>? Ignored
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_index")]
		public Elastic.Clients.Elasticsearch.IndexName Index
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("inner_hits")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Global.Search.InnerHitsResult>? InnerHits
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("matched_queries")]
		public IReadOnlyCollection<string>? MatchedQueries
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_nested")]
		public Elastic.Clients.Elasticsearch.Global.Search.NestedIdentity? Nested
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_node")]
		public string? Node
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_primary_term")]
		public long? PrimaryTerm
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_routing")]
		public string? Routing
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_score")]
		public double? Score
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_seq_no")]
		public Elastic.Clients.Elasticsearch.SequenceNumber? SeqNo
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_shard")]
		public string? Shard
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortResults? Sort
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_source")]
		public TDocument? Source
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_type")]
		public Elastic.Clients.Elasticsearch.DocType? Type
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_version")]
		public Elastic.Clients.Elasticsearch.VersionNumber? Version
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class HitsMetadata<T>
	{
		[JsonInclude]
		[JsonPropertyName("hits")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.Hit<T>> Hits
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("max_score")]
		public double? MaxScore
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("total")]
		public Union<Elastic.Clients.Elasticsearch.Global.Search.TotalHits, long> Total
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(InnerHits))]
	public partial interface IInnerHits
	{
		Elastic.Clients.Elasticsearch.Global.Search.IFieldCollapse? Collapse { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.IFieldAndFormat>? DocvalueFields { get; set; }

		bool? Explain { get; set; }

		Elastic.Clients.Elasticsearch.Fields? Fields { get; set; }

		int? From { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.IHighlight? Highlight { get; set; }

		bool? IgnoreUnmapped { get; set; }

		Elastic.Clients.Elasticsearch.Name? Name { get; set; }

		Dictionary<Elastic.Clients.Elasticsearch.Field, Elastic.Clients.Elasticsearch.IScriptField>? ScriptFields { get; set; }

		bool? SeqNoPrimaryTerm { get; set; }

		int? Size { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.Sort? Sort { get; set; }

		Union<bool, Elastic.Clients.Elasticsearch.Global.Search.ISourceFilter>? Source { get; set; }

		Elastic.Clients.Elasticsearch.Fields? StoredField { get; set; }

		bool? TrackScores { get; set; }

		bool? Version { get; set; }
	}

	public partial class InnerHitsDescriptor : DescriptorBase<InnerHitsDescriptor, IInnerHits>, IInnerHits
	{
		Elastic.Clients.Elasticsearch.Name? IInnerHits.Name { get; set; }

		int? IInnerHits.Size { get; set; }

		int? IInnerHits.From { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.IFieldCollapse? IInnerHits.Collapse { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.IFieldAndFormat>? IInnerHits.DocvalueFields { get; set; }

		bool? IInnerHits.Explain { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.IHighlight? IInnerHits.Highlight { get; set; }

		bool? IInnerHits.IgnoreUnmapped { get; set; }

		Dictionary<Elastic.Clients.Elasticsearch.Field, Elastic.Clients.Elasticsearch.IScriptField>? IInnerHits.ScriptFields { get; set; }

		bool? IInnerHits.SeqNoPrimaryTerm { get; set; }

		Elastic.Clients.Elasticsearch.Fields? IInnerHits.Fields { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.Sort? IInnerHits.Sort { get; set; }

		Union<bool, Elastic.Clients.Elasticsearch.Global.Search.ISourceFilter>? IInnerHits.Source { get; set; }

		Elastic.Clients.Elasticsearch.Fields? IInnerHits.StoredField { get; set; }

		bool? IInnerHits.TrackScores { get; set; }

		bool? IInnerHits.Version { get; set; }
	}

	public partial class InnerHits : IInnerHits
	{
		[JsonInclude]
		[JsonPropertyName("collapse")]
		public Elastic.Clients.Elasticsearch.Global.Search.IFieldCollapse? Collapse { get; set; }

		[JsonInclude]
		[JsonPropertyName("docvalue_fields")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.IFieldAndFormat>? DocvalueFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("explain")]
		public bool? Explain { get; set; }

		[JsonInclude]
		[JsonPropertyName("fields")]
		public Elastic.Clients.Elasticsearch.Fields? Fields { get; set; }

		[JsonInclude]
		[JsonPropertyName("from")]
		public int? From { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight")]
		public Elastic.Clients.Elasticsearch.Global.Search.IHighlight? Highlight { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_unmapped")]
		public bool? IgnoreUnmapped { get; set; }

		[JsonInclude]
		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name? Name { get; set; }

		[JsonInclude]
		[JsonPropertyName("script_fields")]
		public Dictionary<Elastic.Clients.Elasticsearch.Field, Elastic.Clients.Elasticsearch.IScriptField>? ScriptFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("seq_no_primary_term")]
		public bool? SeqNoPrimaryTerm { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Global.Search.Sort? Sort { get; set; }

		[JsonInclude]
		[JsonPropertyName("_source")]
		public Union<bool, Elastic.Clients.Elasticsearch.Global.Search.ISourceFilter>? Source { get; set; }

		[JsonInclude]
		[JsonPropertyName("stored_field")]
		public Elastic.Clients.Elasticsearch.Fields? StoredField { get; set; }

		[JsonInclude]
		[JsonPropertyName("track_scores")]
		public bool? TrackScores { get; set; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public bool? Version { get; set; }
	}

	public partial class InnerHitsMetadata
	{
		[JsonInclude]
		[JsonPropertyName("hits")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.Hit<Dictionary<string, object>>> Hits
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("max_score")]
		public double? MaxScore
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("total")]
		public Union<Elastic.Clients.Elasticsearch.Global.Search.TotalHits, long> Total
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class InnerHitsResult
	{
		[JsonInclude]
		[JsonPropertyName("hits")]
		public Elastic.Clients.Elasticsearch.Global.Search.InnerHitsMetadata Hits
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(LaplaceSmoothingModel))]
	public partial interface ILaplaceSmoothingModel
	{
		double Alpha { get; set; }
	}

	public partial class LaplaceSmoothingModelDescriptor : DescriptorBase<LaplaceSmoothingModelDescriptor, ILaplaceSmoothingModel>, ILaplaceSmoothingModel
	{
		double ILaplaceSmoothingModel.Alpha { get; set; }
	}

	public partial class LaplaceSmoothingModel : ILaplaceSmoothingModel
	{
		[JsonInclude]
		[JsonPropertyName("alpha")]
		public double Alpha { get; set; }
	}

	[ConvertAs(typeof(LinearInterpolationSmoothingModel))]
	public partial interface ILinearInterpolationSmoothingModel
	{
		double BigramLambda { get; set; }

		double TrigramLambda { get; set; }

		double UnigramLambda { get; set; }
	}

	public partial class LinearInterpolationSmoothingModelDescriptor : DescriptorBase<LinearInterpolationSmoothingModelDescriptor, ILinearInterpolationSmoothingModel>, ILinearInterpolationSmoothingModel
	{
		double ILinearInterpolationSmoothingModel.BigramLambda { get; set; }

		double ILinearInterpolationSmoothingModel.TrigramLambda { get; set; }

		double ILinearInterpolationSmoothingModel.UnigramLambda { get; set; }
	}

	public partial class LinearInterpolationSmoothingModel : ILinearInterpolationSmoothingModel
	{
		[JsonInclude]
		[JsonPropertyName("bigram_lambda")]
		public double BigramLambda { get; set; }

		[JsonInclude]
		[JsonPropertyName("trigram_lambda")]
		public double TrigramLambda { get; set; }

		[JsonInclude]
		[JsonPropertyName("unigram_lambda")]
		public double UnigramLambda { get; set; }
	}

	public partial class NestedIdentity
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_nested")]
		public Elastic.Clients.Elasticsearch.Global.Search.NestedIdentity? Nested
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("offset")]
		public int Offset
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(PhraseSuggestCollate))]
	public partial interface IPhraseSuggestCollate
	{
		Dictionary<string, object>? Params { get; set; }

		bool? Prune { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.IPhraseSuggestCollateQuery Query { get; set; }
	}

	public partial class PhraseSuggestCollateDescriptor : DescriptorBase<PhraseSuggestCollateDescriptor, IPhraseSuggestCollate>, IPhraseSuggestCollate
	{
		Dictionary<string, object>? IPhraseSuggestCollate.Params { get; set; }

		bool? IPhraseSuggestCollate.Prune { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.IPhraseSuggestCollateQuery IPhraseSuggestCollate.Query { get; set; }
	}

	public partial class PhraseSuggestCollate : IPhraseSuggestCollate
	{
		[JsonInclude]
		[JsonPropertyName("params")]
		public Dictionary<string, object>? Params { get; set; }

		[JsonInclude]
		[JsonPropertyName("prune")]
		public bool? Prune { get; set; }

		[JsonInclude]
		[JsonPropertyName("query")]
		public Elastic.Clients.Elasticsearch.Global.Search.IPhraseSuggestCollateQuery Query { get; set; }
	}

	[ConvertAs(typeof(PhraseSuggestCollateQuery))]
	public partial interface IPhraseSuggestCollateQuery
	{
		Elastic.Clients.Elasticsearch.Id? Id { get; set; }

		string? Source { get; set; }
	}

	public partial class PhraseSuggestCollateQueryDescriptor : DescriptorBase<PhraseSuggestCollateQueryDescriptor, IPhraseSuggestCollateQuery>, IPhraseSuggestCollateQuery
	{
		Elastic.Clients.Elasticsearch.Id? IPhraseSuggestCollateQuery.Id { get; set; }

		string? IPhraseSuggestCollateQuery.Source { get; set; }
	}

	public partial class PhraseSuggestCollateQuery : IPhraseSuggestCollateQuery
	{
		[JsonInclude]
		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id? Id { get; set; }

		[JsonInclude]
		[JsonPropertyName("source")]
		public string? Source { get; set; }
	}

	[ConvertAs(typeof(PhraseSuggestHighlight))]
	public partial interface IPhraseSuggestHighlight
	{
		string PostTag { get; set; }

		string PreTag { get; set; }
	}

	public partial class PhraseSuggestHighlightDescriptor : DescriptorBase<PhraseSuggestHighlightDescriptor, IPhraseSuggestHighlight>, IPhraseSuggestHighlight
	{
		string IPhraseSuggestHighlight.PostTag { get; set; }

		string IPhraseSuggestHighlight.PreTag { get; set; }
	}

	public partial class PhraseSuggestHighlight : IPhraseSuggestHighlight
	{
		[JsonInclude]
		[JsonPropertyName("post_tag")]
		public string PostTag { get; set; }

		[JsonInclude]
		[JsonPropertyName("pre_tag")]
		public string PreTag { get; set; }
	}

	public partial class PhraseSuggestOption
	{
		[JsonInclude]
		[JsonPropertyName("highlighted")]
		public string Highlighted
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("score")]
		public double Score
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("text")]
		public string Text
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(PhraseSuggester))]
	public partial interface IPhraseSuggester
	{
		Elastic.Clients.Elasticsearch.Global.Search.IPhraseSuggestCollate? Collate { get; set; }

		double? Confidence { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.IDirectGenerator>? DirectGenerator { get; set; }

		bool? ForceUnigrams { get; set; }

		int? GramSize { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.IPhraseSuggestHighlight? Highlight { get; set; }

		double? MaxErrors { get; set; }

		double? RealWordErrorLikelihood { get; set; }

		string? Separator { get; set; }

		int? ShardSize { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.SmoothingModelContainer? Smoothing { get; set; }

		string? Text { get; set; }

		int? TokenLimit { get; set; }
	}

	public partial class PhraseSuggesterDescriptor : DescriptorBase<PhraseSuggesterDescriptor, IPhraseSuggester>, IPhraseSuggester
	{
		Elastic.Clients.Elasticsearch.Global.Search.IPhraseSuggestCollate? IPhraseSuggester.Collate { get; set; }

		double? IPhraseSuggester.Confidence { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.IDirectGenerator>? IPhraseSuggester.DirectGenerator { get; set; }

		bool? IPhraseSuggester.ForceUnigrams { get; set; }

		int? IPhraseSuggester.GramSize { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.IPhraseSuggestHighlight? IPhraseSuggester.Highlight { get; set; }

		double? IPhraseSuggester.MaxErrors { get; set; }

		double? IPhraseSuggester.RealWordErrorLikelihood { get; set; }

		string? IPhraseSuggester.Separator { get; set; }

		int? IPhraseSuggester.ShardSize { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.SmoothingModelContainer? IPhraseSuggester.Smoothing { get; set; }

		string? IPhraseSuggester.Text { get; set; }

		int? IPhraseSuggester.TokenLimit { get; set; }
	}

	public partial class PhraseSuggester : Global.Search.SuggesterBase, IPhraseSuggester
	{
		[JsonInclude]
		[JsonPropertyName("collate")]
		public Elastic.Clients.Elasticsearch.Global.Search.IPhraseSuggestCollate? Collate { get; set; }

		[JsonInclude]
		[JsonPropertyName("confidence")]
		public double? Confidence { get; set; }

		[JsonInclude]
		[JsonPropertyName("direct_generator")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Global.Search.IDirectGenerator>? DirectGenerator { get; set; }

		[JsonInclude]
		[JsonPropertyName("force_unigrams")]
		public bool? ForceUnigrams { get; set; }

		[JsonInclude]
		[JsonPropertyName("gram_size")]
		public int? GramSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight")]
		public Elastic.Clients.Elasticsearch.Global.Search.IPhraseSuggestHighlight? Highlight { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_errors")]
		public double? MaxErrors { get; set; }

		[JsonInclude]
		[JsonPropertyName("real_word_error_likelihood")]
		public double? RealWordErrorLikelihood { get; set; }

		[JsonInclude]
		[JsonPropertyName("separator")]
		public string? Separator { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("smoothing")]
		public Elastic.Clients.Elasticsearch.Global.Search.SmoothingModelContainer? Smoothing { get; set; }

		[JsonInclude]
		[JsonPropertyName("text")]
		public string? Text { get; set; }

		[JsonInclude]
		[JsonPropertyName("token_limit")]
		public int? TokenLimit { get; set; }
	}

	[ConvertAs(typeof(PointInTimeReference))]
	public partial interface IPointInTimeReference
	{
		Elastic.Clients.Elasticsearch.Id Id { get; set; }

		Elastic.Clients.Elasticsearch.Time? KeepAlive { get; set; }
	}

	public partial class PointInTimeReferenceDescriptor : DescriptorBase<PointInTimeReferenceDescriptor, IPointInTimeReference>, IPointInTimeReference
	{
		Elastic.Clients.Elasticsearch.Id IPointInTimeReference.Id { get; set; }

		Elastic.Clients.Elasticsearch.Time? IPointInTimeReference.KeepAlive { get; set; }
	}

	public partial class PointInTimeReference : IPointInTimeReference
	{
		[JsonInclude]
		[JsonPropertyName("id")]
		public Elastic.Clients.Elasticsearch.Id Id { get; set; }

		[JsonInclude]
		[JsonPropertyName("keep_alive")]
		public Elastic.Clients.Elasticsearch.Time? KeepAlive { get; set; }
	}

	public partial class Profile
	{
		[JsonInclude]
		[JsonPropertyName("shards")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.ShardProfile> Shards
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class QueryBreakdown
	{
		[JsonInclude]
		[JsonPropertyName("advance")]
		public long Advance
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("advance_count")]
		public long AdvanceCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("build_scorer")]
		public long BuildScorer
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("build_scorer_count")]
		public long BuildScorerCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("compute_max_score")]
		public long ComputeMaxScore
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("compute_max_score_count")]
		public long ComputeMaxScoreCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("create_weight")]
		public long CreateWeight
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("create_weight_count")]
		public long CreateWeightCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("match")]
		public long Match
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("match_count")]
		public long MatchCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("next_doc")]
		public long NextDoc
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("next_doc_count")]
		public long NextDocCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("score")]
		public long Score
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("score_count")]
		public long ScoreCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("set_min_competitive_score")]
		public long SetMinCompetitiveScore
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("set_min_competitive_score_count")]
		public long SetMinCompetitiveScoreCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("shallow_advance")]
		public long ShallowAdvance
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("shallow_advance_count")]
		public long ShallowAdvanceCount
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class QueryProfile
	{
		[JsonInclude]
		[JsonPropertyName("breakdown")]
		public Elastic.Clients.Elasticsearch.Global.Search.QueryBreakdown Breakdown
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("children")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.QueryProfile>? Children
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("description")]
		public string Description
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("time_in_nanos")]
		public long TimeInNanos
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("type")]
		public string Type
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(Rescore))]
	public partial interface IRescore
	{
		Elastic.Clients.Elasticsearch.Global.Search.IRescoreQuery Query { get; set; }

		int? WindowSize { get; set; }
	}

	public partial class RescoreDescriptor : DescriptorBase<RescoreDescriptor, IRescore>, IRescore
	{
		Elastic.Clients.Elasticsearch.Global.Search.IRescoreQuery IRescore.Query { get; set; }

		int? IRescore.WindowSize { get; set; }
	}

	public partial class Rescore : IRescore
	{
		[JsonInclude]
		[JsonPropertyName("query")]
		public Elastic.Clients.Elasticsearch.Global.Search.IRescoreQuery Query { get; set; }

		[JsonInclude]
		[JsonPropertyName("window_size")]
		public int? WindowSize { get; set; }
	}

	[ConvertAs(typeof(RescoreQuery))]
	public partial interface IRescoreQuery
	{
		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer Query { get; set; }

		double? QueryWeight { get; set; }

		double? RescoreQueryWeight { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.ScoreMode? ScoreMode { get; set; }
	}

	public partial class RescoreQueryDescriptor : DescriptorBase<RescoreQueryDescriptor, IRescoreQuery>, IRescoreQuery
	{
		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer IRescoreQuery.Query { get; set; }

		double? IRescoreQuery.QueryWeight { get; set; }

		double? IRescoreQuery.RescoreQueryWeight { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.ScoreMode? IRescoreQuery.ScoreMode { get; set; }
	}

	public partial class RescoreQuery : IRescoreQuery
	{
		[JsonInclude]
		[JsonPropertyName("rescore_query")]
		public Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer Query { get; set; }

		[JsonInclude]
		[JsonPropertyName("query_weight")]
		public double? QueryWeight { get; set; }

		[JsonInclude]
		[JsonPropertyName("rescore_query_weight")]
		public double? RescoreQueryWeight { get; set; }

		[JsonInclude]
		[JsonPropertyName("score_mode")]
		public Elastic.Clients.Elasticsearch.Global.Search.ScoreMode? ScoreMode { get; set; }
	}

	public partial class ScoreSort
	{
		[JsonInclude]
		[JsonPropertyName("mode")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortMode? Mode
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortOrder? Order
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ScriptSort
	{
		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortOrder? Order
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("script")]
		public Elastic.Clients.Elasticsearch.Script Script
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("type")]
		public string? Type
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SearchProfile
	{
		[JsonInclude]
		[JsonPropertyName("collector")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.Collector> Collector
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("query")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.QueryProfile> Query
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("rewrite_time")]
		public long RewriteTime
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class ShardProfile
	{
		[JsonInclude]
		[JsonPropertyName("aggregations")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.AggregationProfile> Aggregations
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("id")]
		public string Id
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("searches")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.SearchProfile> Searches
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	public partial class SortContainer
	{
		[JsonInclude]
		[JsonPropertyName("_doc")]
		public Elastic.Clients.Elasticsearch.Global.Search.ScoreSort? Doc
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_geo_distance")]
		public Elastic.Clients.Elasticsearch.Global.Search.GeoDistanceSort? GeoDistance
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_score")]
		public Elastic.Clients.Elasticsearch.Global.Search.ScoreSort? Score
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("_script")]
		public Elastic.Clients.Elasticsearch.Global.Search.ScriptSort? Script
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(SourceFilter))]
	public partial interface ISourceFilter
	{
		Elastic.Clients.Elasticsearch.Fields? Exclude { get; set; }

		Elastic.Clients.Elasticsearch.Fields? Excludes { get; set; }

		Elastic.Clients.Elasticsearch.Fields? Include { get; set; }

		Elastic.Clients.Elasticsearch.Fields? Includes { get; set; }
	}

	public partial class SourceFilterDescriptor : DescriptorBase<SourceFilterDescriptor, ISourceFilter>, ISourceFilter
	{
		Elastic.Clients.Elasticsearch.Fields? ISourceFilter.Excludes { get; set; }

		Elastic.Clients.Elasticsearch.Fields? ISourceFilter.Includes { get; set; }

		Elastic.Clients.Elasticsearch.Fields? ISourceFilter.Exclude { get; set; }

		Elastic.Clients.Elasticsearch.Fields? ISourceFilter.Include { get; set; }
	}

	public partial class SourceFilter : ISourceFilter
	{
		[JsonInclude]
		[JsonPropertyName("exclude")]
		public Elastic.Clients.Elasticsearch.Fields? Exclude { get; set; }

		[JsonInclude]
		[JsonPropertyName("excludes")]
		public Elastic.Clients.Elasticsearch.Fields? Excludes { get; set; }

		[JsonInclude]
		[JsonPropertyName("include")]
		public Elastic.Clients.Elasticsearch.Fields? Include { get; set; }

		[JsonInclude]
		[JsonPropertyName("includes")]
		public Elastic.Clients.Elasticsearch.Fields? Includes { get; set; }
	}

	[ConvertAs(typeof(StupidBackoffSmoothingModel))]
	public partial interface IStupidBackoffSmoothingModel
	{
		double Discount { get; set; }
	}

	public partial class StupidBackoffSmoothingModelDescriptor : DescriptorBase<StupidBackoffSmoothingModelDescriptor, IStupidBackoffSmoothingModel>, IStupidBackoffSmoothingModel
	{
		double IStupidBackoffSmoothingModel.Discount { get; set; }
	}

	public partial class StupidBackoffSmoothingModel : IStupidBackoffSmoothingModel
	{
		[JsonInclude]
		[JsonPropertyName("discount")]
		public double Discount { get; set; }
	}

	public partial class Suggest<T>
	{
		[JsonInclude]
		[JsonPropertyName("length")]
		public int Length
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("offset")]
		public int Offset
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("options")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Global.Search.SuggestOption<T>> Options
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("text")]
		public string Text
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(SuggestContextQuery))]
	public partial interface ISuggestContextQuery
	{
		double? Boost { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.Context Context { get; set; }

		Union<IEnumerable<Elastic.Clients.Elasticsearch.Distance>, IEnumerable<int>>? Neighbours { get; set; }

		Union<Elastic.Clients.Elasticsearch.Distance, int>? Precision { get; set; }

		bool? Prefix { get; set; }
	}

	public partial class SuggestContextQueryDescriptor : DescriptorBase<SuggestContextQueryDescriptor, ISuggestContextQuery>, ISuggestContextQuery
	{
		double? ISuggestContextQuery.Boost { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.Context ISuggestContextQuery.Context { get; set; }

		Union<IEnumerable<Elastic.Clients.Elasticsearch.Distance>, IEnumerable<int>>? ISuggestContextQuery.Neighbours { get; set; }

		Union<Elastic.Clients.Elasticsearch.Distance, int>? ISuggestContextQuery.Precision { get; set; }

		bool? ISuggestContextQuery.Prefix { get; set; }
	}

	public partial class SuggestContextQuery : ISuggestContextQuery
	{
		[JsonInclude]
		[JsonPropertyName("boost")]
		public double? Boost { get; set; }

		[JsonInclude]
		[JsonPropertyName("context")]
		public Elastic.Clients.Elasticsearch.Global.Search.Context Context { get; set; }

		[JsonInclude]
		[JsonPropertyName("neighbours")]
		public Union<IEnumerable<Elastic.Clients.Elasticsearch.Distance>, IEnumerable<int>>? Neighbours { get; set; }

		[JsonInclude]
		[JsonPropertyName("precision")]
		public Union<Elastic.Clients.Elasticsearch.Distance, int>? Precision { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix")]
		public bool? Prefix { get; set; }
	}

	[ConvertAs(typeof(SuggestFuzziness))]
	public partial interface ISuggestFuzziness
	{
		Elastic.Clients.Elasticsearch.Fuzziness Fuzziness { get; set; }

		int MinLength { get; set; }

		int PrefixLength { get; set; }

		bool Transpositions { get; set; }

		bool UnicodeAware { get; set; }
	}

	public partial class SuggestFuzzinessDescriptor : DescriptorBase<SuggestFuzzinessDescriptor, ISuggestFuzziness>, ISuggestFuzziness
	{
		Elastic.Clients.Elasticsearch.Fuzziness ISuggestFuzziness.Fuzziness { get; set; }

		int ISuggestFuzziness.MinLength { get; set; }

		int ISuggestFuzziness.PrefixLength { get; set; }

		bool ISuggestFuzziness.Transpositions { get; set; }

		bool ISuggestFuzziness.UnicodeAware { get; set; }
	}

	public partial class SuggestFuzziness : ISuggestFuzziness
	{
		[JsonInclude]
		[JsonPropertyName("fuzziness")]
		public Elastic.Clients.Elasticsearch.Fuzziness Fuzziness { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_length")]
		public int MinLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix_length")]
		public int PrefixLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("transpositions")]
		public bool Transpositions { get; set; }

		[JsonInclude]
		[JsonPropertyName("unicode_aware")]
		public bool UnicodeAware { get; set; }
	}

	[ConvertAs(typeof(SuggesterBase))]
	public partial interface ISuggesterBase
	{
		string? Analyzer { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		int? Size { get; set; }
	}

	public partial class SuggesterBaseDescriptor : DescriptorBase<SuggesterBaseDescriptor, ISuggesterBase>, ISuggesterBase
	{
		Elastic.Clients.Elasticsearch.Field ISuggesterBase.Field { get; set; }

		string? ISuggesterBase.Analyzer { get; set; }

		int? ISuggesterBase.Size { get; set; }
	}

	public abstract partial class SuggesterBase : ISuggesterBase
	{
		[JsonInclude]
		[JsonPropertyName("analyzer")]
		public string? Analyzer { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("size")]
		public int? Size { get; set; }
	}

	public partial class TermSuggestOption
	{
		[JsonInclude]
		[JsonPropertyName("freq")]
		public long? Freq
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("score")]
		public double Score
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("text")]
		public string Text
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(TermSuggester))]
	public partial interface ITermSuggester
	{
		bool? LowercaseTerms { get; set; }

		int? MaxEdits { get; set; }

		int? MaxInspections { get; set; }

		float? MaxTermFreq { get; set; }

		float? MinDocFreq { get; set; }

		int? MinWordLength { get; set; }

		int? PrefixLength { get; set; }

		int? ShardSize { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.SuggestSort? Sort { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.StringDistance? StringDistance { get; set; }

		Elastic.Clients.Elasticsearch.SuggestMode? SuggestMode { get; set; }

		string? Text { get; set; }
	}

	public partial class TermSuggesterDescriptor : DescriptorBase<TermSuggesterDescriptor, ITermSuggester>, ITermSuggester
	{
		bool? ITermSuggester.LowercaseTerms { get; set; }

		int? ITermSuggester.MaxEdits { get; set; }

		int? ITermSuggester.MaxInspections { get; set; }

		float? ITermSuggester.MaxTermFreq { get; set; }

		float? ITermSuggester.MinDocFreq { get; set; }

		int? ITermSuggester.MinWordLength { get; set; }

		int? ITermSuggester.PrefixLength { get; set; }

		int? ITermSuggester.ShardSize { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.SuggestSort? ITermSuggester.Sort { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.StringDistance? ITermSuggester.StringDistance { get; set; }

		Elastic.Clients.Elasticsearch.SuggestMode? ITermSuggester.SuggestMode { get; set; }

		string? ITermSuggester.Text { get; set; }
	}

	public partial class TermSuggester : Global.Search.SuggesterBase, ITermSuggester
	{
		[JsonInclude]
		[JsonPropertyName("lowercase_terms")]
		public bool? LowercaseTerms { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_edits")]
		public int? MaxEdits { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_inspections")]
		public int? MaxInspections { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_term_freq")]
		public float? MaxTermFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_doc_freq")]
		public float? MinDocFreq { get; set; }

		[JsonInclude]
		[JsonPropertyName("min_word_length")]
		public int? MinWordLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix_length")]
		public int? PrefixLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("shard_size")]
		public int? ShardSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Global.Search.SuggestSort? Sort { get; set; }

		[JsonInclude]
		[JsonPropertyName("string_distance")]
		public Elastic.Clients.Elasticsearch.Global.Search.StringDistance? StringDistance { get; set; }

		[JsonInclude]
		[JsonPropertyName("suggest_mode")]
		public Elastic.Clients.Elasticsearch.SuggestMode? SuggestMode { get; set; }

		[JsonInclude]
		[JsonPropertyName("text")]
		public string? Text { get; set; }
	}

	public partial class TotalHits
	{
		[JsonInclude]
		[JsonPropertyName("relation")]
		public Elastic.Clients.Elasticsearch.Global.Search.TotalHitsRelation Relation
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("value")]
		public long Value
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}
}