// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.IndexManagement
{
	[ConvertAs(typeof(Alias))]
	public partial interface IAlias
	{
		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Filter { get; set; }

		Elastic.Clients.Elasticsearch.Routing? IndexRouting { get; set; }

		bool? IsHidden { get; set; }

		bool? IsWriteIndex { get; set; }

		Elastic.Clients.Elasticsearch.Routing? Routing { get; set; }

		Elastic.Clients.Elasticsearch.Routing? SearchRouting { get; set; }
	}

	public partial class AliasDescriptor : DescriptorBase<AliasDescriptor, IAlias>, IAlias
	{
		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? IAlias.Filter { get; set; }

		Elastic.Clients.Elasticsearch.Routing? IAlias.IndexRouting { get; set; }

		bool? IAlias.IsHidden { get; set; }

		bool? IAlias.IsWriteIndex { get; set; }

		Elastic.Clients.Elasticsearch.Routing? IAlias.Routing { get; set; }

		Elastic.Clients.Elasticsearch.Routing? IAlias.SearchRouting { get; set; }
	}

	public partial class Alias : IAlias
	{
		[JsonInclude]
		[JsonPropertyName("filter")]
		public Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Filter { get; set; }

		[JsonInclude]
		[JsonPropertyName("index_routing")]
		public Elastic.Clients.Elasticsearch.Routing? IndexRouting { get; set; }

		[JsonInclude]
		[JsonPropertyName("is_hidden")]
		public bool? IsHidden { get; set; }

		[JsonInclude]
		[JsonPropertyName("is_write_index")]
		public bool? IsWriteIndex { get; set; }

		[JsonInclude]
		[JsonPropertyName("routing")]
		public Elastic.Clients.Elasticsearch.Routing? Routing { get; set; }

		[JsonInclude]
		[JsonPropertyName("search_routing")]
		public Elastic.Clients.Elasticsearch.Routing? SearchRouting { get; set; }
	}

	[ConvertAs(typeof(AliasDefinition))]
	public partial interface IAliasDefinition
	{
		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Filter { get; set; }

		string? IndexRouting { get; set; }

		bool? IsWriteIndex { get; set; }

		string? Routing { get; set; }

		string? SearchRouting { get; set; }
	}

	public partial class AliasDefinitionDescriptor : DescriptorBase<AliasDefinitionDescriptor, IAliasDefinition>, IAliasDefinition
	{
		Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? IAliasDefinition.Filter { get; set; }

		string? IAliasDefinition.IndexRouting { get; set; }

		bool? IAliasDefinition.IsWriteIndex { get; set; }

		string? IAliasDefinition.Routing { get; set; }

		string? IAliasDefinition.SearchRouting { get; set; }
	}

	public partial class AliasDefinition : IAliasDefinition
	{
		[JsonInclude]
		[JsonPropertyName("filter")]
		public Elastic.Clients.Elasticsearch.QueryDsl.IQueryContainer? Filter { get; set; }

		[JsonInclude]
		[JsonPropertyName("index_routing")]
		public string? IndexRouting { get; set; }

		[JsonInclude]
		[JsonPropertyName("is_write_index")]
		public bool? IsWriteIndex { get; set; }

		[JsonInclude]
		[JsonPropertyName("routing")]
		public string? Routing { get; set; }

		[JsonInclude]
		[JsonPropertyName("search_routing")]
		public string? SearchRouting { get; set; }
	}

	public partial class FielddataFrequencyFilter
	{
		[JsonInclude]
		[JsonPropertyName("max")]
		public double Max
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("min")]
		public double Min
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("min_segment_size")]
		public int MinSegmentSize
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(IndexRouting))]
	public partial interface IIndexRouting
	{
		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocation? Allocation { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingRebalance? Rebalance { get; set; }
	}

	public partial class IndexRoutingDescriptor : DescriptorBase<IndexRoutingDescriptor, IIndexRouting>, IIndexRouting
	{
		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocation? IIndexRouting.Allocation { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingRebalance? IIndexRouting.Rebalance { get; set; }
	}

	public partial class IndexRouting : IIndexRouting
	{
		[JsonInclude]
		[JsonPropertyName("allocation")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocation? Allocation { get; set; }

		[JsonInclude]
		[JsonPropertyName("rebalance")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingRebalance? Rebalance { get; set; }
	}

	[ConvertAs(typeof(IndexRoutingAllocation))]
	public partial interface IIndexRoutingAllocation
	{
		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocationDisk? Disk { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IndexRoutingAllocationOptions? Enable { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocationInclude? Include { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocationInitialRecovery? InitialRecovery { get; set; }
	}

	public partial class IndexRoutingAllocationDescriptor : DescriptorBase<IndexRoutingAllocationDescriptor, IIndexRoutingAllocation>, IIndexRoutingAllocation
	{
		Elastic.Clients.Elasticsearch.IndexManagement.IndexRoutingAllocationOptions? IIndexRoutingAllocation.Enable { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocationInclude? IIndexRoutingAllocation.Include { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocationInitialRecovery? IIndexRoutingAllocation.InitialRecovery { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocationDisk? IIndexRoutingAllocation.Disk { get; set; }
	}

	public partial class IndexRoutingAllocation : IIndexRoutingAllocation
	{
		[JsonInclude]
		[JsonPropertyName("disk")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocationDisk? Disk { get; set; }

		[JsonInclude]
		[JsonPropertyName("enable")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IndexRoutingAllocationOptions? Enable { get; set; }

		[JsonInclude]
		[JsonPropertyName("include")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocationInclude? Include { get; set; }

		[JsonInclude]
		[JsonPropertyName("initial_recovery")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexRoutingAllocationInitialRecovery? InitialRecovery { get; set; }
	}

	[ConvertAs(typeof(IndexRoutingAllocationDisk))]
	public partial interface IIndexRoutingAllocationDisk
	{
		Union<bool, string> ThresholdEnabled { get; set; }
	}

	public partial class IndexRoutingAllocationDiskDescriptor : DescriptorBase<IndexRoutingAllocationDiskDescriptor, IIndexRoutingAllocationDisk>, IIndexRoutingAllocationDisk
	{
		Union<bool, string> IIndexRoutingAllocationDisk.ThresholdEnabled { get; set; }
	}

	public partial class IndexRoutingAllocationDisk : IIndexRoutingAllocationDisk
	{
		[JsonInclude]
		[JsonPropertyName("threshold_enabled")]
		public Union<bool, string> ThresholdEnabled { get; set; }
	}

	[ConvertAs(typeof(IndexRoutingAllocationInclude))]
	public partial interface IIndexRoutingAllocationInclude
	{
		Elastic.Clients.Elasticsearch.Id? Id { get; set; }

		string? TierPreference { get; set; }
	}

	public partial class IndexRoutingAllocationIncludeDescriptor : DescriptorBase<IndexRoutingAllocationIncludeDescriptor, IIndexRoutingAllocationInclude>, IIndexRoutingAllocationInclude
	{
		string? IIndexRoutingAllocationInclude.TierPreference { get; set; }

		Elastic.Clients.Elasticsearch.Id? IIndexRoutingAllocationInclude.Id { get; set; }
	}

	public partial class IndexRoutingAllocationInclude : IIndexRoutingAllocationInclude
	{
		[JsonInclude]
		[JsonPropertyName("_id")]
		public Elastic.Clients.Elasticsearch.Id? Id { get; set; }

		[JsonInclude]
		[JsonPropertyName("_tier_preference")]
		public string? TierPreference { get; set; }
	}

	[ConvertAs(typeof(IndexRoutingAllocationInitialRecovery))]
	public partial interface IIndexRoutingAllocationInitialRecovery
	{
		Elastic.Clients.Elasticsearch.Id? Id { get; set; }
	}

	public partial class IndexRoutingAllocationInitialRecoveryDescriptor : DescriptorBase<IndexRoutingAllocationInitialRecoveryDescriptor, IIndexRoutingAllocationInitialRecovery>, IIndexRoutingAllocationInitialRecovery
	{
		Elastic.Clients.Elasticsearch.Id? IIndexRoutingAllocationInitialRecovery.Id { get; set; }
	}

	public partial class IndexRoutingAllocationInitialRecovery : IIndexRoutingAllocationInitialRecovery
	{
		[JsonInclude]
		[JsonPropertyName("_id")]
		public Elastic.Clients.Elasticsearch.Id? Id { get; set; }
	}

	[ConvertAs(typeof(IndexRoutingRebalance))]
	public partial interface IIndexRoutingRebalance
	{
		Elastic.Clients.Elasticsearch.IndexManagement.IndexRoutingRebalanceOptions Enable { get; set; }
	}

	public partial class IndexRoutingRebalanceDescriptor : DescriptorBase<IndexRoutingRebalanceDescriptor, IIndexRoutingRebalance>, IIndexRoutingRebalance
	{
		Elastic.Clients.Elasticsearch.IndexManagement.IndexRoutingRebalanceOptions IIndexRoutingRebalance.Enable { get; set; }
	}

	public partial class IndexRoutingRebalance : IIndexRoutingRebalance
	{
		[JsonInclude]
		[JsonPropertyName("enable")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IndexRoutingRebalanceOptions Enable { get; set; }
	}

	[ConvertAs(typeof(IndexSettingBlocks))]
	public partial interface IIndexSettingBlocks
	{
		bool? Metadata { get; set; }

		bool? Read { get; set; }

		bool? ReadOnly { get; set; }

		bool? ReadOnlyAllowDelete { get; set; }

		Union<bool, string>? Write { get; set; }
	}

	public partial class IndexSettingBlocksDescriptor : DescriptorBase<IndexSettingBlocksDescriptor, IIndexSettingBlocks>, IIndexSettingBlocks
	{
		bool? IIndexSettingBlocks.ReadOnly { get; set; }

		bool? IIndexSettingBlocks.ReadOnlyAllowDelete { get; set; }

		bool? IIndexSettingBlocks.Read { get; set; }

		Union<bool, string>? IIndexSettingBlocks.Write { get; set; }

		bool? IIndexSettingBlocks.Metadata { get; set; }
	}

	public partial class IndexSettingBlocks : IIndexSettingBlocks
	{
		[JsonInclude]
		[JsonPropertyName("metadata")]
		public bool? Metadata { get; set; }

		[JsonInclude]
		[JsonPropertyName("read")]
		public bool? Read { get; set; }

		[JsonInclude]
		[JsonPropertyName("read_only")]
		public bool? ReadOnly { get; set; }

		[JsonInclude]
		[JsonPropertyName("read_only_allow_delete")]
		public bool? ReadOnlyAllowDelete { get; set; }

		[JsonInclude]
		[JsonPropertyName("write")]
		public Union<bool, string>? Write { get; set; }
	}

	[ConvertAs(typeof(IndexSettings))]
	public partial interface IIndexSettings
	{
		Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettingsAnalysis? Analysis { get; set; }

		int? AnalyzeMaxTokenCount { get; set; }

		string? AutoExpandReplicas { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettingBlocks? Blocks { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IndexCheckOnStartup? CheckOnStartup { get; set; }

		string? Codec { get; set; }

		Elastic.Clients.Elasticsearch.DateString? CreationDate { get; set; }

		Elastic.Clients.Elasticsearch.PipelineName? DefaultPipeline { get; set; }

		Elastic.Clients.Elasticsearch.PipelineName? FinalPipeline { get; set; }

		Union<string, int>? Format { get; set; }

		Elastic.Clients.Elasticsearch.Time? GcDeletes { get; set; }

		Union<bool, string>? Hidden { get; set; }

		int? HighlightMaxAnalyzedOffset { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettingsLifecycle? Lifecycle { get; set; }

		bool? LoadFixedBitsetFiltersEagerly { get; set; }

		int? MaxDocvalueFieldsSearch { get; set; }

		int? MaxInnerResultWindow { get; set; }

		int? MaxNgramDiff { get; set; }

		int? MaxRefreshListeners { get; set; }

		int? MaxRegexLength { get; set; }

		int? MaxRescoreWindow { get; set; }

		int? MaxResultWindow { get; set; }

		int? MaxScriptFields { get; set; }

		int? MaxShingleDiff { get; set; }

		int? MaxSlicesPerScroll { get; set; }

		int? MaxTermsCount { get; set; }

		Union<int, string>? NumberOfReplicas { get; set; }

		int? NumberOfRoutingShards { get; set; }

		Union<int, string>? NumberOfShards { get; set; }

		Union<int, string>? Priority { get; set; }

		Elastic.Clients.Elasticsearch.Name? ProvidedName { get; set; }

		Union<bool, string>? QueryStringLenient { get; set; }

		Elastic.Clients.Elasticsearch.Time? RefreshInterval { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRouting? Routing { get; set; }

		Union<int, string>? RoutingPartitionSize { get; set; }

		Elastic.Clients.Elasticsearch.Time? SearchIdleAfter { get; set; }

		Elastic.Clients.Elasticsearch.Time? SoftDeletesRetentionLeasePeriod { get; set; }

		int? TopMetricsMaxSize { get; set; }

		string? TranslogDurability { get; set; }

		Elastic.Clients.Elasticsearch.Uuid? Uuid { get; set; }

		Union<bool, string>? VerifiedBeforeClose { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexVersioning? Version { get; set; }
	}

	public partial class IndexSettingsDescriptor : DescriptorBase<IndexSettingsDescriptor, IIndexSettings>, IIndexSettings
	{
		Union<int, string>? IIndexSettings.NumberOfShards { get; set; }

		Union<int, string>? IIndexSettings.NumberOfReplicas { get; set; }

		int? IIndexSettings.NumberOfRoutingShards { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IndexCheckOnStartup? IIndexSettings.CheckOnStartup { get; set; }

		string? IIndexSettings.Codec { get; set; }

		Union<int, string>? IIndexSettings.RoutingPartitionSize { get; set; }

		Elastic.Clients.Elasticsearch.Time? IIndexSettings.SoftDeletesRetentionLeasePeriod { get; set; }

		bool? IIndexSettings.LoadFixedBitsetFiltersEagerly { get; set; }

		Union<bool, string>? IIndexSettings.Hidden { get; set; }

		string? IIndexSettings.AutoExpandReplicas { get; set; }

		Elastic.Clients.Elasticsearch.Time? IIndexSettings.SearchIdleAfter { get; set; }

		Elastic.Clients.Elasticsearch.Time? IIndexSettings.RefreshInterval { get; set; }

		int? IIndexSettings.MaxResultWindow { get; set; }

		int? IIndexSettings.MaxInnerResultWindow { get; set; }

		int? IIndexSettings.MaxRescoreWindow { get; set; }

		int? IIndexSettings.MaxDocvalueFieldsSearch { get; set; }

		int? IIndexSettings.MaxScriptFields { get; set; }

		int? IIndexSettings.MaxNgramDiff { get; set; }

		int? IIndexSettings.MaxShingleDiff { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettingBlocks? IIndexSettings.Blocks { get; set; }

		int? IIndexSettings.MaxRefreshListeners { get; set; }

		int? IIndexSettings.AnalyzeMaxTokenCount { get; set; }

		int? IIndexSettings.HighlightMaxAnalyzedOffset { get; set; }

		int? IIndexSettings.MaxTermsCount { get; set; }

		int? IIndexSettings.MaxRegexLength { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexRouting? IIndexSettings.Routing { get; set; }

		Elastic.Clients.Elasticsearch.Time? IIndexSettings.GcDeletes { get; set; }

		Elastic.Clients.Elasticsearch.PipelineName? IIndexSettings.DefaultPipeline { get; set; }

		Elastic.Clients.Elasticsearch.PipelineName? IIndexSettings.FinalPipeline { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettingsLifecycle? IIndexSettings.Lifecycle { get; set; }

		Elastic.Clients.Elasticsearch.Name? IIndexSettings.ProvidedName { get; set; }

		Elastic.Clients.Elasticsearch.DateString? IIndexSettings.CreationDate { get; set; }

		Elastic.Clients.Elasticsearch.Uuid? IIndexSettings.Uuid { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexVersioning? IIndexSettings.Version { get; set; }

		Union<bool, string>? IIndexSettings.VerifiedBeforeClose { get; set; }

		Union<string, int>? IIndexSettings.Format { get; set; }

		int? IIndexSettings.MaxSlicesPerScroll { get; set; }

		string? IIndexSettings.TranslogDurability { get; set; }

		Union<bool, string>? IIndexSettings.QueryStringLenient { get; set; }

		Union<int, string>? IIndexSettings.Priority { get; set; }

		int? IIndexSettings.TopMetricsMaxSize { get; set; }

		Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettingsAnalysis? IIndexSettings.Analysis { get; set; }
	}

	public partial class IndexSettings : IIndexSettings
	{
		[JsonInclude]
		[JsonPropertyName("analysis")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettingsAnalysis? Analysis { get; set; }

		[JsonInclude]
		[JsonPropertyName("analyze.max_token_count")]
		public int? AnalyzeMaxTokenCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("auto_expand_replicas")]
		public string? AutoExpandReplicas { get; set; }

		[JsonInclude]
		[JsonPropertyName("blocks")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettingBlocks? Blocks { get; set; }

		[JsonInclude]
		[JsonPropertyName("check_on_startup")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IndexCheckOnStartup? CheckOnStartup { get; set; }

		[JsonInclude]
		[JsonPropertyName("codec")]
		public string? Codec { get; set; }

		[JsonInclude]
		[JsonPropertyName("creation_date")]
		public Elastic.Clients.Elasticsearch.DateString? CreationDate { get; set; }

		[JsonInclude]
		[JsonPropertyName("default_pipeline")]
		public Elastic.Clients.Elasticsearch.PipelineName? DefaultPipeline { get; set; }

		[JsonInclude]
		[JsonPropertyName("final_pipeline")]
		public Elastic.Clients.Elasticsearch.PipelineName? FinalPipeline { get; set; }

		[JsonInclude]
		[JsonPropertyName("format")]
		public Union<string, int>? Format { get; set; }

		[JsonInclude]
		[JsonPropertyName("gc_deletes")]
		public Elastic.Clients.Elasticsearch.Time? GcDeletes { get; set; }

		[JsonInclude]
		[JsonPropertyName("hidden")]
		public Union<bool, string>? Hidden { get; set; }

		[JsonInclude]
		[JsonPropertyName("highlight.max_analyzed_offset")]
		public int? HighlightMaxAnalyzedOffset { get; set; }

		[JsonInclude]
		[JsonPropertyName("lifecycle")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettingsLifecycle? Lifecycle { get; set; }

		[JsonInclude]
		[JsonPropertyName("load_fixed_bitset_filters_eagerly")]
		public bool? LoadFixedBitsetFiltersEagerly { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_docvalue_fields_search")]
		public int? MaxDocvalueFieldsSearch { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_inner_result_window")]
		public int? MaxInnerResultWindow { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_ngram_diff")]
		public int? MaxNgramDiff { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_refresh_listeners")]
		public int? MaxRefreshListeners { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_regex_length")]
		public int? MaxRegexLength { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_rescore_window")]
		public int? MaxRescoreWindow { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_result_window")]
		public int? MaxResultWindow { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_script_fields")]
		public int? MaxScriptFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_shingle_diff")]
		public int? MaxShingleDiff { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_slices_per_scroll")]
		public int? MaxSlicesPerScroll { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_terms_count")]
		public int? MaxTermsCount { get; set; }

		[JsonInclude]
		[JsonPropertyName("number_of_replicas")]
		public Union<int, string>? NumberOfReplicas { get; set; }

		[JsonInclude]
		[JsonPropertyName("number_of_routing_shards")]
		public int? NumberOfRoutingShards { get; set; }

		[JsonInclude]
		[JsonPropertyName("number_of_shards")]
		public Union<int, string>? NumberOfShards { get; set; }

		[JsonInclude]
		[JsonPropertyName("priority")]
		public Union<int, string>? Priority { get; set; }

		[JsonInclude]
		[JsonPropertyName("provided_name")]
		public Elastic.Clients.Elasticsearch.Name? ProvidedName { get; set; }

		[JsonInclude]
		[JsonPropertyName("query_string.lenient")]
		public Union<bool, string>? QueryStringLenient { get; set; }

		[JsonInclude]
		[JsonPropertyName("refresh_interval")]
		public Elastic.Clients.Elasticsearch.Time? RefreshInterval { get; set; }

		[JsonInclude]
		[JsonPropertyName("routing")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexRouting? Routing { get; set; }

		[JsonInclude]
		[JsonPropertyName("routing_partition_size")]
		public Union<int, string>? RoutingPartitionSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("search.idle.after")]
		public Elastic.Clients.Elasticsearch.Time? SearchIdleAfter { get; set; }

		[JsonInclude]
		[JsonPropertyName("soft_deletes.retention_lease.period")]
		public Elastic.Clients.Elasticsearch.Time? SoftDeletesRetentionLeasePeriod { get; set; }

		[JsonInclude]
		[JsonPropertyName("top_metrics_max_size")]
		public int? TopMetricsMaxSize { get; set; }

		[JsonInclude]
		[JsonPropertyName("translog.durability")]
		public string? TranslogDurability { get; set; }

		[JsonInclude]
		[JsonPropertyName("uuid")]
		public Elastic.Clients.Elasticsearch.Uuid? Uuid { get; set; }

		[JsonInclude]
		[JsonPropertyName("verified_before_close")]
		public Union<bool, string>? VerifiedBeforeClose { get; set; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexVersioning? Version { get; set; }
	}

	[ConvertAs(typeof(IndexSettingsAnalysis))]
	public partial interface IIndexSettingsAnalysis
	{
		Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.Analyzer>? Analyzer { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.CharFilter>? CharFilter { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.TokenFilter>? Filter { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.ICustomNormalizer>? Normalizer { get; set; }
	}

	public partial class IndexSettingsAnalysisDescriptor : DescriptorBase<IndexSettingsAnalysisDescriptor, IIndexSettingsAnalysis>, IIndexSettingsAnalysis
	{
		Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.Analyzer>? IIndexSettingsAnalysis.Analyzer { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.CharFilter>? IIndexSettingsAnalysis.CharFilter { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.TokenFilter>? IIndexSettingsAnalysis.Filter { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.ICustomNormalizer>? IIndexSettingsAnalysis.Normalizer { get; set; }
	}

	public partial class IndexSettingsAnalysis : IIndexSettingsAnalysis
	{
		[JsonInclude]
		[JsonPropertyName("analyzer")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.Analyzer>? Analyzer { get; set; }

		[JsonInclude]
		[JsonPropertyName("char_filter")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.CharFilter>? CharFilter { get; set; }

		[JsonInclude]
		[JsonPropertyName("filter")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.TokenFilter>? Filter { get; set; }

		[JsonInclude]
		[JsonPropertyName("normalizer")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Analysis.ICustomNormalizer>? Normalizer { get; set; }
	}

	[ConvertAs(typeof(IndexSettingsLifecycle))]
	public partial interface IIndexSettingsLifecycle
	{
		Elastic.Clients.Elasticsearch.Name Name { get; set; }
	}

	public partial class IndexSettingsLifecycleDescriptor : DescriptorBase<IndexSettingsLifecycleDescriptor, IIndexSettingsLifecycle>, IIndexSettingsLifecycle
	{
		Elastic.Clients.Elasticsearch.Name IIndexSettingsLifecycle.Name { get; set; }
	}

	public partial class IndexSettingsLifecycle : IIndexSettingsLifecycle
	{
		[JsonInclude]
		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name Name { get; set; }
	}

	[ConvertAs(typeof(IndexState))]
	public partial interface IIndexState
	{
		Dictionary<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.IAlias>? Aliases { get; set; }

		Elastic.Clients.Elasticsearch.DataStreamName? DataStream { get; set; }

		Elastic.Clients.Elasticsearch.Mapping.ITypeMapping? Mappings { get; set; }

		Union<Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettings, Elastic.Clients.Elasticsearch.IndexManagement.IIndexStatePrefixedSettings> Settings { get; set; }
	}

	public partial class IndexStateDescriptor : DescriptorBase<IndexStateDescriptor, IIndexState>, IIndexState
	{
		Dictionary<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.IAlias>? IIndexState.Aliases { get; set; }

		Elastic.Clients.Elasticsearch.Mapping.ITypeMapping? IIndexState.Mappings { get; set; }

		Union<Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettings, Elastic.Clients.Elasticsearch.IndexManagement.IIndexStatePrefixedSettings> IIndexState.Settings { get; set; }

		Elastic.Clients.Elasticsearch.DataStreamName? IIndexState.DataStream { get; set; }
	}

	public partial class IndexState : IIndexState
	{
		[JsonInclude]
		[JsonPropertyName("aliases")]
		public Dictionary<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.IAlias>? Aliases { get; set; }

		[JsonInclude]
		[JsonPropertyName("data_stream")]
		public Elastic.Clients.Elasticsearch.DataStreamName? DataStream { get; set; }

		[JsonInclude]
		[JsonPropertyName("mappings")]
		public Elastic.Clients.Elasticsearch.Mapping.ITypeMapping? Mappings { get; set; }

		[JsonInclude]
		[JsonPropertyName("settings")]
		public Union<Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettings, Elastic.Clients.Elasticsearch.IndexManagement.IIndexStatePrefixedSettings> Settings { get; set; }
	}

	[ConvertAs(typeof(IndexStatePrefixedSettings))]
	public partial interface IIndexStatePrefixedSettings
	{
		Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettings Index { get; set; }
	}

	public partial class IndexStatePrefixedSettingsDescriptor : DescriptorBase<IndexStatePrefixedSettingsDescriptor, IIndexStatePrefixedSettings>, IIndexStatePrefixedSettings
	{
		Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettings IIndexStatePrefixedSettings.Index { get; set; }
	}

	public partial class IndexStatePrefixedSettings : IIndexStatePrefixedSettings
	{
		[JsonInclude]
		[JsonPropertyName("index")]
		public Elastic.Clients.Elasticsearch.IndexManagement.IIndexSettings Index { get; set; }
	}

	[ConvertAs(typeof(IndexVersioning))]
	public partial interface IIndexVersioning
	{
		Elastic.Clients.Elasticsearch.VersionString Created { get; set; }
	}

	public partial class IndexVersioningDescriptor : DescriptorBase<IndexVersioningDescriptor, IIndexVersioning>, IIndexVersioning
	{
		Elastic.Clients.Elasticsearch.VersionString IIndexVersioning.Created { get; set; }
	}

	public partial class IndexVersioning : IIndexVersioning
	{
		[JsonInclude]
		[JsonPropertyName("created")]
		public Elastic.Clients.Elasticsearch.VersionString Created { get; set; }
	}

	public partial class NumericFielddata
	{
		[JsonInclude]
		[JsonPropertyName("format")]
		public Elastic.Clients.Elasticsearch.IndexManagement.NumericFielddataFormat Format
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(OverlappingIndexTemplate))]
	public partial interface IOverlappingIndexTemplate
	{
		IEnumerable<Elastic.Clients.Elasticsearch.IndexName>? IndexPatterns { get; set; }

		Elastic.Clients.Elasticsearch.Name Name { get; set; }
	}

	public partial class OverlappingIndexTemplateDescriptor : DescriptorBase<OverlappingIndexTemplateDescriptor, IOverlappingIndexTemplate>, IOverlappingIndexTemplate
	{
		Elastic.Clients.Elasticsearch.Name IOverlappingIndexTemplate.Name { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.IndexName>? IOverlappingIndexTemplate.IndexPatterns { get; set; }
	}

	public partial class OverlappingIndexTemplate : IOverlappingIndexTemplate
	{
		[JsonInclude]
		[JsonPropertyName("index_patterns")]
		public IEnumerable<Elastic.Clients.Elasticsearch.IndexName>? IndexPatterns { get; set; }

		[JsonInclude]
		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name Name { get; set; }
	}

	public partial class StringFielddata
	{
		[JsonInclude]
		[JsonPropertyName("format")]
		public Elastic.Clients.Elasticsearch.IndexManagement.StringFielddataFormat Format
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(TemplateMapping))]
	public partial interface ITemplateMapping
	{
		Dictionary<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.IAlias> Aliases { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Name> IndexPatterns { get; set; }

		Elastic.Clients.Elasticsearch.Mapping.ITypeMapping Mappings { get; set; }

		int Order { get; set; }

		Dictionary<string, object> Settings { get; set; }

		Elastic.Clients.Elasticsearch.VersionNumber? Version { get; set; }
	}

	public partial class TemplateMappingDescriptor : DescriptorBase<TemplateMappingDescriptor, ITemplateMapping>, ITemplateMapping
	{
		Dictionary<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.IAlias> ITemplateMapping.Aliases { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Name> ITemplateMapping.IndexPatterns { get; set; }

		Elastic.Clients.Elasticsearch.Mapping.ITypeMapping ITemplateMapping.Mappings { get; set; }

		int ITemplateMapping.Order { get; set; }

		Dictionary<string, object> ITemplateMapping.Settings { get; set; }

		Elastic.Clients.Elasticsearch.VersionNumber? ITemplateMapping.Version { get; set; }
	}

	public partial class TemplateMapping : ITemplateMapping
	{
		[JsonInclude]
		[JsonPropertyName("aliases")]
		public Dictionary<Elastic.Clients.Elasticsearch.IndexName, Elastic.Clients.Elasticsearch.IndexManagement.IAlias> Aliases { get; set; }

		[JsonInclude]
		[JsonPropertyName("index_patterns")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Name> IndexPatterns { get; set; }

		[JsonInclude]
		[JsonPropertyName("mappings")]
		public Elastic.Clients.Elasticsearch.Mapping.ITypeMapping Mappings { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public int Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("settings")]
		public Dictionary<string, object> Settings { get; set; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public Elastic.Clients.Elasticsearch.VersionNumber? Version { get; set; }
	}
}