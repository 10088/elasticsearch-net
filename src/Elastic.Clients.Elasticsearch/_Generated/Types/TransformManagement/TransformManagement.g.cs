// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.TransformManagement
{
	[ConvertAs(typeof(Latest))]
	public partial interface ILatest
	{
		Elastic.Clients.Elasticsearch.Field Sort { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Field> UniqueKey { get; set; }
	}

	public partial class LatestDescriptor : DescriptorBase<LatestDescriptor, ILatest>, ILatest
	{
		Elastic.Clients.Elasticsearch.Field ILatest.Sort { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Field> ILatest.UniqueKey { get; set; }
	}

	public partial class Latest : ILatest
	{
		[JsonInclude]
		[JsonPropertyName("sort")]
		public Elastic.Clients.Elasticsearch.Field Sort { get; set; }

		[JsonInclude]
		[JsonPropertyName("unique_key")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Field> UniqueKey { get; set; }
	}

	[ConvertAs(typeof(Pivot))]
	public partial interface IPivot
	{
		Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? Aggregations { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.TransformManagement.PivotGroupByContainer>? GroupBy { get; set; }

		int? MaxPageSearchSize { get; set; }
	}

	public partial class PivotDescriptor : DescriptorBase<PivotDescriptor, IPivot>, IPivot
	{
		Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? IPivot.Aggregations { get; set; }

		Dictionary<string, Elastic.Clients.Elasticsearch.TransformManagement.PivotGroupByContainer>? IPivot.GroupBy { get; set; }

		int? IPivot.MaxPageSearchSize { get; set; }
	}

	public partial class Pivot : IPivot
	{
		[JsonInclude]
		[JsonPropertyName("aggregations")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.Aggregations.AggregationContainer>? Aggregations { get; set; }

		[JsonInclude]
		[JsonPropertyName("group_by")]
		public Dictionary<string, Elastic.Clients.Elasticsearch.TransformManagement.PivotGroupByContainer>? GroupBy { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_page_search_size")]
		public int? MaxPageSearchSize { get; set; }
	}

	[ConvertAs(typeof(RetentionPolicy))]
	public partial interface IRetentionPolicy
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		Elastic.Clients.Elasticsearch.Time MaxAge { get; set; }
	}

	public partial class RetentionPolicyDescriptor : DescriptorBase<RetentionPolicyDescriptor, IRetentionPolicy>, IRetentionPolicy
	{
		Elastic.Clients.Elasticsearch.Field IRetentionPolicy.Field { get; set; }

		Elastic.Clients.Elasticsearch.Time IRetentionPolicy.MaxAge { get; set; }
	}

	public partial class RetentionPolicy : IRetentionPolicy
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_age")]
		public Elastic.Clients.Elasticsearch.Time MaxAge { get; set; }
	}

	[ConvertAs(typeof(Settings))]
	public partial interface ISettings
	{
		bool? DatesAsEpochMillis { get; set; }

		float? DocsPerSecond { get; set; }

		int? MaxPageSearchSize { get; set; }
	}

	public partial class SettingsDescriptor : DescriptorBase<SettingsDescriptor, ISettings>, ISettings
	{
		bool? ISettings.DatesAsEpochMillis { get; set; }

		float? ISettings.DocsPerSecond { get; set; }

		int? ISettings.MaxPageSearchSize { get; set; }
	}

	public partial class Settings : ISettings
	{
		[JsonInclude]
		[JsonPropertyName("dates_as_epoch_millis")]
		public bool? DatesAsEpochMillis { get; set; }

		[JsonInclude]
		[JsonPropertyName("docs_per_second")]
		public float? DocsPerSecond { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_page_search_size")]
		public int? MaxPageSearchSize { get; set; }
	}

	[ConvertAs(typeof(TimeSync))]
	public partial interface ITimeSync
	{
		Elastic.Clients.Elasticsearch.Time? Delay { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }
	}

	public partial class TimeSyncDescriptor : DescriptorBase<TimeSyncDescriptor, ITimeSync>, ITimeSync
	{
		Elastic.Clients.Elasticsearch.Time? ITimeSync.Delay { get; set; }

		Elastic.Clients.Elasticsearch.Field ITimeSync.Field { get; set; }
	}

	public partial class TimeSync : ITimeSync
	{
		[JsonInclude]
		[JsonPropertyName("delay")]
		public Elastic.Clients.Elasticsearch.Time? Delay { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }
	}
}