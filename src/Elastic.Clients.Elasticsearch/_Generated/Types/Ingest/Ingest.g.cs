// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.
//
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// ------------------------------------------------
//
// This file is automatically generated.
// Please do not edit these files manually.
//
// ------------------------------------------------

using Elastic.Transport.Products.Elasticsearch.Failures;
using OneOf;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable restore
namespace Elastic.Clients.Elasticsearch.Ingest
{
	[ConvertAs(typeof(AppendProcessor))]
	public partial interface IAppendProcessor
	{
		bool? AllowDuplicates { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		IEnumerable<object> Value { get; set; }
	}

	public partial class AppendProcessorDescriptor : DescriptorBase<AppendProcessorDescriptor, IAppendProcessor>, IAppendProcessor
	{
		Elastic.Clients.Elasticsearch.Field IAppendProcessor.Field { get; set; }

		IEnumerable<object> IAppendProcessor.Value { get; set; }

		bool? IAppendProcessor.AllowDuplicates { get; set; }
	}

	public partial class AppendProcessor : Ingest.ProcessorBase, IAppendProcessor
	{
		[JsonInclude]
		[JsonPropertyName("allow_duplicates")]
		public bool? AllowDuplicates { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("value")]
		public IEnumerable<object> Value { get; set; }
	}

	[ConvertAs(typeof(AttachmentProcessor))]
	public partial interface IAttachmentProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		long? IndexedChars { get; set; }

		Elastic.Clients.Elasticsearch.Field? IndexedCharsField { get; set; }

		IEnumerable<string>? Properties { get; set; }

		string? ResourceName { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	public partial class AttachmentProcessorDescriptor : DescriptorBase<AttachmentProcessorDescriptor, IAttachmentProcessor>, IAttachmentProcessor
	{
		Elastic.Clients.Elasticsearch.Field IAttachmentProcessor.Field { get; set; }

		bool? IAttachmentProcessor.IgnoreMissing { get; set; }

		long? IAttachmentProcessor.IndexedChars { get; set; }

		Elastic.Clients.Elasticsearch.Field? IAttachmentProcessor.IndexedCharsField { get; set; }

		IEnumerable<string>? IAttachmentProcessor.Properties { get; set; }

		Elastic.Clients.Elasticsearch.Field? IAttachmentProcessor.TargetField { get; set; }

		string? IAttachmentProcessor.ResourceName { get; set; }
	}

	public partial class AttachmentProcessor : Ingest.ProcessorBase, IAttachmentProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("indexed_chars")]
		public long? IndexedChars { get; set; }

		[JsonInclude]
		[JsonPropertyName("indexed_chars_field")]
		public Elastic.Clients.Elasticsearch.Field? IndexedCharsField { get; set; }

		[JsonInclude]
		[JsonPropertyName("properties")]
		public IEnumerable<string>? Properties { get; set; }

		[JsonInclude]
		[JsonPropertyName("resource_name")]
		public string? ResourceName { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	[ConvertAs(typeof(BytesProcessor))]
	public partial interface IBytesProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	public partial class BytesProcessorDescriptor : DescriptorBase<BytesProcessorDescriptor, IBytesProcessor>, IBytesProcessor
	{
		Elastic.Clients.Elasticsearch.Field IBytesProcessor.Field { get; set; }

		bool? IBytesProcessor.IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? IBytesProcessor.TargetField { get; set; }
	}

	public partial class BytesProcessor : Ingest.ProcessorBase, IBytesProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	[ConvertAs(typeof(CircleProcessor))]
	public partial interface ICircleProcessor
	{
		double ErrorDistance { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Ingest.ShapeType ShapeType { get; set; }

		Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	public partial class CircleProcessorDescriptor : DescriptorBase<CircleProcessorDescriptor, ICircleProcessor>, ICircleProcessor
	{
		double ICircleProcessor.ErrorDistance { get; set; }

		Elastic.Clients.Elasticsearch.Field ICircleProcessor.Field { get; set; }

		bool ICircleProcessor.IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Ingest.ShapeType ICircleProcessor.ShapeType { get; set; }

		Elastic.Clients.Elasticsearch.Field ICircleProcessor.TargetField { get; set; }
	}

	public partial class CircleProcessor : Ingest.ProcessorBase, ICircleProcessor
	{
		[JsonInclude]
		[JsonPropertyName("error_distance")]
		public double ErrorDistance { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("shape_type")]
		public Elastic.Clients.Elasticsearch.Ingest.ShapeType ShapeType { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	[ConvertAs(typeof(ConvertProcessor))]
	public partial interface IConvertProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field TargetField { get; set; }

		Elastic.Clients.Elasticsearch.Ingest.ConvertType Type { get; set; }
	}

	public partial class ConvertProcessorDescriptor : DescriptorBase<ConvertProcessorDescriptor, IConvertProcessor>, IConvertProcessor
	{
		Elastic.Clients.Elasticsearch.Field IConvertProcessor.Field { get; set; }

		bool? IConvertProcessor.IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field IConvertProcessor.TargetField { get; set; }

		Elastic.Clients.Elasticsearch.Ingest.ConvertType IConvertProcessor.Type { get; set; }
	}

	public partial class ConvertProcessor : Ingest.ProcessorBase, IConvertProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field TargetField { get; set; }

		[JsonInclude]
		[JsonPropertyName("type")]
		public Elastic.Clients.Elasticsearch.Ingest.ConvertType Type { get; set; }
	}

	[ConvertAs(typeof(CsvProcessor))]
	public partial interface ICsvProcessor
	{
		string? Description { get; set; }

		object EmptyValue { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		string? Quote { get; set; }

		string? Separator { get; set; }

		Elastic.Clients.Elasticsearch.Fields TargetFields { get; set; }

		bool Trim { get; set; }
	}

	public partial class CsvProcessorDescriptor : DescriptorBase<CsvProcessorDescriptor, ICsvProcessor>, ICsvProcessor
	{
		object ICsvProcessor.EmptyValue { get; set; }

		string? ICsvProcessor.Description { get; set; }

		Elastic.Clients.Elasticsearch.Field ICsvProcessor.Field { get; set; }

		bool? ICsvProcessor.IgnoreMissing { get; set; }

		string? ICsvProcessor.Quote { get; set; }

		string? ICsvProcessor.Separator { get; set; }

		Elastic.Clients.Elasticsearch.Fields ICsvProcessor.TargetFields { get; set; }

		bool ICsvProcessor.Trim { get; set; }
	}

	public partial class CsvProcessor : Ingest.ProcessorBase, ICsvProcessor
	{
		[JsonInclude]
		[JsonPropertyName("description")]
		public string? Description { get; set; }

		[JsonInclude]
		[JsonPropertyName("empty_value")]
		public object EmptyValue { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("quote")]
		public string? Quote { get; set; }

		[JsonInclude]
		[JsonPropertyName("separator")]
		public string? Separator { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_fields")]
		public Elastic.Clients.Elasticsearch.Fields TargetFields { get; set; }

		[JsonInclude]
		[JsonPropertyName("trim")]
		public bool Trim { get; set; }
	}

	[ConvertAs(typeof(DateIndexNameProcessor))]
	public partial interface IDateIndexNameProcessor
	{
		IEnumerable<string> DateFormats { get; set; }

		Union<string, Elastic.Clients.Elasticsearch.Ingest.DateRounding> DateRounding { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		string IndexNameFormat { get; set; }

		string IndexNamePrefix { get; set; }

		string Locale { get; set; }

		string Timezone { get; set; }
	}

	public partial class DateIndexNameProcessorDescriptor : DescriptorBase<DateIndexNameProcessorDescriptor, IDateIndexNameProcessor>, IDateIndexNameProcessor
	{
		IEnumerable<string> IDateIndexNameProcessor.DateFormats { get; set; }

		Union<string, Elastic.Clients.Elasticsearch.Ingest.DateRounding> IDateIndexNameProcessor.DateRounding { get; set; }

		Elastic.Clients.Elasticsearch.Field IDateIndexNameProcessor.Field { get; set; }

		string IDateIndexNameProcessor.IndexNameFormat { get; set; }

		string IDateIndexNameProcessor.IndexNamePrefix { get; set; }

		string IDateIndexNameProcessor.Locale { get; set; }

		string IDateIndexNameProcessor.Timezone { get; set; }
	}

	public partial class DateIndexNameProcessor : Ingest.ProcessorBase, IDateIndexNameProcessor
	{
		[JsonInclude]
		[JsonPropertyName("date_formats")]
		public IEnumerable<string> DateFormats { get; set; }

		[JsonInclude]
		[JsonPropertyName("date_rounding")]
		public Union<string, Elastic.Clients.Elasticsearch.Ingest.DateRounding> DateRounding { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("index_name_format")]
		public string IndexNameFormat { get; set; }

		[JsonInclude]
		[JsonPropertyName("index_name_prefix")]
		public string IndexNamePrefix { get; set; }

		[JsonInclude]
		[JsonPropertyName("locale")]
		public string Locale { get; set; }

		[JsonInclude]
		[JsonPropertyName("timezone")]
		public string Timezone { get; set; }
	}

	[ConvertAs(typeof(DateProcessor))]
	public partial interface IDateProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		IEnumerable<string> Formats { get; set; }

		string? Locale { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }

		string? Timezone { get; set; }
	}

	public partial class DateProcessorDescriptor : DescriptorBase<DateProcessorDescriptor, IDateProcessor>, IDateProcessor
	{
		Elastic.Clients.Elasticsearch.Field IDateProcessor.Field { get; set; }

		IEnumerable<string> IDateProcessor.Formats { get; set; }

		string? IDateProcessor.Locale { get; set; }

		Elastic.Clients.Elasticsearch.Field? IDateProcessor.TargetField { get; set; }

		string? IDateProcessor.Timezone { get; set; }
	}

	public partial class DateProcessor : Ingest.ProcessorBase, IDateProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("formats")]
		public IEnumerable<string> Formats { get; set; }

		[JsonInclude]
		[JsonPropertyName("locale")]
		public string? Locale { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }

		[JsonInclude]
		[JsonPropertyName("timezone")]
		public string? Timezone { get; set; }
	}

	[ConvertAs(typeof(DissectProcessor))]
	public partial interface IDissectProcessor
	{
		string AppendSeparator { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool IgnoreMissing { get; set; }

		string Pattern { get; set; }
	}

	public partial class DissectProcessorDescriptor : DescriptorBase<DissectProcessorDescriptor, IDissectProcessor>, IDissectProcessor
	{
		string IDissectProcessor.AppendSeparator { get; set; }

		Elastic.Clients.Elasticsearch.Field IDissectProcessor.Field { get; set; }

		bool IDissectProcessor.IgnoreMissing { get; set; }

		string IDissectProcessor.Pattern { get; set; }
	}

	public partial class DissectProcessor : Ingest.ProcessorBase, IDissectProcessor
	{
		[JsonInclude]
		[JsonPropertyName("append_separator")]
		public string AppendSeparator { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("pattern")]
		public string Pattern { get; set; }
	}

	[ConvertAs(typeof(DotExpanderProcessor))]
	public partial interface IDotExpanderProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		string? Path { get; set; }
	}

	public partial class DotExpanderProcessorDescriptor : DescriptorBase<DotExpanderProcessorDescriptor, IDotExpanderProcessor>, IDotExpanderProcessor
	{
		Elastic.Clients.Elasticsearch.Field IDotExpanderProcessor.Field { get; set; }

		string? IDotExpanderProcessor.Path { get; set; }
	}

	public partial class DotExpanderProcessor : Ingest.ProcessorBase, IDotExpanderProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("path")]
		public string? Path { get; set; }
	}

	[ConvertAs(typeof(DropProcessor))]
	public partial interface IDropProcessor
	{
	}

	public partial class DropProcessorDescriptor : DescriptorBase<DropProcessorDescriptor, IDropProcessor>, IDropProcessor
	{
	}

	public partial class DropProcessor : Ingest.ProcessorBase, IDropProcessor
	{
	}

	[ConvertAs(typeof(EnrichProcessor))]
	public partial interface IEnrichProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		int? MaxMatches { get; set; }

		bool? Override { get; set; }

		string PolicyName { get; set; }

		Elastic.Clients.Elasticsearch.GeoShapeRelation? ShapeRelation { get; set; }

		Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	public partial class EnrichProcessorDescriptor : DescriptorBase<EnrichProcessorDescriptor, IEnrichProcessor>, IEnrichProcessor
	{
		Elastic.Clients.Elasticsearch.Field IEnrichProcessor.Field { get; set; }

		bool? IEnrichProcessor.IgnoreMissing { get; set; }

		int? IEnrichProcessor.MaxMatches { get; set; }

		bool? IEnrichProcessor.Override { get; set; }

		string IEnrichProcessor.PolicyName { get; set; }

		Elastic.Clients.Elasticsearch.GeoShapeRelation? IEnrichProcessor.ShapeRelation { get; set; }

		Elastic.Clients.Elasticsearch.Field IEnrichProcessor.TargetField { get; set; }
	}

	public partial class EnrichProcessor : Ingest.ProcessorBase, IEnrichProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("max_matches")]
		public int? MaxMatches { get; set; }

		[JsonInclude]
		[JsonPropertyName("override")]
		public bool? Override { get; set; }

		[JsonInclude]
		[JsonPropertyName("policy_name")]
		public string PolicyName { get; set; }

		[JsonInclude]
		[JsonPropertyName("shape_relation")]
		public Elastic.Clients.Elasticsearch.GeoShapeRelation? ShapeRelation { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	[ConvertAs(typeof(FailProcessor))]
	public partial interface IFailProcessor
	{
		string Message { get; set; }
	}

	public partial class FailProcessorDescriptor : DescriptorBase<FailProcessorDescriptor, IFailProcessor>, IFailProcessor
	{
		string IFailProcessor.Message { get; set; }
	}

	public partial class FailProcessor : Ingest.ProcessorBase, IFailProcessor
	{
		[JsonInclude]
		[JsonPropertyName("message")]
		public string Message { get; set; }
	}

	[ConvertAs(typeof(ForeachProcessor))]
	public partial interface IForeachProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer Processor { get; set; }
	}

	public partial class ForeachProcessorDescriptor : DescriptorBase<ForeachProcessorDescriptor, IForeachProcessor>, IForeachProcessor
	{
		Elastic.Clients.Elasticsearch.Field IForeachProcessor.Field { get; set; }

		bool? IForeachProcessor.IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer IForeachProcessor.Processor { get; set; }
	}

	public partial class ForeachProcessor : Ingest.ProcessorBase, IForeachProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("processor")]
		public Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer Processor { get; set; }
	}

	[ConvertAs(typeof(GeoIpProcessor))]
	public partial interface IGeoIpProcessor
	{
		string DatabaseFile { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool FirstOnly { get; set; }

		bool IgnoreMissing { get; set; }

		IEnumerable<string> Properties { get; set; }

		Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	public partial class GeoIpProcessorDescriptor : DescriptorBase<GeoIpProcessorDescriptor, IGeoIpProcessor>, IGeoIpProcessor
	{
		string IGeoIpProcessor.DatabaseFile { get; set; }

		Elastic.Clients.Elasticsearch.Field IGeoIpProcessor.Field { get; set; }

		bool IGeoIpProcessor.FirstOnly { get; set; }

		bool IGeoIpProcessor.IgnoreMissing { get; set; }

		IEnumerable<string> IGeoIpProcessor.Properties { get; set; }

		Elastic.Clients.Elasticsearch.Field IGeoIpProcessor.TargetField { get; set; }
	}

	public partial class GeoIpProcessor : Ingest.ProcessorBase, IGeoIpProcessor
	{
		[JsonInclude]
		[JsonPropertyName("database_file")]
		public string DatabaseFile { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("first_only")]
		public bool FirstOnly { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("properties")]
		public IEnumerable<string> Properties { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	[ConvertAs(typeof(GrokProcessor))]
	public partial interface IGrokProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		Dictionary<string, string> PatternDefinitions { get; set; }

		IEnumerable<string> Patterns { get; set; }

		bool? TraceMatch { get; set; }
	}

	public partial class GrokProcessorDescriptor : DescriptorBase<GrokProcessorDescriptor, IGrokProcessor>, IGrokProcessor
	{
		Elastic.Clients.Elasticsearch.Field IGrokProcessor.Field { get; set; }

		bool? IGrokProcessor.IgnoreMissing { get; set; }

		Dictionary<string, string> IGrokProcessor.PatternDefinitions { get; set; }

		IEnumerable<string> IGrokProcessor.Patterns { get; set; }

		bool? IGrokProcessor.TraceMatch { get; set; }
	}

	public partial class GrokProcessor : Ingest.ProcessorBase, IGrokProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("pattern_definitions")]
		public Dictionary<string, string> PatternDefinitions { get; set; }

		[JsonInclude]
		[JsonPropertyName("patterns")]
		public IEnumerable<string> Patterns { get; set; }

		[JsonInclude]
		[JsonPropertyName("trace_match")]
		public bool? TraceMatch { get; set; }
	}

	[ConvertAs(typeof(GsubProcessor))]
	public partial interface IGsubProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		string Pattern { get; set; }

		string Replacement { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	public partial class GsubProcessorDescriptor : DescriptorBase<GsubProcessorDescriptor, IGsubProcessor>, IGsubProcessor
	{
		Elastic.Clients.Elasticsearch.Field IGsubProcessor.Field { get; set; }

		bool? IGsubProcessor.IgnoreMissing { get; set; }

		string IGsubProcessor.Pattern { get; set; }

		string IGsubProcessor.Replacement { get; set; }

		Elastic.Clients.Elasticsearch.Field? IGsubProcessor.TargetField { get; set; }
	}

	public partial class GsubProcessor : Ingest.ProcessorBase, IGsubProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("pattern")]
		public string Pattern { get; set; }

		[JsonInclude]
		[JsonPropertyName("replacement")]
		public string Replacement { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	[ConvertAs(typeof(InferenceConfig))]
	public partial interface IInferenceConfig
	{
		Elastic.Clients.Elasticsearch.Ingest.IInferenceConfigRegression? Regression { get; set; }
	}

	public partial class InferenceConfigDescriptor : DescriptorBase<InferenceConfigDescriptor, IInferenceConfig>, IInferenceConfig
	{
		Elastic.Clients.Elasticsearch.Ingest.IInferenceConfigRegression? IInferenceConfig.Regression { get; set; }
	}

	public partial class InferenceConfig : IInferenceConfig
	{
		[JsonInclude]
		[JsonPropertyName("regression")]
		public Elastic.Clients.Elasticsearch.Ingest.IInferenceConfigRegression? Regression { get; set; }
	}

	[ConvertAs(typeof(InferenceConfigRegression))]
	public partial interface IInferenceConfigRegression
	{
		string ResultsField { get; set; }
	}

	public partial class InferenceConfigRegressionDescriptor : DescriptorBase<InferenceConfigRegressionDescriptor, IInferenceConfigRegression>, IInferenceConfigRegression
	{
		string IInferenceConfigRegression.ResultsField { get; set; }
	}

	public partial class InferenceConfigRegression : IInferenceConfigRegression
	{
		[JsonInclude]
		[JsonPropertyName("results_field")]
		public string ResultsField { get; set; }
	}

	[ConvertAs(typeof(InferenceProcessor))]
	public partial interface IInferenceProcessor
	{
		Dictionary<Elastic.Clients.Elasticsearch.Field, object>? FieldMap { get; set; }

		Elastic.Clients.Elasticsearch.Ingest.IInferenceConfig? InferenceConfig { get; set; }

		Elastic.Clients.Elasticsearch.Id ModelId { get; set; }

		Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	public partial class InferenceProcessorDescriptor : DescriptorBase<InferenceProcessorDescriptor, IInferenceProcessor>, IInferenceProcessor
	{
		Elastic.Clients.Elasticsearch.Id IInferenceProcessor.ModelId { get; set; }

		Elastic.Clients.Elasticsearch.Field IInferenceProcessor.TargetField { get; set; }

		Dictionary<Elastic.Clients.Elasticsearch.Field, object>? IInferenceProcessor.FieldMap { get; set; }

		Elastic.Clients.Elasticsearch.Ingest.IInferenceConfig? IInferenceProcessor.InferenceConfig { get; set; }
	}

	public partial class InferenceProcessor : Ingest.ProcessorBase, IInferenceProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field_map")]
		public Dictionary<Elastic.Clients.Elasticsearch.Field, object>? FieldMap { get; set; }

		[JsonInclude]
		[JsonPropertyName("inference_config")]
		public Elastic.Clients.Elasticsearch.Ingest.IInferenceConfig? InferenceConfig { get; set; }

		[JsonInclude]
		[JsonPropertyName("model_id")]
		public Elastic.Clients.Elasticsearch.Id ModelId { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	[ConvertAs(typeof(JoinProcessor))]
	public partial interface IJoinProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		string Separator { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	public partial class JoinProcessorDescriptor : DescriptorBase<JoinProcessorDescriptor, IJoinProcessor>, IJoinProcessor
	{
		Elastic.Clients.Elasticsearch.Field IJoinProcessor.Field { get; set; }

		string IJoinProcessor.Separator { get; set; }

		Elastic.Clients.Elasticsearch.Field? IJoinProcessor.TargetField { get; set; }
	}

	public partial class JoinProcessor : Ingest.ProcessorBase, IJoinProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("separator")]
		public string Separator { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	[ConvertAs(typeof(JsonProcessor))]
	public partial interface IJsonProcessor
	{
		bool AddToRoot { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	public partial class JsonProcessorDescriptor : DescriptorBase<JsonProcessorDescriptor, IJsonProcessor>, IJsonProcessor
	{
		bool IJsonProcessor.AddToRoot { get; set; }

		Elastic.Clients.Elasticsearch.Field IJsonProcessor.Field { get; set; }

		Elastic.Clients.Elasticsearch.Field IJsonProcessor.TargetField { get; set; }
	}

	public partial class JsonProcessor : Ingest.ProcessorBase, IJsonProcessor
	{
		[JsonInclude]
		[JsonPropertyName("add_to_root")]
		public bool AddToRoot { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	[ConvertAs(typeof(KeyValueProcessor))]
	public partial interface IKeyValueProcessor
	{
		IEnumerable<string>? ExcludeKeys { get; set; }

		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		string FieldSplit { get; set; }

		bool? IgnoreMissing { get; set; }

		IEnumerable<string>? IncludeKeys { get; set; }

		string? Prefix { get; set; }

		bool? StripBrackets { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }

		string? TrimKey { get; set; }

		string? TrimValue { get; set; }

		string ValueSplit { get; set; }
	}

	public partial class KeyValueProcessorDescriptor : DescriptorBase<KeyValueProcessorDescriptor, IKeyValueProcessor>, IKeyValueProcessor
	{
		IEnumerable<string>? IKeyValueProcessor.ExcludeKeys { get; set; }

		Elastic.Clients.Elasticsearch.Field IKeyValueProcessor.Field { get; set; }

		string IKeyValueProcessor.FieldSplit { get; set; }

		bool? IKeyValueProcessor.IgnoreMissing { get; set; }

		IEnumerable<string>? IKeyValueProcessor.IncludeKeys { get; set; }

		string? IKeyValueProcessor.Prefix { get; set; }

		bool? IKeyValueProcessor.StripBrackets { get; set; }

		Elastic.Clients.Elasticsearch.Field? IKeyValueProcessor.TargetField { get; set; }

		string? IKeyValueProcessor.TrimKey { get; set; }

		string? IKeyValueProcessor.TrimValue { get; set; }

		string IKeyValueProcessor.ValueSplit { get; set; }
	}

	public partial class KeyValueProcessor : Ingest.ProcessorBase, IKeyValueProcessor
	{
		[JsonInclude]
		[JsonPropertyName("exclude_keys")]
		public IEnumerable<string>? ExcludeKeys { get; set; }

		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("field_split")]
		public string FieldSplit { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("include_keys")]
		public IEnumerable<string>? IncludeKeys { get; set; }

		[JsonInclude]
		[JsonPropertyName("prefix")]
		public string? Prefix { get; set; }

		[JsonInclude]
		[JsonPropertyName("strip_brackets")]
		public bool? StripBrackets { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }

		[JsonInclude]
		[JsonPropertyName("trim_key")]
		public string? TrimKey { get; set; }

		[JsonInclude]
		[JsonPropertyName("trim_value")]
		public string? TrimValue { get; set; }

		[JsonInclude]
		[JsonPropertyName("value_split")]
		public string ValueSplit { get; set; }
	}

	[ConvertAs(typeof(LowercaseProcessor))]
	public partial interface ILowercaseProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	public partial class LowercaseProcessorDescriptor : DescriptorBase<LowercaseProcessorDescriptor, ILowercaseProcessor>, ILowercaseProcessor
	{
		Elastic.Clients.Elasticsearch.Field ILowercaseProcessor.Field { get; set; }

		bool? ILowercaseProcessor.IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? ILowercaseProcessor.TargetField { get; set; }
	}

	public partial class LowercaseProcessor : Ingest.ProcessorBase, ILowercaseProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	[ConvertAs(typeof(Pipeline))]
	public partial interface IPipeline
	{
		string? Description { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer>? OnFailure { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer>? Processors { get; set; }

		Elastic.Clients.Elasticsearch.VersionNumber? Version { get; set; }
	}

	public partial class PipelineDescriptor : DescriptorBase<PipelineDescriptor, IPipeline>, IPipeline
	{
		string? IPipeline.Description { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer>? IPipeline.OnFailure { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer>? IPipeline.Processors { get; set; }

		Elastic.Clients.Elasticsearch.VersionNumber? IPipeline.Version { get; set; }
	}

	public partial class Pipeline : IPipeline
	{
		[JsonInclude]
		[JsonPropertyName("description")]
		public string? Description { get; set; }

		[JsonInclude]
		[JsonPropertyName("on_failure")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer>? OnFailure { get; set; }

		[JsonInclude]
		[JsonPropertyName("processors")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer>? Processors { get; set; }

		[JsonInclude]
		[JsonPropertyName("version")]
		public Elastic.Clients.Elasticsearch.VersionNumber? Version { get; set; }
	}

	public partial class PipelineConfig
	{
		[JsonInclude]
		[JsonPropertyName("description")]
		public string? Description
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("processors")]
		public IReadOnlyCollection<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer> Processors
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}

		[JsonInclude]
		[JsonPropertyName("version")]
		public Elastic.Clients.Elasticsearch.VersionNumber? Version
		{
			get;
#if NET5_0_OR_GREATER
			init;
#else
			internal set;
#endif
		}
	}

	[ConvertAs(typeof(PipelineProcessor))]
	public partial interface IPipelineProcessor
	{
		Elastic.Clients.Elasticsearch.Name Name { get; set; }
	}

	public partial class PipelineProcessorDescriptor : DescriptorBase<PipelineProcessorDescriptor, IPipelineProcessor>, IPipelineProcessor
	{
		Elastic.Clients.Elasticsearch.Name IPipelineProcessor.Name { get; set; }
	}

	public partial class PipelineProcessor : Ingest.ProcessorBase, IPipelineProcessor
	{
		[JsonInclude]
		[JsonPropertyName("name")]
		public Elastic.Clients.Elasticsearch.Name Name { get; set; }
	}

	[ConvertAs(typeof(ProcessorBase))]
	public partial interface IProcessorBase
	{
		string? If { get; set; }

		bool? IgnoreFailure { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer>? OnFailure { get; set; }

		string? Tag { get; set; }
	}

	public partial class ProcessorBaseDescriptor : DescriptorBase<ProcessorBaseDescriptor, IProcessorBase>, IProcessorBase
	{
		string? IProcessorBase.If { get; set; }

		bool? IProcessorBase.IgnoreFailure { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer>? IProcessorBase.OnFailure { get; set; }

		string? IProcessorBase.Tag { get; set; }
	}

	public abstract partial class ProcessorBase : IProcessorBase
	{
		[JsonInclude]
		[JsonPropertyName("if")]
		public string? If { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_failure")]
		public bool? IgnoreFailure { get; set; }

		[JsonInclude]
		[JsonPropertyName("on_failure")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Ingest.ProcessorContainer>? OnFailure { get; set; }

		[JsonInclude]
		[JsonPropertyName("tag")]
		public string? Tag { get; set; }
	}

	[ConvertAs(typeof(RemoveProcessor))]
	public partial interface IRemoveProcessor
	{
		Elastic.Clients.Elasticsearch.Fields Field { get; set; }

		bool? IgnoreMissing { get; set; }
	}

	public partial class RemoveProcessorDescriptor : DescriptorBase<RemoveProcessorDescriptor, IRemoveProcessor>, IRemoveProcessor
	{
		Elastic.Clients.Elasticsearch.Fields IRemoveProcessor.Field { get; set; }

		bool? IRemoveProcessor.IgnoreMissing { get; set; }
	}

	public partial class RemoveProcessor : Ingest.ProcessorBase, IRemoveProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Fields Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }
	}

	[ConvertAs(typeof(RenameProcessor))]
	public partial interface IRenameProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	public partial class RenameProcessorDescriptor : DescriptorBase<RenameProcessorDescriptor, IRenameProcessor>, IRenameProcessor
	{
		Elastic.Clients.Elasticsearch.Field IRenameProcessor.Field { get; set; }

		bool? IRenameProcessor.IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field IRenameProcessor.TargetField { get; set; }
	}

	public partial class RenameProcessor : Ingest.ProcessorBase, IRenameProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	[ConvertAs(typeof(SetProcessor))]
	public partial interface ISetProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? Override { get; set; }

		object Value { get; set; }
	}

	public partial class SetProcessorDescriptor : DescriptorBase<SetProcessorDescriptor, ISetProcessor>, ISetProcessor
	{
		Elastic.Clients.Elasticsearch.Field ISetProcessor.Field { get; set; }

		bool? ISetProcessor.Override { get; set; }

		object ISetProcessor.Value { get; set; }
	}

	public partial class SetProcessor : Ingest.ProcessorBase, ISetProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("override")]
		public bool? Override { get; set; }

		[JsonInclude]
		[JsonPropertyName("value")]
		public object Value { get; set; }
	}

	[ConvertAs(typeof(SetSecurityUserProcessor))]
	public partial interface ISetSecurityUserProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		IEnumerable<string>? Properties { get; set; }
	}

	public partial class SetSecurityUserProcessorDescriptor : DescriptorBase<SetSecurityUserProcessorDescriptor, ISetSecurityUserProcessor>, ISetSecurityUserProcessor
	{
		Elastic.Clients.Elasticsearch.Field ISetSecurityUserProcessor.Field { get; set; }

		IEnumerable<string>? ISetSecurityUserProcessor.Properties { get; set; }
	}

	public partial class SetSecurityUserProcessor : Ingest.ProcessorBase, ISetSecurityUserProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("properties")]
		public IEnumerable<string>? Properties { get; set; }
	}

	[ConvertAs(typeof(SortProcessor))]
	public partial interface ISortProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.SortOrder Order { get; set; }

		Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	public partial class SortProcessorDescriptor : DescriptorBase<SortProcessorDescriptor, ISortProcessor>, ISortProcessor
	{
		Elastic.Clients.Elasticsearch.Field ISortProcessor.Field { get; set; }

		Elastic.Clients.Elasticsearch.Global.Search.SortOrder ISortProcessor.Order { get; set; }

		Elastic.Clients.Elasticsearch.Field ISortProcessor.TargetField { get; set; }
	}

	public partial class SortProcessor : Ingest.ProcessorBase, ISortProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("order")]
		public Elastic.Clients.Elasticsearch.Global.Search.SortOrder Order { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	[ConvertAs(typeof(SplitProcessor))]
	public partial interface ISplitProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		bool? PreserveTrailing { get; set; }

		string Separator { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	public partial class SplitProcessorDescriptor : DescriptorBase<SplitProcessorDescriptor, ISplitProcessor>, ISplitProcessor
	{
		Elastic.Clients.Elasticsearch.Field ISplitProcessor.Field { get; set; }

		bool? ISplitProcessor.IgnoreMissing { get; set; }

		bool? ISplitProcessor.PreserveTrailing { get; set; }

		string ISplitProcessor.Separator { get; set; }

		Elastic.Clients.Elasticsearch.Field? ISplitProcessor.TargetField { get; set; }
	}

	public partial class SplitProcessor : Ingest.ProcessorBase, ISplitProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("preserve_trailing")]
		public bool? PreserveTrailing { get; set; }

		[JsonInclude]
		[JsonPropertyName("separator")]
		public string Separator { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	[ConvertAs(typeof(TrimProcessor))]
	public partial interface ITrimProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	public partial class TrimProcessorDescriptor : DescriptorBase<TrimProcessorDescriptor, ITrimProcessor>, ITrimProcessor
	{
		Elastic.Clients.Elasticsearch.Field ITrimProcessor.Field { get; set; }

		bool? ITrimProcessor.IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? ITrimProcessor.TargetField { get; set; }
	}

	public partial class TrimProcessor : Ingest.ProcessorBase, ITrimProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	[ConvertAs(typeof(UppercaseProcessor))]
	public partial interface IUppercaseProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	public partial class UppercaseProcessorDescriptor : DescriptorBase<UppercaseProcessorDescriptor, IUppercaseProcessor>, IUppercaseProcessor
	{
		Elastic.Clients.Elasticsearch.Field IUppercaseProcessor.Field { get; set; }

		bool? IUppercaseProcessor.IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? IUppercaseProcessor.TargetField { get; set; }
	}

	public partial class UppercaseProcessor : Ingest.ProcessorBase, IUppercaseProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	[ConvertAs(typeof(UrlDecodeProcessor))]
	public partial interface IUrlDecodeProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool? IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	public partial class UrlDecodeProcessorDescriptor : DescriptorBase<UrlDecodeProcessorDescriptor, IUrlDecodeProcessor>, IUrlDecodeProcessor
	{
		Elastic.Clients.Elasticsearch.Field IUrlDecodeProcessor.Field { get; set; }

		bool? IUrlDecodeProcessor.IgnoreMissing { get; set; }

		Elastic.Clients.Elasticsearch.Field? IUrlDecodeProcessor.TargetField { get; set; }
	}

	public partial class UrlDecodeProcessor : Ingest.ProcessorBase, IUrlDecodeProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool? IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field? TargetField { get; set; }
	}

	[ConvertAs(typeof(UserAgentProcessor))]
	public partial interface IUserAgentProcessor
	{
		Elastic.Clients.Elasticsearch.Field Field { get; set; }

		bool IgnoreMissing { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Ingest.UserAgentProperty> Options { get; set; }

		string RegexFile { get; set; }

		Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}

	public partial class UserAgentProcessorDescriptor : DescriptorBase<UserAgentProcessorDescriptor, IUserAgentProcessor>, IUserAgentProcessor
	{
		Elastic.Clients.Elasticsearch.Field IUserAgentProcessor.Field { get; set; }

		bool IUserAgentProcessor.IgnoreMissing { get; set; }

		IEnumerable<Elastic.Clients.Elasticsearch.Ingest.UserAgentProperty> IUserAgentProcessor.Options { get; set; }

		string IUserAgentProcessor.RegexFile { get; set; }

		Elastic.Clients.Elasticsearch.Field IUserAgentProcessor.TargetField { get; set; }
	}

	public partial class UserAgentProcessor : Ingest.ProcessorBase, IUserAgentProcessor
	{
		[JsonInclude]
		[JsonPropertyName("field")]
		public Elastic.Clients.Elasticsearch.Field Field { get; set; }

		[JsonInclude]
		[JsonPropertyName("ignore_missing")]
		public bool IgnoreMissing { get; set; }

		[JsonInclude]
		[JsonPropertyName("options")]
		public IEnumerable<Elastic.Clients.Elasticsearch.Ingest.UserAgentProperty> Options { get; set; }

		[JsonInclude]
		[JsonPropertyName("regex_file")]
		public string RegexFile { get; set; }

		[JsonInclude]
		[JsonPropertyName("target_field")]
		public Elastic.Clients.Elasticsearch.Field TargetField { get; set; }
	}
}